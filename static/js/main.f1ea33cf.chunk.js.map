{"version":3,"sources":["Search/SearchResultItem.js","Search/SearchResult.js","actions.js","actionTypes.js","usda.js","Search/SearchBar.js","Logo.js","Search/SearchPage.js","Report/Breadcrumbs.js","Report/ProximatesChart.js","Report/Comparator.js","Report/Analysis.js","Report/Report.js","Report/Loading.js","Report/ReportPage.js","selectors.js","ErrorBoundary.js","Table/TablePage.js","Table/CompareToaster.js","rootReducer.js","rootEpic.js","store.js","App.js","serviceWorker.js","index.js"],"names":["SearchResultItem","className","to","this","props","item","ndbno","name","manu","ds","Component","SearchResult","handleItemClick","event","push","target","value","bind","items","sortBy","result","list","query","q","start","end","Number","total","map","index","key","mapDispatchToProps","connect","state","setQuery","type","payload","setDataSource","dataSource","search","getReport","compareInsert","amount","groupOrder","compareNutrients","a","b","indexOf","group","groupOrderNumber","nutrient","dataSourceIdentifierLookup","BOTH","STANDARD_REFERENCE","BRANDED_FOOD_PRODUCTS","dataSourceIdentifiers","Object","keys","decodeDataSourceIdentifier","identifier","getNutrient","food","find","nutrients","getNutrientValue","undefined","pivotNutrients","report","reduce","referenceIntake","Energy","Cholesterol","Protein","Riboflavin","Thiamin","Niacin","labels","SearchBar","stringifyState","searchQuery","searchDataSource","handleInputChange","handleDataSourceChange","onChange","autoFocus","checked","app","Logo","SearchPage","urlParams","URLSearchParams","window","location","has","get","searching","error","errors","style","color","message","searchResult","searchError","Breadcrumbs","fragments","split","fragment","pathname","slice","join","ProximatesChart","getValue","mass","totalFat","totalCarbs","protein","water","other","data01","saturatedFats","polySaturatedFats","monoSaturatedFats","otherFats","dietaryFiber","sugar","data02","colors","legend","entry","width","height","data","dataKey","cx","cy","innerRadius","outerRadius","fill","isAnimationActive","labelLine","label","midAngle","percent","sliceWideEnough","RADIAN","Math","PI","radius","x","cos","y","sin","Intl","NumberFormat","maximumFractionDigits","format","textAnchor","dominantBaseline","flatten","position","PureComponent","Comparator","bananas","round","calories","apples","bread","bubbleTeas","times","n","Analysis","Report","datum","precision","factor","toFixed","unit","reference","datumCell","main","referenceCell","tableRow","doubleTable","datumCells","referenceCells","datumCellChucks","chunk","referenceCellChucks","datumCellChunk","tableRows","nutrientGroups","groupBy","groupByNutrientGroup","sort","sortNutrientsByGroup","row","Loading","css","ReportPage","sliderPrecision","urlNDBNO","match","params","loaded","onClick","filter","e","minValue","maxValue","step","setMass","formatLabel","isUndefined","getReportResult","cachedReports","reports","cachedReportsIds","createSelector","ErrorBoundary","values","errorInfo","console","hasError","children","React","staticColumns","selector","sortable","compact","compareSet","compare","log","router","idsRaw","ids","cachedIds","pick","withRouter","useDeepCompareEffect","difference","forEach","id","columns","useMemo","dynamicColumns","chain","flatMap","uniq","title","responsive","dense","SpaceBar","CompareToaster","compareClear","compareRemove","isVisible","length","useState","isExpanded","setIsExpanded","desc","display","initialState","appReducer","getReportNDBNO","gettingReport","getReportError","uniqBy","USDA_API_KEY","rootEpic","combineEpics","action$","state$","pipe","ofType","debounceTime","action","tap","mergeMap","ajax","getJSON","encodeURIComponent","dataSourceCode","response","searchFulfilled","catchError","of","xhr","foods","getReportFulfilled","epicMiddleware","createEpicMiddleware","history","createBrowserHistory","basename","process","App","path","exact","component","TablePage","Boolean","hostname","ReactDOM","render","store","preloadedState","createStore","combineReducers","connectRouter","compose","applyMiddleware","routerMiddleware","__REDUX_DEVTOOLS_EXTENSION__","run","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+UA6BeA,E,uKAxBX,OACE,yBAAKC,UAAU,oBACb,kBAAC,IAAD,CAAMC,GAAE,kBAAaC,KAAKC,MAAMC,KAAKC,QACnC,4BAAKH,KAAKC,MAAMC,KAAKE,OAEvB,yBAAKN,UAAU,yBACb,0BAAMA,UAAU,mCACd,2CACCE,KAAKC,MAAMC,KAAKC,OAEnB,0BAAML,UAAU,mCACd,kDACCE,KAAKC,MAAMC,KAAKG,MAEnB,0BAAMP,UAAU,mCACd,iDACCE,KAAKC,MAAMC,KAAKI,U,GAlBEC,aCGzBC,E,kDACJ,WAAYP,GAAQ,IAAD,8BACjB,cAAMA,IAIRQ,gBAAkB,SAACC,GACjB,EAAKT,MAAMU,KAAX,kBAA2BD,EAAME,OAAOC,SAJxC,EAAKJ,gBAAkB,EAAKA,gBAAgBK,KAArB,gBAFN,E,qDAUjB,IAAIC,EAAQC,iBAAOhB,KAAKC,MAAMgB,OAAOC,KAAKhB,KAAM,QAC5CiB,EAAQnB,KAAKC,MAAMgB,OAAOC,KAAKE,EAC/Bd,EAAKN,KAAKC,MAAMgB,OAAOC,KAAKZ,GAC5Be,EAAQrB,KAAKC,MAAMgB,OAAOC,KAAKG,MAAQ,EACvCC,EAAMC,OAAOvB,KAAKC,MAAMgB,OAAOC,KAAKI,KACpCE,EAAQxB,KAAKC,MAAMgB,OAAOC,KAAKM,MAEnC,OACE,yBAAK1B,UAAU,gBACb,yBAAKA,UAAU,cAAf,eACeqB,EADf,SAC4Bb,EAD5B,MACmCe,EADnC,OAC8CC,EAD9C,OACuDE,EADvD,MAGA,4BACGT,EAAMU,KAAI,SAACvB,EAAMwB,GAAP,OACT,wBAAIC,IAAKD,GACP,kBAAC,EAAD,CAAkBxB,KAAMA,c,GA1BXK,aAqCrBqB,EAAqB,CACzBjB,UAGakB,eANS,SAACC,GAAD,MAAY,KAMIF,EAAzBC,CAA6CrB,GC/B/CuB,EAAW,SAACZ,GAAD,MAAY,CAAEa,KChBb,YDgB8BC,QAASd,IACnDe,EAAgB,SAACC,GAAD,MAAiB,CAC5CH,KCjB6B,kBDkB7BC,QAASE,IAEEC,EAAS,iBAAO,CAAEJ,KCnBT,WD4BTK,EAAY,SAAClC,GAAD,MAAY,CAAE6B,KCzBb,aDyB+BC,QAAS9B,IAcrDmC,EAAgB,SAACnC,EAAOoC,GAAR,MAAoB,CAC/CP,KCnC4B,iBDoC5BC,QAAS,CAAE9B,QAAOoC,Y,eE5CPC,EAAa,CACxB,aACA,SACA,WACA,WACA,SAOWC,EAAmB,SAACC,EAAGC,GAClC,OAAOH,EAAWI,QAAQF,EAAEG,OAASL,EAAWI,QAAQD,EAAEE,QAG/CC,EAAmB,SAACC,GAC/B,OAAOP,EAAWI,QAAQG,EAASF,QAKxBG,EAA6B,CACxCC,KAAM,MACNC,mBAAoB,qBACpBC,sBAAuB,yBAGZC,EAAwBC,OAAOC,KAAKN,GAEpCO,EAA6B,SAACC,GAAD,OACxCR,EAA2BQ,IAEhBC,EAAc,SAACC,EAAMtD,GAAP,OAAgBuD,eAAKD,EAAKE,UAAW,CAAExD,UAErDyD,EAAmB,SAACH,EAAMtD,GAAP,OAC9BmB,OAAOkC,EAAYC,EAAMtD,GAAQqD,EAAYC,EAAMtD,GAAMS,WAAQiD,IAEtDC,EAAiB,SAACC,GAAD,mBAAC,eAC1BA,GADyB,IAE5BJ,UAAWI,EAAOJ,UAAUK,QAC1B,SAACL,EAAWb,GAAZ,mBAAC,eAA8Ba,GAA/B,kBAA2Cb,EAAS3C,KAAO2C,MAC3D,OAISmB,EAAkB,CAC7BC,OAAQ,IACR,oBAAqB,GACrB,+BAAgC,GAChCC,YAAa,IACb,8BAA+B,IAC/B,uBAAwB,GACxBC,QAAS,GACT,iCAAkC,GAClC,cAAe,IACf,eAAgB,EAChB,+BAAgC,GAChC,4BAA6B,IAC7BC,WAAY,IACZC,QAAS,IACTC,OAAQ,GACR,cAAe,IACf,iBAAkB,IAClB,YAAa,IACb,sBAAuB,GACvB,cAAe,IACf,WAAY,GACZ,gBAAiB,IACjB,gBAAiB,IACjB,aAAc,KACd,eAAgB,KAChB,WAAY,GAGDC,EAAS,CACpB,iCAAkC,YAClC,cAAe,aACf,eAAgB,cAChB,+BAAgC,YAChC,4BAA6B,YAC7B,cAAe,UACf,WAAY,OACZ,gBAAiB,YACjB,gBAAiB,aACjB,eAAgB,YAChB,aAAc,SACd,WAAY,QCnFRC,E,kDACJ,WAAYzE,GAAQ,IAAD,8BACjB,cAAMA,IAKR0E,eAAiB,WAGX,IAFJxD,EAEG,uDAFK,EAAKlB,MAAM2E,YACnBzC,EACG,uDADU,EAAKlC,MAAM4E,iBAExB,MAAM,UAAN,OAAiB1D,EAAjB,uBAAqCgB,IAVpB,EAanB2C,kBAAoB,SAACpE,GACnB,EAAKT,MAAM8B,SAASrB,EAAME,OAAOC,OACjC,EAAKZ,MAAMU,KAAK,EAAKgE,eAAejE,EAAME,OAAOC,QAC7C,EAAKZ,MAAM2E,aAAa,EAAK3E,MAAMmC,UAhBtB,EAmBnB2C,uBAAyB,SAACrE,GACxB,EAAKT,MAAMiC,cAAcxB,EAAME,OAAOC,OACtC,EAAKZ,MAAMU,KAAK,EAAKgE,oBAAeb,EAAWpD,EAAME,OAAOC,QACxD,EAAKZ,MAAM2E,aAAa,EAAK3E,MAAMmC,UApBvC,EAAK0C,kBAAoB,EAAKA,kBAAkBhE,KAAvB,gBACzB,EAAKiE,uBAAyB,EAAKA,uBAAuBjE,KAA5B,gBAHb,E,qDAyBT,IAAD,OACP,OACE,yBAAKhB,UAAU,aACb,+BACE,2BACEkC,KAAK,OACLlC,UAAU,aACVe,MAAOb,KAAKC,MAAM2E,YAClBI,SAAUhF,KAAK8E,kBACfG,WAAS,KAGb,6BAVF,mBAYG7B,EAAsB3B,KAAI,SAAC+B,GAAD,OACzB,2BAAO1D,UAAU,uBAAuB6B,IAAK6B,GAC3C,2BACExB,KAAK,QACLlC,UAAU,kBACVe,MAAO2C,EACP0B,QAAS,EAAKjF,MAAM4E,mBAAqBrB,EACzCwB,SAAU,EAAKD,yBAEhBxB,EAA2BC,Y,GAjDhBjD,aA8DlBqB,EAAqB,CACzBG,WACAG,gBACAE,SACAzB,UAGakB,eAZS,SAACC,GAAD,MAAY,CAClC8C,YAAa9C,EAAMqD,IAAIP,YACvBC,iBAAkB/C,EAAMqD,IAAIN,oBAUUjD,EAAzBC,CAA6C6C,GC5D7CU,E,uKAVX,OACE,yBAAKtF,UAAU,QACb,kBAAC,IAAD,CAAMC,GAAG,WACP,0C,GALSQ,aCKb8E,E,kDACJ,WAAYpF,GAAQ,IAAD,sBACjB,cAAMA,GACN,IAAIqF,EAAY,IAAIC,gBAAgBC,OAAOC,SAASrD,QAFnC,OAIfkD,EAAUI,IAAI,eACdJ,EAAUK,IAAI,gBAAkB,EAAK1F,MAAMkC,YAE3C,EAAKlC,MAAMiC,cAAcoD,EAAUK,IAAI,eAErCL,EAAUI,IAAI,SACZJ,EAAUK,IAAI,WAAa,EAAK1F,MAAMkB,QACxC,EAAKlB,MAAM8B,SAASuD,EAAUK,IAAI,UAClC,EAAK1F,MAAMmC,UAGb,EAAKnC,MAAM8B,SAAS,IAfL,E,qDAoBjB,IAAId,EAASjB,KAAKC,MAAM2F,UACtB,gDACkB5F,KAAKC,MAAMkB,MAD7B,OACwC,IACrCoC,EAA2BvD,KAAKC,MAAMkC,YAFzC,OAIEnC,KAAKC,MAAM4F,MACb7F,KAAKC,MAAM4F,MAAMC,OAAOD,MAAMpE,KAAI,SAACoE,EAAOnE,GAAR,OAChC,yBAAKC,IAAKD,EAAOqE,MAAO,CAAEC,MAAO,QAC9BH,EAAMI,YAGTjG,KAAKC,MAAMgB,OACb,kBAAC,EAAD,CAAcA,OAAQjB,KAAKC,MAAMgB,SAC/B,KAEJ,OACE,yBAAKnB,UAAU,cACb,yBAAKA,UAAU,UACb,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,6BACA,yBAAKA,UAAU,mBAAmBmB,Q,GA3CjBV,aA0DnBqB,EAAqB,CACzBG,WACAG,gBACAE,UAGaP,eAfS,SAACC,GAAD,MAAY,CAClC8D,UAAW9D,EAAMqD,IAAIS,UACrBzE,MAAOW,EAAMqD,IAAIP,YACjBzC,WAAYL,EAAMqD,IAAIN,iBACtB5D,OAAQa,EAAMqD,IAAIe,aAElBL,MAAO/D,EAAMqD,IAAIgB,eASqBvE,EAAzBC,CAA6CwD,G,kBCpEtDe,G,8KACM,IAAD,OACHC,EAAYrG,KAAKC,MAAMG,KAAKkG,MAAM,MACtC,OACE,yBAAKxG,UAAU,eACZuG,EAAU5E,KAAI,SAAC8E,EAAU7E,EAAO2E,GAAlB,OACb,0BAAM1E,IAAKD,GAAX,YAEE,kBAAC,IAAD,CACE3B,GAAI,CACFyG,SAAU,UACVpE,OAAO,UAAD,OAAYiE,EACfI,MAAM,EAAG/E,EAAQ,GACjBgF,KAAK,MAFF,uBAEsB,EAAKzG,MAAMkC,aAEzCrC,UAAU,oBAETyG,Y,GAjBWhG,cAgCXsB,eANS,SAACC,GAAD,MAAY,CAClCK,WAAYL,EAAMqD,IAAIN,oBAGG,GAEZhD,CAA6CuE,G,QC/BvCO,E,4MACnBC,SAAW,SAACjF,GAAD,OACRkC,EAAiB,EAAK5D,MAAM+D,OAAQrC,GAAO,EAAK1B,MAAM4G,KAAQ,K,uDAG/D,IAAIC,EAAW9G,KAAK4G,SAAS,qBACzBG,EAAa/G,KAAK4G,SAAS,+BAC3BI,EAAUhH,KAAK4G,SAAS,WACxBK,EAAQjH,KAAK4G,SAAS,SACtBM,EAAQlH,KAAKC,MAAM4G,MAAQC,EAAWC,EAAaC,EAAUC,GAE3DE,EAAS,CACb,CAAE/G,KAAM,YAAaS,MAAOiG,GAC5B,CAAE1G,KAAM,cAAeS,MAAOkG,GAC9B,CAAE3G,KAAM,UAAWS,MAAOmG,GAC1B,CAAE5G,KAAM,QAASS,MAAOoG,GACxB,CAAE7G,KAAM,QAASS,MAAOqG,IAGtBE,EAAgBpH,KAAK4G,SAAS,gCAC9BS,EAAoBrH,KAAK4G,SAAS,sCAClCU,EAAoBtH,KAAK4G,SAAS,sCAClCW,EACFT,EAAWM,EAAgBC,EAAoBC,EAE7CE,EAAexH,KAAK4G,SAAS,wBAC7Ba,EAAQzH,KAAK4G,SAAS,iBAGpBc,EAAS,CACb,CAAEtH,KAAM,iBAAkBS,MAAOwG,GACjC,CAAEjH,KAAM,iBAAkBS,MAAOyG,GACjC,CAAElH,KAAM,gBAAiBS,MAAOuG,GAChC,CAAEhH,KAAM,aAAcS,MAAO0G,GAC7B,CAAEnH,KAAM,gBAAiBS,MAAO2G,GAChC,CAAEpH,KAAM,QAASS,MAAO4G,GACxB,CAAErH,KAAM,cAAeS,MATRkG,EAAaS,EAAeC,GAU3C,CAAErH,KAAM,UAAWS,MAAOmG,GAC1B,CAAE5G,KAAM,QAASS,MAAOoG,GACxB,CAAE7G,KAAM,QAASS,MAAOqG,IA0CtBS,EAAS,CACX,CAAC,UAAW,UAAW,UAAW,WAClC,CAAC,UAAW,UAAW,WACvB,CAAC,WACD,CAAC,WACD,CAAC,YAGCC,EAAST,EAAO1F,KAAI,SAACoG,EAAOnG,GAAR,MAAmB,CACzCb,MAAOgH,EAAMzH,KACb4F,MAAO2B,EAAOjG,GAAO,OAGvB,OACE,kBAAC,IAAD,CAAUoG,MAAO,IAAKC,OAAQ,KAC5B,kBAAC,IAAD,CACEC,KAAMb,EACNc,QAAQ,QACRC,GAAI,IACJC,GAAI,IACJC,YAAa,GACbC,YAAa,GACbC,KAAK,UACLC,mBAAmB,GAElBpB,EAAO1F,KAAI,SAACoG,EAAOnG,GAAR,OACV,kBAAC,IAAD,CAAMC,IAAKD,EAAO4G,KAAMX,EAAOjG,GAAO,SAG1C,kBAAC,IAAD,CACEsG,KAAMN,EACNO,QAAQ,QACRC,GAAI,IACJC,GAAI,IACJC,YAAa,GACbC,YAAa,GACbC,KAAK,MACLE,WAAW,EACXC,MAzEM,SAACxI,GAAW,IAEpBiI,EAQEjI,EARFiI,GACAC,EAOElI,EAPFkI,GACAO,EAMEzI,EANFyI,SACAN,EAKEnI,EALFmI,YACAC,EAIEpI,EAJFoI,YACAxH,EAGEZ,EAHFY,MACAa,EAEEzB,EAFFyB,MACA4G,EACErI,EADFqI,KAGF,IAhBoB,SAACrI,GACrB,OAAOA,EAAM0I,QAAU,IAelBC,CAAgB3I,GAAQ,OAAO,KAEpC,IAAM4I,EAASC,KAAKC,GAAK,IACnBC,EAAS,GAAKZ,GAAeC,EAAcD,GAC3Ca,EAAIf,EAAKc,EAASF,KAAKI,KAAKR,EAAWG,GACvCM,EAAIhB,EAAKa,EAASF,KAAKM,KAAKV,EAAWG,GAK7C,OAJAhI,EAAQ,IAAIwI,KAAKC,aAAa,QAAS,CACrCC,sBAAuB,IACtBC,OAAO3I,GAGR,0BACEoI,EAAGA,EACHE,EAAGA,EACHb,KAAMA,EACNmB,WAAYR,EAAIf,EAAK,QAAU,MAC/BwB,iBAAiB,WAEhBhC,EAAOhG,GAAOtB,KAPjB,IAOwBS,EAPxB,OAmDE0H,mBAAmB,GAElBb,EAAOjG,KAAI,SAACoG,EAAOnG,GAAR,OACV,kBAAC,IAAD,CAAMC,IAAG,QAAW2G,KAAMqB,kBAAQhC,GAAQjG,QAE5C,kBAAC,IAAD,CAAOb,MAAK,UAAKb,KAAKC,MAAM4G,KAAhB,MAA0B+C,SAAS,YAEjD,kBAAC,IAAD,CAAQ3H,QAAS2F,S,GA/HoBiC,iBC0C9BC,E,uKArCX,IAAIC,EAAUjB,KAAKkB,MAAMhK,KAAKC,MAAMgK,SAPlB,KAQdC,EAASpB,KAAKkB,MAAMhK,KAAKC,MAAMgK,SAPlB,IAQbE,EAAQrB,KAAKkB,MAAMhK,KAAKC,MAAMgK,SAPjB,IAQbG,EAAatB,KAAKkB,MAAMhK,KAAKC,MAAMgK,SAPjB,KAStB,OACE,yBAAKnK,UAAU,cACb,yBAAKA,UAAU,qBACb,4BAAKE,KAAKC,MAAMgK,SAAhB,SACA,6BAFF,SAKA,yBAAKnK,UAAU,oBACZuK,gBAAMD,GAAY,SAACE,GAAD,MAAO,kBAC1B,6BACCF,EAHH,uBAKA,yBAAKtK,UAAU,oBACZuK,gBAAMN,GAAS,SAACO,GAAD,MAAO,kBACvB,6BACCP,EAHH,0BAKA,yBAAKjK,UAAU,oBACZuK,gBAAMH,GAAQ,SAACI,GAAD,MAAO,kBACtB,6BACCJ,EAHH,kBAKA,yBAAKpK,UAAU,oBACZuK,gBAAMF,GAAO,SAACG,GAAD,MAAO,kBACrB,6BACCH,EAHH,qC,GA7BiB5J,aCHnBgK,E,uKAEF,IAAIN,EACDjK,KAAKC,MAAM+D,OAAOJ,UAAUD,MAC3B,SAACZ,GAAD,MAAgC,WAAlBA,EAAS3C,QACvBS,MACAb,KAAKC,MAAM4G,KACb,IAEF,OACE,yBAAK/G,UAAU,YACb,kBAAC,EAAD,CAAiBkE,OAAQhE,KAAKC,MAAM+D,OAAQ6C,KAAM7G,KAAKC,MAAM4G,OAC7D,kBAAC,EAAD,CAAYoD,SAAUA,S,GAZP1J,aAwBRsB,gBANS,SAACC,GAAD,MAAY,CAClC+E,KAAM/E,EAAMqD,IAAI0B,QAGS,GAEZhF,CAA6C0I,GClBtDC,G,4MACJC,MAAQ,SAAC9I,GAAwB,IAAnB+I,EAAkB,uDAAN,EACpB3H,EAAWU,EAAY,EAAKxD,MAAM+D,OAAQrC,GAC9C,OAAKoB,EACC,GAAN,OAAUxB,OAAOwB,EAASlC,MAAQ,EAAKZ,MAAM0K,QAAQC,QAAQF,GAA7D,YACE3H,EAAS8H,MAFW,M,EAMxBC,UAAY,SAACnJ,GACX,OAAOuC,EAAgBvC,GAAhB,UACAmH,KAAKkB,MACJvG,EAAY,EAAKxD,MAAM+D,OAAQrC,GAAKd,MAAQ,EAAKZ,MAAM0K,OACvDzG,EAAgBvC,GAChB,KAJD,MAMH,M,EAGNoJ,UAAY,SAACpJ,GAAD,IAAM8G,EAAN,uDAAc9G,EAAKqJ,EAAnB,8CACV,wBAAIlL,UAAS,yBAAoBkL,GAAQ,aACtCA,EAAO,gCAASvC,EAAT,KAA4BA,EAAQ,IAC3C,EAAKgC,MAAM9I,K,EAGhBsJ,cAAgB,SAACtJ,GAAD,OACd,wBAAI7B,UAAU,kBAAkB,EAAKgL,UAAUnJ,K,EAGjDuJ,SAAW,SAACxJ,EAAOC,GAAoC,IAA/B8G,EAA8B,uDAAtB9G,EAAKqJ,EAAiB,wDACpD,OAAIvH,EAAY,EAAKxD,MAAM+D,OAAQrC,GAE/B,wBAAIA,IAAKD,GACN,EAAKqJ,UAAUpJ,EAAK8G,EAAOuC,GAC3B,EAAKC,cAActJ,IAIjB,M,EAIXwJ,YAAc,SAACvH,GACb,IAAIwH,EAAaxH,EAAUnC,KAAI,SAACsB,GAAD,OAC7B,EAAKgI,UAAUhI,EAAS3C,KAAMqE,EAAO1B,EAAS3C,OAAO,MAEnDiL,EAAiBzH,EAAUnC,KAAI,SAACsB,GAAD,OACjC,EAAKkI,cAAclI,EAAS3C,SAG1BkL,EAAkBC,gBAAMH,EAAY,GACpCI,EAAsBD,gBAAMF,EAAgB,GAEhD,OACE,2BAAOvL,UAAU,YACf,+BACGwL,EAAgB7J,KAAI,SAACgK,EAAgB/J,GAAjB,OACnB,wBAAIC,IAAKD,GACN4J,EAAgB5J,GAAO,GACvB8J,EAAoB9J,GAAO,GAC3B4J,EAAgB5J,GAAO,IAAM,wBAAI5B,UAAU,kBAC3C0L,EAAoB9J,GAAO,IAC1B,wBAAI5B,UAAU,0B,EAS5B4L,UAAY,CACV,CAAEjD,MAAO,WAAY9G,IAAK,SAAUqJ,MAAM,GAC1C,CAAEvC,MAAO,YAAa9G,IAAK,oBAAqBqJ,MAAM,GACtD,CACEvC,MAAO,gBACP9G,IAAK,+BACLqJ,MAAM,GAER,CACEvC,MAAO,sBACP9G,IAAK,qCACLqJ,MAAM,GAER,CACEvC,MAAO,sBACP9G,IAAK,qCACLqJ,MAAM,GAER,CAAEvC,MAAO,QAAS9G,IAAK,QAASqJ,MAAM,GACtC,CAAEvC,MAAO,cAAe9G,IAAK,cAAeqJ,MAAM,GAClD,CAAEvC,MAAO,SAAU9G,IAAK,aAAcqJ,MAAM,GAC5C,CAAEvC,MAAO,YAAa9G,IAAK,eAAgBqJ,MAAM,GACjD,CACEvC,MAAO,qBACP9G,IAAK,8BACLqJ,MAAM,GAER,CAAEvC,MAAO,gBAAiB9G,IAAK,uBAAwBqJ,MAAM,GAC7D,CAAEvC,MAAO,QAAS9G,IAAK,gBAAiBqJ,MAAM,GAC9C,CAAEvC,MAAO,UAAW9G,IAAK,UAAWqJ,MAAM,I,uDAGlC,IAAD,OAEHW,ER9F4B,SAAC/H,GAAD,OAAegI,kBAAQhI,EAAW,SQ8F7CiI,CR1GW,SAACjI,GACnC,OAAOA,EAAUkI,KAAKrJ,GQwGJsJ,CAAqB/L,KAAKC,MAAM+D,OAAOJ,YAGvD,OACE,yBAAK9D,UAAU,UACb,2BAAOA,UAAU,YACf,+BACGE,KAAK0L,UAAUjK,KAAI,SAACuK,EAAKtK,GAAN,OAClB,EAAKwJ,SAASxJ,EAAOsK,EAAIrK,IAAKqK,EAAIvD,MAAOuD,EAAIhB,WAIlDW,EAAc,UACb3L,KAAKmL,YAAYQ,EAAc,UAChCA,EAAc,UACb3L,KAAKmL,YAAYQ,EAAc,UAChCA,EAAc,OAAa3L,KAAKmL,YAAYQ,EAAc,Y,GAxH9CpL,aAqINsB,gBAPS,SAACC,GAAD,MAAY,CAClC+E,KAAM/E,EAAMqD,IAAI0B,KAChB8D,OAAQ7I,EAAMqD,IAAI0B,KAAO,OAGA,GAEZhF,CAA6C2I,I,6hBC7I5D,IA4BeyB,GA5BC,SAAChM,GACf,OACE,yBACEH,UAAWoM,aAAF,OADX,YCUEC,G,kDACJ,WAAYlM,GAAQ,IAAD,8BACjB,cAAMA,IAKRmM,gBAAkB,SAACvF,GACjB,OAAIA,EAAO,GAAW,EAClBA,EAAO,IAAY,EACnBA,EAAO,IAAY,GAChB,IARP,EAAKwF,SAAW,EAAKpM,MAAMqM,MAAMC,OAAOpM,MACxC,EAAKF,MAAMoC,UAAU,EAAKgK,UAHT,E,qDAaT,IAAD,EACgCrM,KAAKC,MAApCqC,EADD,EACCA,cAAenC,EADhB,EACgBA,MAAO0G,EADvB,EACuBA,KAC9B,OACE,yBAAK/G,UAAU,cACb,yBAAKA,UAAU,UACb,6BACE,4BACGE,KAAKC,MAAMuM,OAAX,UACMxM,KAAKC,MAAMG,MADjB,mCAE+BJ,KAAKqM,UACrC,4BAAQI,QAAS,kBAAMnK,EAAcnC,EAAO0G,KAA5C,YAIF,yBAAK/G,UAAU,cACZE,KAAKC,MAAMuM,QACV,+BACG,CAACxM,KAAKC,MAAMK,GAAIN,KAAKC,MAAMI,KAAML,KAAKC,MAAME,OAC1CuM,QAAO,SAACC,GAAD,OAAOA,KACdjG,KAAK,YAIb1G,KAAKC,MAAMuM,QAAU,kBAAC,EAAD,CAAapM,KAAMJ,KAAKC,MAAMG,OACpD,kBAAC,IAAD,CAAML,GAAG,WAAWD,UAAU,iBAA9B,qBAGA,kBAAC,IAAD,CACEA,UAAU,YACV8M,SAAU,EACVC,SAAU,IACVC,KAAM9M,KAAKoM,gBAAgBpM,KAAKC,MAAM4G,MACtChG,MAAOb,KAAKC,MAAM4G,KAClB7B,SAAUhF,KAAKC,MAAM8M,QACrBC,YAAa,SAACnM,GAAD,qBAAmBA,EAAnB,WAIlBb,KAAKC,MAAMuM,OACV,yBAAK1M,UAAU,wBACb,yBAAKA,UAAU,qBACb,kBAAC,GAAD,CAAQkE,OAAQhE,KAAKC,MAAM+D,UAE7B,yBAAKlE,UAAU,uBACb,kBAAC,GAAD,CAAUkE,OAAQhE,KAAKC,MAAM+D,WAIjC,kBAAC,GAAD,W,GA9DezD,aA+EnBqB,GAAqB,CACzBS,YACA0K,QZzDqB,SAAClG,GAAD,MAAW,CAAE7E,KC/BZ,WD+B4BC,QAAS4E,IY0D3DvE,iBAGaT,gBAhBS,SAACC,GAAD,MAAY,CAClC0K,QAASS,sBAAYnL,EAAMqD,IAAI+H,iBAC/BlJ,OAAQlC,EAAMqD,IAAI+H,gBAClB9M,KAAMuF,cAAI7D,EAAMqD,IAAI+H,gBAAiB,aACrC5M,GAAIqF,cAAI7D,EAAMqD,IAAI+H,gBAAiB,WACnC7M,KAAMsF,cAAI7D,EAAMqD,IAAI+H,gBAAiB,aACrC/M,MAAOwF,cAAI7D,EAAMqD,IAAI+H,gBAAiB,cACtCrG,KAAM/E,EAAMqD,IAAI0B,QASsBjF,GAAzBC,CAA6CsK,I,mDClG/CgB,GAAgB,SAACrL,GAAD,OAAWA,EAAMqD,IAAIiI,SACrCC,GAAmBC,aAAe,CAACH,IAAgB9J,OAAOC,MCsBxDiK,IDrBqBD,aAClC,CAACH,IACD9J,OAAOmK,Q,kDCHP,WAAYvN,GAAQ,IAAD,8BACjB,cAAMA,IACD6B,MAAQ,CAAE+D,MAAO,MAFL,E,8DASDA,EAAO4H,GACvBC,QAAQ7H,MAAMA,EAAO4H,K,+BAIrB,OAAIzN,KAAK8B,MAAM6L,SACN,kDAGF3N,KAAKC,MAAM2N,Y,gDAbY/H,GAC9B,MAAO,CAAEA,a,GAPegI,IAAMtN,Y,6GCelC,IAAMuN,GAAgB,CACpB,CACE1N,KAAM,OACN2N,SAAU,YACVC,UAAU,EACVC,SAAS,GAEX,CACE7N,KAAM,QACN2N,SAAU,aACVC,UAAU,EACVC,SAAS,IA2EPrM,GAAqB,CACzBS,YACA6L,WfjEwB,SAACC,GAAD,MAAc,CACtCnM,KChCyB,cDiCzBC,QAASkM,KekEItM,gBAlBS,SAACC,GACvB4L,QAAQU,IAAI,CAAE3I,SAAU3D,EAAMuM,OAAO5I,WACrC,IAAM6I,EAAS,IAAI/I,gBACjBI,cAAI7D,EAAO,yBAA0B,KACrC6D,IAAI,OACA4I,EAAMD,EAASA,EAAOhI,MAAM,KAAO,GACzC,MAAO,CACLkI,UAAWnB,GAAiBvL,GAC5ByM,MACAnB,QAAS/J,OAAOmK,OAAOiB,eAAKtB,GAAcrL,GAAQyM,IAAM9M,IAAIsC,MAW9DnC,GAFaC,CAGb6M,aA/EuB,SAAC,GAMnB,IALLH,EAKI,EALJA,IACAC,EAII,EAJJA,UACApB,EAGI,EAHJA,QACA/K,EAEI,EAFJA,UACA6L,EACI,EADJA,WAEAR,QAAQU,IAAI,CAAEG,QACdI,cAAqB,WACFC,qBAAWL,EAAKC,GACxBK,QAAQxM,KAChB,CAACkM,EAAKC,EAAWnM,IACpBsM,cAAqB,WACnBT,EAAWK,EAAI9M,KAAI,SAACqN,GAAD,MAAS,CAAE3O,MAAO2O,EAAIvM,OAAQ,WAChD,CAACgM,EAAKL,IACT,IAAMa,EAAUC,mBAAQ,WACtB,IAAMC,EAAiBC,gBAAM9B,GAC1B3L,IAAI,aACJ0N,QAAQ9L,OAAOmK,QACfxM,OAAO8B,GACPrB,IAAI,QACJ2N,OACA3N,KAAI,SAACrB,GAAD,MAAW,CACdA,OACA2N,SAAU,SAAC/B,GAAD,OAASrG,cAAIqG,EAAD,oBAAmB5L,EAAnB,UAAiC,MACvD4N,UAAU,EACVC,SAAS,MAEVpN,QACH,MAAM,GAAN,OAAWiN,GAAX,aAA6BmB,MAC5B,CAAC7B,IACJ,OACE,yBACEtN,UAAWoM,aAAF,OAIT,kBAAC,EAAD,MACA,kBAAC,GAAD,KACE,kBAAC,KAAD,CACE6C,QAASA,EACT/G,KAAMoF,EACNiC,MAAM,UACNC,YAAU,EACVC,OAAK,U,kwCCpEf,IAAMC,GAAW,SAACvP,GAAD,OACf,uCACEH,UAAWoM,aAAF,OAKLjM,KAIKwP,GAAiBf,aAC5B,YAAyD,IAAtDP,EAAqD,EAArDA,QAASuB,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,cAAelK,EAAe,EAAfA,SACjCmK,EAAYzB,EAAQ0B,OAAS,GAA2B,aAAtBpK,EAASe,SADK,EAElBsJ,oBAAS,GAFS,oBAE/CC,EAF+C,KAEnCC,EAFmC,KAGhDzB,EAAM9M,cAAI0M,EAAS,SAASzH,KAAK,KACvC,OACE,yBACE5G,UAAWoM,aAAF,KACI0D,EAAY,UAAY,SAUrC,yBACE9P,UAAWoM,aAAF,MAMTO,QAAS,kBAAMuD,GAAeD,KAE9B,wBACEjQ,UAAWoM,aAAF,OADX,cAKa,mCAASiC,EAAQ0B,OAAjB,MAEZE,EAAa,gBAAQ,iBAExB,2BACEjQ,UAAWoM,aAAF,KACI6D,EAAa,UAAY,SAMtC,+BACG5B,EAAQ1M,KAAI,SAACvB,GAAD,OACX,wBAAIyB,IAAKzB,EAAKC,OACZ,wBACEL,UAAWoM,aAAF,MAMTmD,MAAOnP,EAAK8D,OAAS9D,EAAK8D,OAAOiM,KAAK7P,KAAOF,EAAKC,OAEjDD,EAAK8D,OAAS9D,EAAK8D,OAAOiM,KAAK7P,KAAOF,EAAKC,OAE9C,4BAAKD,EAAKqC,OAAV,MACA,4BACE,4BAAQkK,QAAS,kBAAMkD,EAAczP,EAAKC,SAA1C,YAMV,kBAAC,GAAD,CACE4F,MAAO,CACLmK,QAASH,EAAa,OAAS,SAGjC,4BAAQtD,QAASiD,GAAjB,oBACA,kBAAC,IAAD,CAAM3P,GAAE,uBAAkBwO,IAA1B,yBAcJ3M,GAAqB,CACzB8N,ahBrD0B,SAACvP,GAAD,MAAY,CACtC6B,KC1C2B,kBe+F3B2N,chB1D2B,SAACxP,GAAD,MAAY,CACvC6B,KCvC4B,iBDwC5BC,QAAS9B,KgB2DI0B,gBAZS,SAACC,GAAD,MAAY,CAClCqM,QAASrM,EAAMqD,IAAIgJ,QAAQ1M,KAAI,SAACvB,GAAD,mBAAC,eAC3BA,GAD0B,IAE7B8D,OAAQlC,EAAMqD,IAAIiI,QAAQlN,EAAKC,eASKyB,GAAzBC,CAA6C4N,I,+CC3FtDU,GAAe,CACnBvK,WAAW,EACXhB,YAAa,GACbC,iBAAkB,qBAClBgC,KAAM,IACNuG,QAAS,GACTe,QAAS,IAGLiC,GAAa,WAA8C,IAA7CtO,EAA4C,uDAApCqO,GAAoC,yCAApBnO,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAEhD,OADAyL,QAAQU,IAAIpM,EAAMC,GACVD,GACN,IhB/BqB,YgBgCnB,OAAO,2BACFF,GADL,IAEE8C,YAAa3C,EACbiE,kBAAcpC,EACdqC,iBAAarC,IAGjB,IhBtC2B,kBgBuCzB,OAAO,2BACFhC,GADL,IAEE+C,iBAAkB5C,EAClBiE,kBAAcpC,EACdqC,iBAAarC,IAGjB,IhB7CkB,SgB8ChB,MAA0B,KAAtBhC,EAAM8C,YACD,2BACF9C,GADL,IAEE8D,WAAW,EACXM,kBAAcpC,EACdqC,iBAAarC,IAGR,2BACFhC,GADL,IAEE8D,WAAW,EACXM,kBAAcpC,EACdqC,iBAAarC,IAInB,IhB7D4B,mBgB8D1B,OAAO,2BAAKhC,GAAZ,IAAmBoE,aAAcjE,EAAS2D,WAAW,IAEvD,IhB/D2B,kBgBgEzB,OAAO,2BAAK9D,GAAZ,IAAmBqE,YAAalE,EAAS2D,WAAW,IAEtD,IhBjEsB,agBkEpB,OAAO,2BACF9D,GADL,IAEEuO,eAAgBpO,EAChBqO,eAAe,EACfpD,qBAAiBpJ,EACjByM,oBAAgBzM,IAGpB,IhBzEgC,uBgB0E9B,OAAO,2BACFhC,GADL,IAEEoL,gBAAiBjL,EACjBqO,eAAe,EACfD,oBAAgBvM,EAChBsJ,QAAQ,2BAAMtL,EAAMsL,SAAb,kBAAuBnL,EAAQgO,KAAK9P,MAAQ8B,MAGvD,IhBjF+B,sBgBkF7B,OAAO,2BACFH,GADL,IAEEyO,eAAgBtO,EAChBqO,eAAe,EACfD,oBAAgBvM,IAGpB,IhBxFoB,WgByFlB,OAAO,2BAAKhC,GAAZ,IAAmB+E,KAAM5E,IAE3B,IhB1FuB,cgB2FrB,OAAO,2BAAKH,GAAZ,IAAmBqM,QAASlM,IAE9B,IhB5F0B,iBgB6FxB,OAAO,2BACFH,GADL,IAEEqM,QAASqC,iBAAO,CAACvO,GAAF,oBAAcH,EAAMqM,UAAU,WAGjD,IhBjG0B,iBgBkGxB,OAAO,2BACFrM,GADL,IAEEqM,QAASrM,EAAMqM,QAAQzB,QAAO,SAACxM,GAAD,OAAUA,EAAKC,QAAU8B,OAE3D,IhBrGyB,gBgBsGvB,OAAO,2BACFH,GADL,IAEEqM,QAASgC,GAAahC,UAG1B,QACE,OAAOrM,I,oGChGP2O,GAAe,2CAoENC,GADEC,cA1DE,SAACC,EAASC,GAAV,OACjBD,EAAQE,KACNC,ajBjCkB,UiBkClBC,aAAa,KACbtE,cAAO,SAACuE,GAAD,MAA6C,KAAjCJ,EAAOhQ,MAAMsE,IAAIP,eACpCsM,aAAIxD,QAAQU,IAAIyC,EAAOhQ,QACvBsQ,cAAS,SAACF,GAAD,OACPG,KACGC,QADH,sDAEmDZ,GAFnD,cAEqEa,mBAC/DT,EAAOhQ,MAAMsE,IAAIP,aAHvB,gBAdoB2M,EAkBSV,EAAOhQ,MAAMsE,IAAIN,iBAjBjD,CACC5B,KAAMqO,mBAAmB,IACzBpO,mBAAoBoO,mBAAmB,sBACvCnO,sBAAuBmO,mBAAmB,0BAC1CC,MAeKT,KACCrP,cAAI,SAAC+P,GAAD,OACFA,EAAS1L,OlBtBsB,CACzC9D,KCvB6B,kBDwB7BC,QkBqB6BuP,GlB3BA,SAACvQ,GAAD,MAAa,CAC1Ce,KCpB8B,mBDqB9BC,QAAShB,GkB0BKwQ,CAAgBD,MAEtBE,cAAW,SAAC7L,GAAD,OACT8L,aAAG,CACD3P,KjBlDiB,kBiBmDjBC,QAAS4D,EAAM+L,IAAIJ,SACnB3L,OAAO,QA9BI,IAAC0L,SAqCJ,SAACX,GAAD,OACpBA,EAAQE,KACNC,ajB5DsB,ciB6DtBC,aAAa,KACbG,cAAS,SAACF,GAAD,OACPG,KACGC,QADH,0DAEuDZ,GAFvD,kBAE6Ea,mBACvEL,EAAOhP,WAGV6O,KACCrP,cAAI,SAAC+P,GAAD,OACFA,EAASK,MAAM,GAAGhM,MlBzCgB,CAC5C7D,KC7BiC,sBD8BjCC,QkBwCgCuP,GlB9CA,SAACvQ,GAAD,MAAa,CAC7Ce,KC1BkC,uBD2BlCC,QAAShB,GkB6CK6Q,CAAmBN,EAASK,MAAM,GAAGnO,SAE3CgO,cAAW,SAAC7L,GAAD,OACT8L,aAAG,CACD3P,KjB3EqB,sBiB4ErBC,QAAS4D,EAAM+L,IAAIJ,SACnB3L,OAAO,eC7EfkM,GAAiBC,eACVC,GAAUC,aAAqB,CAC1CC,SAAUC,oBCEL,IAAMC,GAAb,uKAEI,OACE,yBAAKvS,UAAU,OACb,kBAAC,KAAD,CAAiBmS,QAASA,GAASE,SAAUC,kBAC3C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,KAAK,IAAIC,OAAK,EAACC,UAAWnN,IACjC,kBAAC,IAAD,CAAOiN,KAAK,UAAUC,OAAK,EAACC,UAAWnN,IACvC,kBAAC,IAAD,CAAOiN,KAAK,iBAAiBE,UAAWrG,KACxC,kBAAC,IAAD,CAAOmG,KAAK,WAAWC,OAAK,EAACC,UAAWC,MAE1C,kBAAC,GAAD,YAXV,GAAyBlS,aAsBVsB,gBAJS,SAACC,GAAD,MAAY,KAET,GAEZD,CAA6CwQ,ICrBxCK,QACW,cAA7BlN,OAAOC,SAASkN,UAEe,UAA7BnN,OAAOC,SAASkN,UAEhBnN,OAAOC,SAASkN,SAASrG,MACvB,2DCTNsG,IAASC,OACP,kBAAC,IAAD,CAAUC,MHEG,SAAwBC,GACrC,IF+Gcd,EE/GRa,EAAQE,cF+GAf,EE9GAA,GF+GdgB,aAAgB,CACd5E,OAAQ6E,aAAcjB,GACtB9M,IAAKiL,MEhHL2C,EACAI,aACEC,aAAgBC,aAAiBpB,IAAUF,IAC3CvM,OAAO8N,8BACL9N,OAAO8N,iCAMb,OAFAvB,GAAewB,IAAI7C,IAEZoC,EGfUA,IACf,kBAAC,KAAD,CAAiBb,QAASA,IACxB,kBAAC,GAAD,QAGJuB,SAASC,eAAe,SDkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,kB","file":"static/js/main.f1ea33cf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass SearchResultItem extends Component {\n  render() {\n    return (\n      <div className=\"SearchResultItem\">\n        <Link to={`/report/${this.props.item.ndbno}`}>\n          <h3>{this.props.item.name}</h3>\n        </Link>\n        <div className=\"SearchResultItem-meta\">\n          <span className=\"SearchResultItem-metaDescriptor\">\n            <strong>ndbno: </strong>\n            {this.props.item.ndbno}\n          </span>\n          <span className=\"SearchResultItem-metaDescriptor\">\n            <strong>Manufacturer: </strong>\n            {this.props.item.manu}\n          </span>\n          <span className=\"SearchResultItem-metaDescriptor\">\n            <strong>Data Source: </strong>\n            {this.props.item.ds}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchResultItem;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { push } from \"connected-react-router\";\nimport { sortBy } from \"lodash\";\nimport SearchResultItem from \"./SearchResultItem\";\n\nclass SearchResult extends Component {\n  constructor(props) {\n    super(props);\n    this.handleItemClick = this.handleItemClick.bind(this);\n  }\n\n  handleItemClick = (event) => {\n    this.props.push(`/report/${event.target.value}`);\n  };\n\n  render() {\n    let items = sortBy(this.props.result.list.item, \"name\");\n    let query = this.props.result.list.q;\n    let ds = this.props.result.list.ds;\n    let start = this.props.result.list.start + 1;\n    let end = Number(this.props.result.list.end);\n    let total = this.props.result.list.total;\n\n    return (\n      <div className=\"SearchResult\">\n        <div className=\"descriptor\">\n          Result for \"{query}\" in \"{ds}\" ({start} to {end} of {total}):\n        </div>\n        <ul>\n          {items.map((item, index) => (\n            <li key={index}>\n              <SearchResultItem item={item}></SearchResultItem>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {\n  push,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResult);\n","import {\n  SEARCH,\n  SEARCH_FULFILLED,\n  SEARCH_REJECTED,\n  GET_REPORT,\n  GET_REPORT_FULFILLED,\n  GET_REPORT_REJECTED,\n  SET_QUERY,\n  SET_DATA_SOURCE,\n  SET_MASS,\n  COMPARE_UPSERT,\n  COMPARE_REMOVE,\n  COMPARE_SET,\n  COMPARE_CLEAR,\n} from \"./actionTypes\";\n\nexport const setQuery = (query) => ({ type: SET_QUERY, payload: query });\nexport const setDataSource = (dataSource) => ({\n  type: SET_DATA_SOURCE,\n  payload: dataSource,\n});\nexport const search = () => ({ type: SEARCH });\nexport const searchFulfilled = (result) => ({\n  type: SEARCH_FULFILLED,\n  payload: result,\n});\nexport const searchRejected = (result) => ({\n  type: SEARCH_REJECTED,\n  payload: result,\n});\nexport const getReport = (ndbno) => ({ type: GET_REPORT, payload: ndbno });\nexport const getReportFulfilled = (result) => ({\n  type: GET_REPORT_FULFILLED,\n  payload: result,\n});\nexport const getReportRejected = (result) => ({\n  type: GET_REPORT_REJECTED,\n  payload: result,\n});\nexport const setMass = (mass) => ({ type: SET_MASS, payload: mass });\nexport const compareSet = (compare) => ({\n  type: COMPARE_SET,\n  payload: compare,\n});\nexport const compareInsert = (ndbno, amount) => ({\n  type: COMPARE_UPSERT,\n  payload: { ndbno, amount },\n});\nexport const compareUpdate = compareInsert;\nexport const compareRemove = (ndbno) => ({\n  type: COMPARE_REMOVE,\n  payload: ndbno,\n});\nexport const compareClear = (ndbno) => ({\n  type: COMPARE_CLEAR,\n});\n","export const SET_QUERY = \"SET_QUERY\";\nexport const SET_DATA_SOURCE = \"SET_DATA_SOURCE\";\nexport const SEARCH = \"SEARCH\";\nexport const SEARCH_FULFILLED = \"SEARCH_FULFILLED\";\nexport const SEARCH_REJECTED = \"SEARCH_REJECTED\";\nexport const GET_REPORT = \"GET_REPORT\";\nexport const GET_REPORT_FULFILLED = \"GET_REPORT_FULFILLED\";\nexport const GET_REPORT_REJECTED = \"GET_REPORT_REJECTED\";\nexport const SET_MASS = \"SET_MASS\";\nexport const COMPARE_SET = \"COMPARE_SET\";\nexport const COMPARE_UPSERT = \"COMPARE_UPSERT\";\nexport const COMPARE_REMOVE = \"COMPARE_REMOVE\";\nexport const COMPARE_CLEAR = \"COMPARE_CLEAR\";\n","import { groupBy, find } from \"lodash\";\n\nexport const groupOrder = [\n  \"Proximates\",\n  \"Lipids\",\n  \"Vitamins\",\n  \"Minerals\",\n  \"Other\",\n];\n\nexport const sortNutrientsByGroup = (nutrients) => {\n  return nutrients.sort(compareNutrients);\n};\n\nexport const compareNutrients = (a, b) => {\n  return groupOrder.indexOf(a.group) - groupOrder.indexOf(b.group);\n};\n\nexport const groupOrderNumber = (nutrient) => {\n  return groupOrder.indexOf(nutrient.group);\n};\n\nexport const groupByNutrientGroup = (nutrients) => groupBy(nutrients, \"group\");\n\nexport const dataSourceIdentifierLookup = {\n  BOTH: \"Any\",\n  STANDARD_REFERENCE: \"Standard Reference\",\n  BRANDED_FOOD_PRODUCTS: \"Branded Food Products\",\n};\n\nexport const dataSourceIdentifiers = Object.keys(dataSourceIdentifierLookup);\n\nexport const decodeDataSourceIdentifier = (identifier) =>\n  dataSourceIdentifierLookup[identifier];\n\nexport const getNutrient = (food, name) => find(food.nutrients, { name });\n\nexport const getNutrientValue = (food, name) =>\n  Number(getNutrient(food, name) ? getNutrient(food, name).value : undefined);\n\nexport const pivotNutrients = (report) => ({\n  ...report,\n  nutrients: report.nutrients.reduce(\n    (nutrients, nutrient) => ({ ...nutrients, [nutrient.name]: nutrient }),\n    {}\n  ),\n});\n\nexport const referenceIntake = {\n  Energy: 2000,\n  \"Total lipid (fat)\": 67,\n  \"Fatty acids, total saturated\": 20,\n  Cholesterol: 300,\n  \"Carbohydrate, by difference\": 300,\n  \"Fiber, total dietary\": 25,\n  Protein: 50,\n  \"Vitamin C, total ascorbic acid\": 60,\n  \"Vitamin B-6\": 1.2,\n  \"Vitamin B-12\": 6,\n  \"Vitamin E (alpha-tocopherol)\": 15,\n  \"Vitamin K (phylloquinone)\": 120,\n  Riboflavin: 1.1,\n  Thiamin: 1.1,\n  Niacin: 14,\n  \"Folate, DFE\": 400,\n  \"Vitamin A, RAE\": 600,\n  \"Vitamin D\": 800,\n  \"Vitamin D (D2 + D3)\": 20,\n  \"Calcium, Ca\": 1000,\n  \"Iron, Fe\": 19,\n  \"Magnesium, Mg\": 420,\n  \"Phosphorus, P\": 700,\n  \"Sodium, Na\": 2400,\n  \"Potassium, K\": 3533,\n  \"Zinc, Zn\": 8,\n};\n\nexport const labels = {\n  \"Vitamin C, total ascorbic acid\": \"Vitamin C\",\n  \"Vitamin B-6\": \"Vitamin B6\",\n  \"Vitamin B-12\": \"Vitamin B12\",\n  \"Vitamin E (alpha-tocopherol)\": \"Vitamin E\",\n  \"Vitamin K (phylloquinone)\": \"Vitamin E\",\n  \"Calcium, Ca\": \"Calcium\",\n  \"Iron, Fe\": \"Iron\",\n  \"Magnesium, Mg\": \"Magnesium\",\n  \"Phosphorus, P\": \"Phosphorus\",\n  \"Potassium, K\": \"Potassium\",\n  \"Sodium, Na\": \"Sodium\",\n  \"Zinc, Zn\": \"Zinc\",\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setQuery, setDataSource, search } from \"../actions\";\nimport { dataSourceIdentifiers, decodeDataSourceIdentifier } from \"../usda\";\nimport { push } from \"connected-react-router\";\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleDataSourceChange = this.handleDataSourceChange.bind(this);\n  }\n\n  stringifyState = (\n    query = this.props.searchQuery,\n    dataSource = this.props.searchDataSource\n  ) => {\n    return `?query=${query}&dataSource=${dataSource}`;\n  };\n\n  handleInputChange = (event) => {\n    this.props.setQuery(event.target.value);\n    this.props.push(this.stringifyState(event.target.value));\n    if (this.props.searchQuery) this.props.search();\n  };\n\n  handleDataSourceChange = (event) => {\n    this.props.setDataSource(event.target.value);\n    this.props.push(this.stringifyState(undefined, event.target.value));\n    if (this.props.searchQuery) this.props.search();\n  };\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <label>\n          <input\n            type=\"text\"\n            className=\"queryInput\"\n            value={this.props.searchQuery}\n            onChange={this.handleInputChange}\n            autoFocus\n          />\n        </label>\n        <br />\n        Data Source:&nbsp;\n        {dataSourceIdentifiers.map((identifier) => (\n          <label className=\"dataSourceInputLabel\" key={identifier}>\n            <input\n              type=\"radio\"\n              className=\"dataSourceInput\"\n              value={identifier}\n              checked={this.props.searchDataSource === identifier}\n              onChange={this.handleDataSourceChange}\n            ></input>\n            {decodeDataSourceIdentifier(identifier)}\n          </label>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searchQuery: state.app.searchQuery,\n  searchDataSource: state.app.searchDataSource,\n});\n\nconst mapDispatchToProps = {\n  setQuery,\n  setDataSource,\n  search,\n  push,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Logo extends Component {\n  render() {\n    return (\n      <div className=\"Logo\">\n        <Link to=\"/search\">\n          <h1>USDA</h1>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Logo;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport SearchResult from \"./SearchResult\";\nimport SearchBar from \"./SearchBar\";\nimport { setQuery, setDataSource, search } from \"../actions\";\nimport Logo from \"../Logo\";\nimport { decodeDataSourceIdentifier } from \"../usda\";\n\nclass SearchPage extends Component {\n  constructor(props) {\n    super(props);\n    let urlParams = new URLSearchParams(window.location.search);\n    if (\n      urlParams.has(\"dataSource\") &&\n      urlParams.get(\"dataSource\") !== this.props.dataSource\n    ) {\n      this.props.setDataSource(urlParams.get(\"dataSource\"));\n    }\n    if (urlParams.has(\"query\")) {\n      if (urlParams.get(\"query\") !== this.props.query) {\n        this.props.setQuery(urlParams.get(\"query\"));\n        this.props.search();\n      }\n    } else {\n      this.props.setQuery(\"\");\n    }\n  }\n\n  render() {\n    let result = this.props.searching ? (\n      <span>\n        Searching for \"{this.props.query}\" in{\" \"}\n        {decodeDataSourceIdentifier(this.props.dataSource)}...\n      </span>\n    ) : this.props.error ? (\n      this.props.error.errors.error.map((error, index) => (\n        <div key={index} style={{ color: \"red\" }}>\n          {error.message}\n        </div>\n      ))\n    ) : this.props.result ? (\n      <SearchResult result={this.props.result} />\n    ) : null;\n\n    return (\n      <div className=\"SearchPage\">\n        <div className=\"header\">\n          <Logo />\n          <SearchBar />\n        </div>\n        <hr />\n        <div className=\"ResultContainer\">{result}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searching: state.app.searching,\n  query: state.app.searchQuery,\n  dataSource: state.app.searchDataSource,\n  result: state.app.searchResult,\n  // items: get(state.app.searchResult, 'list.item'),\n  error: state.app.searchError,\n});\n\nconst mapDispatchToProps = {\n  setQuery,\n  setDataSource,\n  search,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nclass Breadcrumbs extends Component {\n  render() {\n    let fragments = this.props.name.split(\", \");\n    return (\n      <div className=\"Breadcrumbs\">\n        {fragments.map((fragment, index, fragments) => (\n          <span key={index}>\n            &nbsp;/&nbsp;\n            <Link\n              to={{\n                pathname: \"/search\",\n                search: `?query=${fragments\n                  .slice(0, index + 1)\n                  .join(\", \")}&dataSource=${this.props.dataSource}`,\n              }}\n              className=\"Breadcrumbs-item\"\n            >\n              {fragment}\n            </Link>\n          </span>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  dataSource: state.app.searchDataSource,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Breadcrumbs);\n","import React, { PureComponent } from \"react\";\nimport { PieChart, Pie, Cell, Label, Legend } from \"recharts\";\nimport { getNutrientValue } from \"../usda\";\nimport { flatten } from \"lodash\";\n\nexport default class ProximatesChart extends PureComponent {\n  getValue = (key) =>\n    (getNutrientValue(this.props.report, key) * this.props.mass) / 100;\n\n  render() {\n    let totalFat = this.getValue(\"Total lipid (fat)\");\n    let totalCarbs = this.getValue(\"Carbohydrate, by difference\");\n    let protein = this.getValue(\"Protein\");\n    let water = this.getValue(\"Water\");\n    let other = this.props.mass - (totalFat + totalCarbs + protein + water);\n\n    const data01 = [\n      { name: \"Total Fat\", value: totalFat },\n      { name: \"Total Carbs\", value: totalCarbs },\n      { name: \"Protein\", value: protein },\n      { name: \"Water\", value: water },\n      { name: \"Other\", value: other },\n    ];\n\n    let saturatedFats = this.getValue(\"Fatty acids, total saturated\");\n    let polySaturatedFats = this.getValue(\"Fatty acids, total polyunsaturated\");\n    let monoSaturatedFats = this.getValue(\"Fatty acids, total monounsaturated\");\n    let otherFats =\n      totalFat - saturatedFats - polySaturatedFats - monoSaturatedFats;\n\n    let dietaryFiber = this.getValue(\"Fiber, total dietary\");\n    let sugar = this.getValue(\"Sugars, total\");\n    let otherCarbs = totalCarbs - dietaryFiber - sugar;\n\n    const data02 = [\n      { name: \"Polyunsat. Fat\", value: polySaturatedFats },\n      { name: \"Monounsat. Fat\", value: monoSaturatedFats },\n      { name: \"Saturated Fat\", value: saturatedFats },\n      { name: \"Other Fats\", value: otherFats },\n      { name: \"Dietary Fiber\", value: dietaryFiber },\n      { name: \"Sugar\", value: sugar },\n      { name: \"Other Carbs\", value: otherCarbs },\n      { name: \"Protein\", value: protein },\n      { name: \"Water\", value: water },\n      { name: \"Other\", value: other },\n    ];\n\n    let sliceWideEnough = (props) => {\n      return props.percent > 0.03;\n    };\n\n    let label = (props) => {\n      let {\n        cx,\n        cy,\n        midAngle,\n        innerRadius,\n        outerRadius,\n        value,\n        index,\n        fill,\n      } = props;\n\n      if (!sliceWideEnough(props)) return null;\n\n      const RADIAN = Math.PI / 180;\n      const radius = 10 + innerRadius + (outerRadius - innerRadius);\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\n      value = new Intl.NumberFormat(\"en-IN\", {\n        maximumFractionDigits: 1,\n      }).format(value);\n\n      return (\n        <text\n          x={x}\n          y={y}\n          fill={fill}\n          textAnchor={x > cx ? \"start\" : \"end\"}\n          dominantBaseline=\"central\"\n        >\n          {data02[index].name} {value} g\n        </text>\n      );\n    };\n\n    let colors = [\n      [\"#ffeb3b\", \"#fdd835\", \"#fbc02d\", \"#f9a825\"],\n      [\"#aed581\", \"#8bc34a\", \"#689f38\"],\n      [\"#f06292\"],\n      [\"#2196f3\"],\n      [\"#e0e0e0\"],\n    ];\n\n    let legend = data01.map((entry, index) => ({\n      value: entry.name,\n      color: colors[index][0],\n    }));\n\n    return (\n      <PieChart width={500} height={275}>\n        <Pie\n          data={data01}\n          dataKey=\"value\"\n          cx={250}\n          cy={125}\n          innerRadius={30}\n          outerRadius={60}\n          fill=\"#8884d8\"\n          isAnimationActive={false}\n        >\n          {data01.map((entry, index) => (\n            <Cell key={index} fill={colors[index][0]} />\n          ))}\n        </Pie>\n        <Pie\n          data={data02}\n          dataKey=\"value\"\n          cx={250}\n          cy={125}\n          innerRadius={70}\n          outerRadius={90}\n          fill=\"red\"\n          labelLine={false}\n          label={label}\n          isAnimationActive={false}\n        >\n          {data02.map((entry, index) => (\n            <Cell key={`index`} fill={flatten(colors)[index]} />\n          ))}\n          <Label value={`${this.props.mass} g`} position=\"center\" />\n        </Pie>\n        <Legend payload={legend} />\n      </PieChart>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { times } from \"lodash\";\n\nconst BANANA_FACTOR = 105;\nconst APPLE_FACTOR = 95;\nconst BREAD_FACTOR = 67;\nconst BUBBLE_TEA_FACTOR = 350;\n\nclass Comparator extends Component {\n  render() {\n    let bananas = Math.round(this.props.calories / BANANA_FACTOR);\n    let apples = Math.round(this.props.calories / APPLE_FACTOR);\n    let bread = Math.round(this.props.calories / BREAD_FACTOR);\n    let bubbleTeas = Math.round(this.props.calories / BUBBLE_TEA_FACTOR);\n\n    return (\n      <div className=\"Comparator\">\n        <div className=\"Comparator-header\">\n          <h2>{this.props.calories} kcal</h2>\n          <br />\n          equal\n        </div>\n        <div className=\"emoji-comparator\">\n          {times(bubbleTeas, (n) => \"🍹\")}\n          <br />\n          {bubbleTeas} Cups of Bubble Tea\n        </div>\n        <div className=\"emoji-comparator\">\n          {times(bananas, (n) => \"🍌\")}\n          <br />\n          {bananas} Medium Bananas (118g)\n        </div>\n        <div className=\"emoji-comparator\">\n          {times(apples, (n) => \"🍎\")}\n          <br />\n          {apples} Apples (182g)\n        </div>\n        <div className=\"emoji-comparator\">\n          {times(bread, (n) => \"🍞\")}\n          <br />\n          {bread} Slices of White Bread (28g)\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Comparator;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ProximatesChart from \"./ProximatesChart\";\nimport Comparator from \"./Comparator\";\n\nclass Analysis extends Component {\n  render() {\n    let calories =\n      (this.props.report.nutrients.find(\n        (nutrient) => nutrient.name === \"Energy\"\n      ).value *\n        this.props.mass) /\n      100;\n\n    return (\n      <div className=\"Analysis\">\n        <ProximatesChart report={this.props.report} mass={this.props.mass} />\n        <Comparator calories={calories} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  mass: state.app.mass,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Analysis);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  sortNutrientsByGroup,\n  groupByNutrientGroup,\n  getNutrient,\n  referenceIntake,\n  labels,\n} from \"../usda\";\nimport { chunk } from \"lodash\";\n\nclass Report extends Component {\n  datum = (key, precision = 0) => {\n    let nutrient = getNutrient(this.props.report, key);\n    if (!nutrient) return null;\n    return `${Number(nutrient.value * this.props.factor).toFixed(precision)} ${\n      nutrient.unit\n    }`;\n  };\n\n  reference = (key) => {\n    return referenceIntake[key]\n      ? `${Math.round(\n          ((getNutrient(this.props.report, key).value * this.props.factor) /\n            referenceIntake[key]) *\n            100\n        )} %`\n      : null;\n  };\n\n  datumCell = (key, label = key, main) => (\n    <td className={`nutTable-left ${!main && \"indent-2\"}`}>\n      {main ? <strong>{label} </strong> : label + \" \"}\n      {this.datum(key)}\n    </td>\n  );\n  referenceCell = (key) => (\n    <td className=\"nutTable-right\">{this.reference(key)}</td>\n  );\n\n  tableRow = (index, key, label = key, main = false) => {\n    if (getNutrient(this.props.report, key)) {\n      return (\n        <tr key={index}>\n          {this.datumCell(key, label, main)}\n          {this.referenceCell(key)}\n        </tr>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  doubleTable = (nutrients) => {\n    let datumCells = nutrients.map((nutrient) =>\n      this.datumCell(nutrient.name, labels[nutrient.name], true)\n    );\n    let referenceCells = nutrients.map((nutrient) =>\n      this.referenceCell(nutrient.name)\n    );\n\n    let datumCellChucks = chunk(datumCells, 2);\n    let referenceCellChucks = chunk(referenceCells, 2);\n\n    return (\n      <table className=\"nutTable\">\n        <tbody>\n          {datumCellChucks.map((datumCellChunk, index) => (\n            <tr key={index}>\n              {datumCellChucks[index][0]}\n              {referenceCellChucks[index][0]}\n              {datumCellChucks[index][1] || <td className=\"nutTable-left\"></td>}\n              {referenceCellChucks[index][1] || (\n                <td className=\"nutTable-right\"></td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  };\n\n  tableRows = [\n    { label: \"Calories\", key: \"Energy\", main: true },\n    { label: \"Total Fat\", key: \"Total lipid (fat)\", main: true },\n    {\n      label: \"Saturated fat\",\n      key: \"Fatty acids, total saturated\",\n      main: false,\n    },\n    {\n      label: \"Polyunsaturated fat\",\n      key: \"Fatty acids, total polyunsaturated\",\n      main: false,\n    },\n    {\n      label: \"Monounsaturated fat\",\n      key: \"Fatty acids, total monounsaturated\",\n      main: false,\n    },\n    { label: \"Water\", key: \"Water\", main: true },\n    { label: \"Cholesterol\", key: \"Cholesterol\", main: true },\n    { label: \"Sodium\", key: \"Sodium, Na\", main: true },\n    { label: \"Potassium\", key: \"Potassium, K\", main: true },\n    {\n      label: \"Total Carbohydrate\",\n      key: \"Carbohydrate, by difference\",\n      main: true,\n    },\n    { label: \"Dietary fiber\", key: \"Fiber, total dietary\", main: false },\n    { label: \"Sugar\", key: \"Sugars, total\", main: false },\n    { label: \"Protein\", key: \"Protein\", main: true },\n  ];\n\n  render() {\n    let nutrients = sortNutrientsByGroup(this.props.report.nutrients);\n    let nutrientGroups = groupByNutrientGroup(nutrients);\n\n    return (\n      <div className=\"Report\">\n        <table className=\"nutTable\">\n          <tbody>\n            {this.tableRows.map((row, index) =>\n              this.tableRow(index, row.key, row.label, row.main)\n            )}\n          </tbody>\n        </table>\n        {nutrientGroups[\"Vitamins\"] &&\n          this.doubleTable(nutrientGroups[\"Vitamins\"])}\n        {nutrientGroups[\"Minerals\"] &&\n          this.doubleTable(nutrientGroups[\"Minerals\"])}\n        {nutrientGroups[\"Other\"] && this.doubleTable(nutrientGroups[\"Other\"])}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  mass: state.app.mass,\n  factor: state.app.mass / 100,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Report);\n","import React from \"react\";\nimport { css } from \"emotion\";\n\nconst Loading = (props) => {\n  return (\n    <div\n      className={css`\n        margin-top: 2rem;\n        margin-left: 2rem;\n        border: 8px solid #f06292;\n        border-top: 8px solid transparent; /* Blue */\n        border-radius: 50%;\n        width: 80px;\n        height: 80px;\n        animation: spin 1s linear infinite;\n\n        @keyframes spin {\n          0% {\n            transform: rotate(0deg);\n          }\n          100% {\n            transform: rotate(360deg);\n          }\n        }\n      `}\n    >\n      Loading\n    </div>\n  );\n};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport InputRange from \"react-input-range\";\nimport \"react-input-range/lib/css/index.css\";\nimport { get, isUndefined } from \"lodash\";\n\nimport Breadcrumbs from \"./Breadcrumbs\";\nimport Analysis from \"./Analysis\";\nimport Report from \"./Report\";\nimport Loading from \"./Loading\";\n\nimport { getReport, setMass, compareInsert } from \"../actions\";\n\nclass ReportPage extends Component {\n  constructor(props) {\n    super(props);\n    this.urlNDBNO = this.props.match.params.ndbno;\n    this.props.getReport(this.urlNDBNO);\n  }\n\n  sliderPrecision = (mass) => {\n    if (mass < 25) return 1;\n    if (mass < 100) return 5;\n    if (mass < 500) return 10;\n    return 50;\n  };\n\n  render() {\n    const { compareInsert, ndbno, mass } = this.props;\n    return (\n      <div className=\"ReportPage\">\n        <div className=\"header\">\n          <div>\n            <h1>\n              {this.props.loaded\n                ? `${this.props.name}`\n                : `Loading report for ndbno ${this.urlNDBNO}`}\n              <button onClick={() => compareInsert(ndbno, mass)}>\n                Compare\n              </button>\n            </h1>\n            <div className=\"descriptor\">\n              {this.props.loaded && (\n                <small>\n                  {[this.props.ds, this.props.manu, this.props.ndbno]\n                    .filter((e) => e)\n                    .join(\" · \")}\n                </small>\n              )}\n            </div>\n            {this.props.loaded && <Breadcrumbs name={this.props.name} />}\n            <Link to=\"/search/\" className=\"newSearchLink\">\n              &#8592; New Search\n            </Link>\n            <InputRange\n              className=\"massInput\"\n              minValue={0}\n              maxValue={1000}\n              step={this.sliderPrecision(this.props.mass)}\n              value={this.props.mass}\n              onChange={this.props.setMass}\n              formatLabel={(value) => `Mass ${value} g`}\n            />\n          </div>\n        </div>\n        {this.props.loaded ? (\n          <div className=\"ReportPage-container\">\n            <div className=\"ReportPage-report\">\n              <Report report={this.props.report} />\n            </div>\n            <div className=\"ReportPage-analysis\">\n              <Analysis report={this.props.report} />\n            </div>\n          </div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loaded: !isUndefined(state.app.getReportResult),\n  report: state.app.getReportResult,\n  name: get(state.app.getReportResult, \"desc.name\"),\n  ds: get(state.app.getReportResult, \"desc.ds\"),\n  manu: get(state.app.getReportResult, \"desc.manu\"),\n  ndbno: get(state.app.getReportResult, \"desc.ndbno\"),\n  mass: state.app.mass,\n});\n\nconst mapDispatchToProps = {\n  getReport,\n  setMass,\n  compareInsert,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportPage);\n","import { createSelector } from \"reselect\";\n\nexport const cachedReports = (state) => state.app.reports;\nexport const cachedReportsIds = createSelector([cachedReports], Object.keys);\nexport const cachedReportsAsArray = createSelector(\n  [cachedReports],\n  Object.values\n);\n","import React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <code>error in subtree</code>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport useDeepCompareEffect from \"use-deep-compare-effect\";\nimport { css } from \"emotion\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { get, difference, pick, chain } from \"lodash\";\n\nimport DataTable from \"react-data-table-component\";\n\nimport { getReport, compareSet } from \"../actions\";\nimport { cachedReportsIds, cachedReports } from \"../selectors\";\nimport { pivotNutrients, groupOrderNumber } from \"../usda\";\nimport ErrorBoundary from \"../ErrorBoundary\";\nimport Logo from \"../Logo\";\n\nconst staticColumns = [\n  {\n    name: \"Name\",\n    selector: \"desc.name\",\n    sortable: true,\n    compact: true,\n  },\n  {\n    name: \"ndbno\",\n    selector: \"desc.ndbno\",\n    sortable: true,\n    compact: true,\n  },\n];\n\nexport const TablePage = ({\n  ids,\n  cachedIds,\n  reports,\n  getReport,\n  compareSet,\n}) => {\n  console.log({ ids });\n  useDeepCompareEffect(() => {\n    const idsToGet = difference(ids, cachedIds);\n    idsToGet.forEach(getReport);\n  }, [ids, cachedIds, getReport]);\n  useDeepCompareEffect(() => {\n    compareSet(ids.map((id) => ({ ndbno: id, amount: 100 })));\n  }, [ids, compareSet]);\n  const columns = useMemo(() => {\n    const dynamicColumns = chain(reports)\n      .map(\"nutrients\")\n      .flatMap(Object.values)\n      .sortBy(groupOrderNumber)\n      .map(\"name\")\n      .uniq()\n      .map((name) => ({\n        name,\n        selector: (row) => get(row, `nutrients.${name}.value`, \"-\"),\n        sortable: true,\n        compact: true,\n      }))\n      .value();\n    return [...staticColumns, ...dynamicColumns];\n  }, [reports]);\n  return (\n    <div\n      className={css`\n        padding: 2rem 1rem;\n      `}\n    >\n      <Logo />\n      <ErrorBoundary>\n        <DataTable\n          columns={columns}\n          data={reports}\n          title=\"Reports\"\n          responsive\n          dense\n        />\n      </ErrorBoundary>\n    </div>\n  );\n};\n\nTablePage.propTypes = {\n  ids: PropTypes.arrayOf(PropTypes.string),\n  cachedIds: PropTypes.arrayOf(PropTypes.string),\n  reports: PropTypes.arrayOf(PropTypes.object),\n  getReport: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => {\n  console.log({ location: state.router.location });\n  const idsRaw = new URLSearchParams(\n    get(state, \"router.location.search\", \"\")\n  ).get(\"ids\");\n  const ids = idsRaw ? idsRaw.split(\",\") : [];\n  return {\n    cachedIds: cachedReportsIds(state),\n    ids,\n    reports: Object.values(pick(cachedReports(state), ids)).map(pivotNutrients),\n  };\n};\n\nconst mapDispatchToProps = {\n  getReport,\n  compareSet,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(TablePage));\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { css } from \"emotion\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { map } from \"lodash\";\n\nimport { compareClear, compareRemove } from \"../actions\";\n\nconst SpaceBar = (props) => (\n  <div\n    className={css`\n      display: flex;\n      justify-content: space-between;\n      padding: 0.5rem;\n    `}\n    {...props}\n  />\n);\n\nexport const CompareToaster = withRouter(\n  ({ compare, compareClear, compareRemove, location }) => {\n    const isVisible = compare.length > 0 && location.pathname !== \"/compare\";\n    const [isExpanded, setIsExpanded] = useState(true);\n    const ids = map(compare, \"ndbno\").join(\",\");\n    return (\n      <div\n        className={css`\n          display: ${isVisible ? \"initial\" : \"none\"};\n          position: fixed;\n          bottom: 0;\n          right: 5rem;\n          border: 1px solid black;\n          border-bottom: none;\n          background-color: white;\n          min-width: 300px;\n        `}\n      >\n        <div\n          className={css`\n            display: flex;\n            justify-content: space-between;\n            background-color: #eaeaea;\n            padding: 0.5rem;\n          `}\n          onClick={() => setIsExpanded(!isExpanded)}\n        >\n          <h3\n            className={css`\n              margin: 0;\n            `}\n          >\n            Collection <small>({compare.length})</small>\n          </h3>\n          {isExpanded ? \" 🔼\" : \" 🔽\"}\n        </div>\n        <table\n          className={css`\n            display: ${isExpanded ? \"visible\" : \"none\"};\n            margin: 0;\n            margin-top: 0.5rem;\n            padding: 0.5rem;\n          `}\n        >\n          <tbody>\n            {compare.map((item) => (\n              <tr key={item.ndbno}>\n                <td\n                  className={css`\n                    max-width: 200px;\n                    text-overflow: ellipsis;\n                    overflow: hidden;\n                    white-space: nowrap;\n                  `}\n                  title={item.report ? item.report.desc.name : item.ndbno}\n                >\n                  {item.report ? item.report.desc.name : item.ndbno}\n                </td>\n                <td>{item.amount} g</td>\n                <td>\n                  <button onClick={() => compareRemove(item.ndbno)}>X</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <SpaceBar\n          style={{\n            display: isExpanded ? \"flex\" : \"none\",\n          }}\n        >\n          <button onClick={compareClear}>Clear Collection</button>\n          <Link to={`/compare?ids=${ids}`}>Go to Collection</Link>\n        </SpaceBar>\n      </div>\n    );\n  }\n);\n\nconst mapStateToProps = (state) => ({\n  compare: state.app.compare.map((item) => ({\n    ...item,\n    report: state.app.reports[item.ndbno],\n  })),\n});\n\nconst mapDispatchToProps = {\n  compareClear,\n  compareRemove,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompareToaster);\n","import {\n  SEARCH,\n  SEARCH_FULFILLED,\n  SEARCH_REJECTED,\n  GET_REPORT,\n  GET_REPORT_FULFILLED,\n  GET_REPORT_REJECTED,\n  SET_QUERY,\n  SET_DATA_SOURCE,\n  SET_MASS,\n  COMPARE_SET,\n  COMPARE_UPSERT,\n  COMPARE_REMOVE,\n  COMPARE_CLEAR,\n} from \"./actionTypes\";\nimport { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport { uniqBy } from \"lodash\";\n\nconst initialState = {\n  searching: false,\n  searchQuery: \"\",\n  searchDataSource: \"STANDARD_REFERENCE\",\n  mass: 100,\n  reports: {},\n  compare: [],\n};\n\nconst appReducer = (state = initialState, { type, payload }) => {\n  console.log(type, payload);\n  switch (type) {\n    case SET_QUERY:\n      return {\n        ...state,\n        searchQuery: payload,\n        searchResult: undefined,\n        searchError: undefined,\n      };\n\n    case SET_DATA_SOURCE:\n      return {\n        ...state,\n        searchDataSource: payload,\n        searchResult: undefined,\n        searchError: undefined,\n      };\n\n    case SEARCH:\n      if (state.searchQuery === \"\") {\n        return {\n          ...state,\n          searching: false,\n          searchResult: undefined,\n          searchError: undefined,\n        };\n      } else {\n        return {\n          ...state,\n          searching: true,\n          searchResult: undefined,\n          searchError: undefined,\n        };\n      }\n\n    case SEARCH_FULFILLED:\n      return { ...state, searchResult: payload, searching: false };\n\n    case SEARCH_REJECTED:\n      return { ...state, searchError: payload, searching: false };\n\n    case GET_REPORT:\n      return {\n        ...state,\n        getReportNDBNO: payload,\n        gettingReport: true,\n        getReportResult: undefined,\n        getReportError: undefined,\n      };\n\n    case GET_REPORT_FULFILLED:\n      return {\n        ...state,\n        getReportResult: payload,\n        gettingReport: false,\n        getReportNDBNO: undefined,\n        reports: { ...state.reports, [payload.desc.ndbno]: payload },\n      };\n\n    case GET_REPORT_REJECTED:\n      return {\n        ...state,\n        getReportError: payload,\n        gettingReport: false,\n        getReportNDBNO: undefined,\n      };\n\n    case SET_MASS:\n      return { ...state, mass: payload };\n\n    case COMPARE_SET:\n      return { ...state, compare: payload };\n\n    case COMPARE_UPSERT:\n      return {\n        ...state,\n        compare: uniqBy([payload, ...state.compare], \"ndbno\"),\n      };\n\n    case COMPARE_REMOVE:\n      return {\n        ...state,\n        compare: state.compare.filter((item) => item.ndbno !== payload),\n      };\n    case COMPARE_CLEAR:\n      return {\n        ...state,\n        compare: initialState.compare,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default (history) =>\n  combineReducers({\n    router: connectRouter(history),\n    app: appReducer,\n  });\n","import { ajax } from \"rxjs/ajax\";\nimport {\n  mergeMap,\n  map,\n  catchError,\n  debounceTime,\n  filter,\n  tap,\n} from \"rxjs/operators\";\nimport { ofType, combineEpics } from \"redux-observable\";\nimport {\n  SEARCH,\n  SEARCH_REJECTED,\n  GET_REPORT,\n  GET_REPORT_REJECTED,\n} from \"./actionTypes\";\nimport {\n  searchFulfilled,\n  searchRejected,\n  getReportRejected,\n  getReportFulfilled,\n} from \"./actions\";\nimport { of } from \"rxjs\";\n\nconst USDA_API_KEY = \"FYTSTF75mesLeO85VFSKvqgWEzdL0hQAYCZUtjJk\";\n\nconst decodeDataSource = (dataSourceCode) =>\n  ({\n    BOTH: encodeURIComponent(\"\"),\n    STANDARD_REFERENCE: encodeURIComponent(\"Standard Reference\"),\n    BRANDED_FOOD_PRODUCTS: encodeURIComponent(\"Branded Food Products\"),\n  }[dataSourceCode]);\n\nconst searchEpic = (action$, state$) =>\n  action$.pipe(\n    ofType(SEARCH),\n    debounceTime(500),\n    filter((action) => state$.value.app.searchQuery !== \"\"),\n    tap(console.log(state$.value)),\n    mergeMap((action) =>\n      ajax\n        .getJSON(\n          `https://api.nal.usda.gov/ndb/search?api_key=${USDA_API_KEY}&q=${encodeURIComponent(\n            state$.value.app.searchQuery\n          )}&ds=${decodeDataSource(state$.value.app.searchDataSource)}`\n        )\n        .pipe(\n          map((response) =>\n            response.errors\n              ? searchRejected(response)\n              : searchFulfilled(response)\n          ),\n          catchError((error) =>\n            of({\n              type: SEARCH_REJECTED,\n              payload: error.xhr.response,\n              error: true,\n            })\n          )\n        )\n    )\n  );\n\nconst getReportEpic = (action$) =>\n  action$.pipe(\n    ofType(GET_REPORT),\n    debounceTime(500),\n    mergeMap((action) =>\n      ajax\n        .getJSON(\n          `https://api.nal.usda.gov/ndb/V2/reports?api_key=${USDA_API_KEY}&ndbno=${encodeURIComponent(\n            action.payload\n          )}`\n        )\n        .pipe(\n          map((response) =>\n            response.foods[0].error\n              ? getReportRejected(response)\n              : getReportFulfilled(response.foods[0].food)\n          ),\n          catchError((error) =>\n            of({\n              type: GET_REPORT_REJECTED,\n              payload: error.xhr.response,\n              error: true,\n            })\n          )\n        )\n    )\n  );\n\nconst rootEpic = combineEpics(searchEpic, getReportEpic);\nexport default rootEpic;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\nimport { createBrowserHistory } from \"history\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport rootReducer from \"./rootReducer.js\";\nimport rootEpic from \"./rootEpic.js\";\n\nconst epicMiddleware = createEpicMiddleware();\nexport const history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL + \"/\",\n});\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    rootReducer(history),\n    preloadedState,\n    compose(\n      applyMiddleware(routerMiddleware(history), epicMiddleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport SearchPage from \"./Search/SearchPage\";\nimport ReportPage from \"./Report/ReportPage\";\nimport TablePage from \"./Table/TablePage\";\nimport CompareToaster from \"./Table/CompareToaster\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { history } from \"./store\";\n\nexport class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <ConnectedRouter history={history} basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route path=\"/\" exact component={SearchPage} />\n            <Route path=\"/search\" exact component={SearchPage} />\n            <Route path=\"/report/:ndbno\" component={ReportPage} />\n            <Route path=\"/compare\" exact component={TablePage} />\n          </Switch>\n          <CompareToaster />\n        </ConnectedRouter>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store, { history } from \"./store.js\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\n\nReactDOM.render(\n  <Provider store={store()}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}