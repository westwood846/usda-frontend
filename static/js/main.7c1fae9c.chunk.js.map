{"version":3,"sources":["Search/SearchResultItem.js","Search/SearchResult.js","actions.js","actionTypes.js","usda.js","Search/SearchBar.js","Logo.js","Search/SearchPage.js","Report/Report.js","Report/Breadcrumbs.js","Report/ProximatesChart.js","Report/Comparator.js","Report/Analysis.js","Report/ReportPage.js","App.js","serviceWorker.js","rootReducer.js","rootEpic.js","store.js","index.js"],"names":["SearchResultItem","className","to","this","props","item","ndbno","name","manu","ds","Component","SearchResult","handleItemClick","event","push","target","value","bind","items","sortBy","result","list","query","q","start","end","Number","total","map","index","key","mapDispatchToProps","connect","state","setQuery","type","payload","setDataSource","dataSource","search","groupOrder","compareNutrients","a","b","indexOf","group","dataSourceIdentifierLookup","BOTH","STANDARD_REFERENCE","BRANDED_FOOD_PRODUCTS","dataSourceIdentifiers","Object","keys","decodeDataSourceIdentifier","identifier","getNutrient","food","find","nutrients","getNutrientValue","undefined","referenceIntake","labels","SearchBar","stringifyState","searchQuery","searchDataSource","handleInputChange","handleDataSourceChange","onChange","autoFocus","checked","app","Logo","SearchPage","urlParams","URLSearchParams","window","location","has","get","searching","error","errors","style","color","message","searchResult","searchError","Report","datum","precision","nutrient","report","factor","toFixed","unit","reference","Math","round","datumCell","label","main","referenceCell","tableRow","doubleTable","datumCells","referenceCells","datumCellChucks","chunk","referenceCellChucks","datumCellChunk","tableRows","nutrientGroups","groupBy","groupByNutrientGroup","sort","sortNutrientsByGroup","row","mass","Breadcrumbs","fragments","split","fragment","pathname","slice","join","ProximatesChart","getValue","totalFat","totalCarbs","protein","water","other","data01","saturatedFats","polySaturatedFats","monoSaturatedFats","otherFats","dietaryFiber","sugar","data02","colors","legend","entry","width","height","data","dataKey","cx","cy","innerRadius","outerRadius","fill","isAnimationActive","labelLine","midAngle","percent","sliceWideEnough","RADIAN","PI","radius","x","cos","y","sin","Intl","NumberFormat","maximumFractionDigits","format","textAnchor","dominantBaseline","flatten","position","PureComponent","Comparator","bananas","calories","apples","bread","bubbleTeas","times","n","Analysis","ReportPage","urlNDBNO","match","params","getReport","loaded","filter","e","minValue","maxValue","setMass","isUndefined","getReportResult","App","path","exact","component","Boolean","hostname","initialState","appReducer","console","log","getReportNDBNO","gettingReport","getReportError","history","combineReducers","router","connectRouter","USDA_API_KEY","rootEpic","combineEpics","action$","state$","pipe","ofType","debounceTime","action","tap","mergeMap","ajax","getJSON","encodeURIComponent","dataSourceCode","response","searchFulfilled","catchError","of","xhr","foods","getReportFulfilled","epicMiddleware","createEpicMiddleware","createBrowserHistory","basename","process","ReactDOM","render","store","preloadedState","createStore","rootReducer","compose","applyMiddleware","routerMiddleware","run","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c1fae9c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass SearchResultItem extends Component {\n  render() {\n    return (\n      <div className=\"SearchResultItem\">\n        <Link to={`/report/${this.props.item.ndbno}`}><h3>{this.props.item.name}</h3></Link>\n        <div className=\"SearchResultItem-meta\">\n          <span className=\"SearchResultItem-metaDescriptor\"><strong>ndbno: </strong>{this.props.item.ndbno}</span>\n          <span className=\"SearchResultItem-metaDescriptor\"><strong>Manufacturer: </strong>{this.props.item.manu}</span>\n          <span className=\"SearchResultItem-metaDescriptor\"><strong>Data Source: </strong>{this.props.item.ds}</span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SearchResultItem;\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { push } from 'connected-react-router';\nimport { sortBy } from 'lodash';\nimport SearchResultItem from './SearchResultItem';\n\nclass SearchResult extends Component {\n  constructor(props) {\n    super(props);\n    this.handleItemClick = this.handleItemClick.bind(this);\n  }\n  \n  handleItemClick = (event) => {\n    this.props.push(`/report/${event.target.value}`);\n  }\n  \n  render() {\n    let items = sortBy(this.props.result.list.item, 'name');\n    let query = this.props.result.list.q;\n    let ds = this.props.result.list.ds;\n    let start = this.props.result.list.start + 1;\n    let end = Number(this.props.result.list.end);\n    let total = this.props.result.list.total;\n\n    return (\n      <div className=\"SearchResult\">\n        <div className=\"descriptor\">Result for \"{query}\" in \"{ds}\" ({start} to {end} of {total}):</div>\n        <ul>\n          {items.map((item, index) => <li key={index}><SearchResultItem item={item}></SearchResultItem></li>)}\n        </ul>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = {\n  push\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResult)\n","import { SEARCH, SEARCH_FULFILLED, SEARCH_REJECTED, GET_REPORT, GET_REPORT_FULFILLED, GET_REPORT_REJECTED, SET_QUERY, SET_DATA_SOURCE, SET_MASS } from './actionTypes';\n\nexport const setQuery = (query) => ({type: SET_QUERY, payload: query });\nexport const setDataSource = (dataSource) => ({type: SET_DATA_SOURCE, payload: dataSource });\nexport const search = () => ({type: SEARCH });\nexport const searchFulfilled = (result) => ({type: SEARCH_FULFILLED, payload: result });\nexport const searchRejected = (result) => ({type: SEARCH_REJECTED, payload: result });\nexport const getReport = (ndbno) => ({type: GET_REPORT, payload: ndbno });\nexport const getReportFulfilled = (result) => ({type: GET_REPORT_FULFILLED, payload: result });\nexport const getReportRejected = (result) => ({type: GET_REPORT_REJECTED, payload: result });\nexport const setMass = (mass) => ({type: SET_MASS, payload: mass });","export const SET_QUERY = 'SET_QUERY';\nexport const SET_DATA_SOURCE = 'SET_DATA_SOURCE';\nexport const SEARCH = 'SEARCH';\nexport const SEARCH_FULFILLED = 'SEARCH_FULFILLED';\nexport const SEARCH_REJECTED = 'SEARCH_REJECTED';\nexport const GET_REPORT = 'GET_REPORT';\nexport const GET_REPORT_FULFILLED = 'GET_REPORT_FULFILLED';\nexport const GET_REPORT_REJECTED = 'GET_REPORT_REJECTED';\nexport const SET_MASS = 'SET_MASS';","import { groupBy, find } from 'lodash';\n\n\nexport const groupOrder = ['Proximates', 'Vitamins', 'Minerals', 'Lipids', 'Other'];\n\nexport const sortNutrientsByGroup = (nutrients) => {\n  return nutrients.sort(compareNutrients);\n}\n\nexport const compareNutrients = (a, b) => {\n  return groupOrder.indexOf(a.group) - groupOrder.indexOf(b.group) ;\n}\n\nexport const groupByNutrientGroup = (nutrients) => groupBy(nutrients, 'group');\n\nexport const dataSourceIdentifierLookup = {\n  BOTH: \"Any\",\n  STANDARD_REFERENCE: \"Standard Reference\",\n  BRANDED_FOOD_PRODUCTS: \"Branded Food Products\",\n}\n\nexport const dataSourceIdentifiers = Object.keys(dataSourceIdentifierLookup);\n\nexport const decodeDataSourceIdentifier = (identifier) => (dataSourceIdentifierLookup[identifier]);\n\nexport const getNutrient = (food, name) => find(food.nutrients, {name});\n\nexport const getNutrientValue = (food, name) => Number(getNutrient(food, name) ? getNutrient(food, name).value : undefined);\n\nexport const referenceIntake = {\n  \"Energy\": 2000,\n  \"Total lipid (fat)\": 67,\n  \"Fatty acids, total saturated\": 20,\n  \"Cholesterol\": 300,\n  \"Carbohydrate, by difference\": 300,\n  \"Fiber, total dietary\": 25,\n  \"Protein\": 50,\n  \"Vitamin C, total ascorbic acid\": 60,\n  \"Vitamin B-6\": 1.2,\n  \"Vitamin B-12\": 6,\n  \"Vitamin E (alpha-tocopherol)\": 15,\n  \"Vitamin K (phylloquinone)\": 120,\n  \"Calcium, Ca\": 1000,\n  \"Iron, Fe\": 19,\n  \"Magnesium, Mg\": 420,\n  \"Phosphorus, P\": 700,\n  \"Sodium, Na\": 2400,\n  \"Potassium, K\": 3533,\n  \"Zinc, Zn\": 8,\n}\n\nexport const labels = {\n  \"Vitamin C, total ascorbic acid\": \"Vitamin C\",\n  \"Vitamin B-6\":                    \"Vitamin B6\",\n  \"Vitamin B-12\":                   \"Vitamin B12\",\n  \"Vitamin E (alpha-tocopherol)\":   \"Vitamin E\",\n  \"Vitamin K (phylloquinone)\":      \"Vitamin E\",\n  \"Calcium, Ca\":                    \"Calcium\",\n  \"Iron, Fe\":                       \"Iron\",\n  \"Magnesium, Mg\":                  \"Magnesium\",\n  \"Phosphorus, P\":                  \"Phosphorus\",\n  \"Potassium, K\":                   \"Potassium\",\n  \"Sodium, Na\":                     \"Sodium\",\n  \"Zinc, Zn\":                       \"Zinc\",\n  \n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setQuery, setDataSource, search } from '../actions';\nimport { dataSourceIdentifiers, decodeDataSourceIdentifier } from '../usda';\nimport { push } from 'connected-react-router'\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleDataSourceChange = this.handleDataSourceChange.bind(this);\n  }\n\n  stringifyState = (query=this.props.searchQuery, dataSource=this.props.searchDataSource) => {\n    return `?query=${query}&dataSource=${dataSource}`;\n  }\n  \n  handleInputChange = (event) => {\n    this.props.setQuery(event.target.value);\n    this.props.push(this.stringifyState(event.target.value));\n    if (this.props.searchQuery) this.props.search();\n  }\n  \n  handleDataSourceChange = (event) => {\n    this.props.setDataSource(event.target.value);\n    this.props.push(this.stringifyState(undefined, event.target.value));\n    if (this.props.searchQuery) this.props.search();\n  }\n\n  render() {\n\n    return (\n      <div className=\"SearchBar\">\n        <label><input type=\"text\" className=\"queryInput\" value={this.props.searchQuery} onChange={this.handleInputChange} autoFocus/></label><br/>\n        Data Source:&nbsp;\n        {dataSourceIdentifiers.map(identifier => (\n          <label className=\"dataSourceInputLabel\" key={identifier}>\n            <input type=\"radio\" className=\"dataSourceInput\" value={identifier} checked={this.props.searchDataSource === identifier} onChange={this.handleDataSourceChange}></input>\n            {decodeDataSourceIdentifier(identifier)}\n          </label>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searchQuery: state.app.searchQuery,\n  searchDataSource: state.app.searchDataSource\n});\n\nconst mapDispatchToProps = {\n  setQuery,\n  setDataSource,\n  search,\n  push\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Logo extends Component {\n  render() {\n    return (\n      <div className=\"Logo\">\n        <Link to=\"/search\"><h1>USDA</h1></Link>\n      </div>\n    )\n  }\n}\n\nexport default Logo;\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport SearchResult from './SearchResult';\nimport SearchBar from './SearchBar';\nimport { setQuery, setDataSource, search } from '../actions';\nimport Logo from '../Logo';\nimport { decodeDataSourceIdentifier } from '../usda';\n\nclass SearchPage extends Component {\n  constructor(props) {\n    super(props);\n    let urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.has('dataSource') && urlParams.get('dataSource') !== this.props.dataSource) {\n      this.props.setDataSource(urlParams.get('dataSource'));\n    }\n    if (urlParams.has('query')) {\n      if (urlParams.get('query') !== this.props.query) {\n        this.props.setQuery(urlParams.get('query'));\n        this.props.search();\n      }\n    } else {\n      this.props.setQuery('');\n    }\n  }\n  \n\n  render() {\n    let result = this.props.searching\n      ? <span>Searching for \"{this.props.query}\" in {decodeDataSourceIdentifier(this.props.dataSource)}...</span>\n      : this.props.error\n        ? this.props.error.errors.error.map((error, index) => <div key={index} style={{color: \"red\"}}>{error.message}</div>)\n        : this.props.result\n          ? <SearchResult result={this.props.result}/>\n          : null\n\n    return (\n      <div className=\"SearchPage\">\n        <div className=\"header\">\n          <Logo/>\n          <SearchBar/>\n        </div>\n        <hr/>\n        <div className=\"ResultContainer\">\n          {result}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searching: state.app.searching,\n  query: state.app.searchQuery,\n  dataSource: state.app.searchDataSource,\n  result: state.app.searchResult,\n  // items: get(state.app.searchResult, 'list.item'),\n  error: state.app.searchError\n})\n\nconst mapDispatchToProps = {\n  setQuery,\n  setDataSource,\n  search\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { sortNutrientsByGroup, groupByNutrientGroup, getNutrient, referenceIntake, labels } from '../usda';\nimport { chunk } from 'lodash';\n\nclass Report extends Component {\n  datum = (key, precision=0) => {\n    let nutrient = getNutrient(this.props.report, key);\n    if (!nutrient) return null;\n    return `${Number(nutrient.value * this.props.factor).toFixed(precision)} ${nutrient.unit}`;\n  }\n\n  reference = (key) => {\n    return referenceIntake[key] ? `${Math.round(getNutrient(this.props.report, key).value * this.props.factor / referenceIntake[key] * 100)} %` : null;\n  }\n\n  datumCell = (key, label=key, main) => <td className={`nutTable-left ${!main && 'indent-2'}`}>{main ? (<strong>{label} </strong>) : label+\" \"}{this.datum(key)}</td>;\n  referenceCell = (key) => <td className=\"nutTable-right\">{this.reference(key)}</td>;\n\n  tableRow = (index, key, label=key, main=false) => {\n    if (getNutrient(this.props.report, key)) {\n      return (\n        <tr key={index}>\n          {this.datumCell(key, label, main)}\n          {this.referenceCell(key)}\n        </tr>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  doubleTable = (nutrients) => {\n    let datumCells = nutrients.map((nutrient) => this.datumCell(nutrient.name, labels[nutrient.name], true));\n    let referenceCells = nutrients.map((nutrient) => this.referenceCell(nutrient.name));\n\n    let datumCellChucks = chunk(datumCells, 2);\n    let referenceCellChucks = chunk(referenceCells, 2);\n\n    return (\n      <table className=\"nutTable\">\n        <tbody>\n          {datumCellChucks.map((datumCellChunk, index) => (\n            <tr key={index}>\n              {datumCellChucks[index][0]}\n              {referenceCellChucks[index][0]}\n              {datumCellChucks[index][1] || <td className=\"nutTable-left\"></td>}\n              {referenceCellChucks[index][1] || <td className=\"nutTable-right\"></td>}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    )\n  }\n\n  tableRows = [\n    {label: \"Calories\",            key: \"Energy\",                           main: true},\n    {label: \"Total Fat\",           key: \"Total lipid (fat)\",                  main: true},\n    {label: \"Saturated fat\",       key: \"Fatty acids, total saturated\",       main: false},\n    {label: \"Polyunsaturated fat\", key: \"Fatty acids, total polyunsaturated\", main: false},\n    {label: \"Monounsaturated fat\", key: \"Fatty acids, total monounsaturated\", main: false},\n    {label: \"Water\",               key: \"Water\",                              main: true},\n    {label: \"Cholesterol\",         key: \"Cholesterol\",                        main: true},\n    {label: \"Sodium\",              key: \"Sodium, Na\",                         main: true},\n    {label: \"Potassium\",           key: \"Potassium, K\",                       main: true},\n    {label: \"Total Carbohydrate\",  key: \"Carbohydrate, by difference\",        main: true},\n    {label: \"Dietary fiber\",       key: \"Fiber, total dietary\",               main: false},\n    {label: \"Sugar\",               key: \"Sugars, total\",                      main: false},\n    {label: \"Protein\",             key: \"Protein\",                            main: true},\n  ]\n\n  render() {\n    let nutrients = sortNutrientsByGroup(this.props.report.nutrients);\n    let nutrientGroups = groupByNutrientGroup(nutrients);\n\n    return (\n      <div className=\"Report\">\n        <table className=\"nutTable\">\n          <tbody>\n            {this.tableRows.map((row, index) => this.tableRow(index, row.key, row.label, row.main))}\n          </tbody>\n        </table>\n        {nutrientGroups[\"Vitamins\"] && this.doubleTable(nutrientGroups[\"Vitamins\"])}\n        {nutrientGroups[\"Minerals\"] && this.doubleTable(nutrientGroups[\"Minerals\"])}\n        {nutrientGroups[\"Other\"] && this.doubleTable(nutrientGroups[\"Other\"])}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  mass: state.app.mass,\n  factor: state.app.mass / 100,\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Report)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass Breadcrumbs extends Component {\n  render() {\n    let fragments = this.props.name.split(', ');\n    return (\n      <div className=\"Breadcrumbs\">\n        {fragments.map((fragment, index, fragments) => \n          <span key={index}>\n            &nbsp;/&nbsp;\n            <Link to={{pathname: \"/search\", search: `?query=${fragments.slice(0, index + 1).join(', ')}&dataSource=${this.props.dataSource}`}} className=\"Breadcrumbs-item\">\n              {fragment}\n            </Link>\n          </span>\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  dataSource: state.app.searchDataSource\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Breadcrumbs)\n","import React, { PureComponent } from 'react';\nimport { PieChart, Pie, Cell, Label, Legend } from 'recharts';\nimport { getNutrientValue } from '../usda';\nimport { flatten } from 'lodash';\n\nexport default class ProximatesChart extends PureComponent {\n  getValue = (key) => getNutrientValue(this.props.report, key) * this.props.mass / 100;\n\n  render() {\n    let totalFat = this.getValue('Total lipid (fat)');\n    let totalCarbs = this.getValue('Carbohydrate, by difference');\n    let protein = this.getValue('Protein');\n    let water = this.getValue('Water');\n    let other = this.props.mass - (totalFat + totalCarbs + protein + water);\n    \n    const data01 = [\n      { name: 'Total Fat', value: totalFat },\n      { name: 'Total Carbs', value: totalCarbs },\n      { name: 'Protein', value: protein },\n      { name: 'Water', value: water },\n      { name: 'Other', value: other },\n    ];\n    \n    let saturatedFats = this.getValue('Fatty acids, total saturated');\n    let polySaturatedFats = this.getValue('Fatty acids, total polyunsaturated');\n    let monoSaturatedFats = this.getValue('Fatty acids, total monounsaturated');\n    let otherFats = totalFat - saturatedFats - polySaturatedFats - monoSaturatedFats;\n    \n    let dietaryFiber = this.getValue('Fiber, total dietary')\n    let sugar = this.getValue('Sugars, total')\n    let otherCarbs = totalCarbs - dietaryFiber - sugar;\n    \n    const data02 = [\n      { name: 'Polyunsat. Fat', value: polySaturatedFats },\n      { name: 'Monounsat. Fat', value: monoSaturatedFats },\n      { name: 'Saturated Fat', value: saturatedFats },\n      { name: 'Other Fats', value: otherFats },\n      { name: 'Dietary Fiber', value: dietaryFiber },\n      { name: 'Sugar', value: sugar },\n      { name: 'Other Carbs', value: otherCarbs },\n      { name: 'Protein', value: protein },\n      { name: 'Water', value: water },\n      { name: 'Other', value: other },\n    ];\n\n    let sliceWideEnough = (props) => {\n      return props.percent > 0.03;\n    }\n\n    let label = (props) => {\n      let { cx, cy, midAngle, innerRadius, outerRadius, value, index, fill } = props;\n\n      if (!sliceWideEnough(props)) return null;\n\n      const RADIAN = Math.PI / 180;\n      const radius = 10 + innerRadius + (outerRadius - innerRadius);\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\n      value = new Intl.NumberFormat('en-IN', { maximumFractionDigits: 1 }).format(value);\n\n      return <text x={x} y={y} fill={fill} textAnchor={x > cx ? \"start\" : \"end\"} dominantBaseline=\"central\">{data02[index].name} {value} g</text>;\n    }\n\n    let colors = [\n      ['#ffeb3b', '#fdd835', '#fbc02d', '#f9a825'],\n      ['#aed581', '#8bc34a', '#689f38'],\n      ['#f06292'],\n      ['#2196f3'],\n      ['#e0e0e0'],\n    ]\n    \n    let legend = data01.map((entry, index) => ({value: entry.name, color: colors[index][0]}));\n\n    return (\n      <PieChart width={500} height={275}>\n        <Pie data={data01} dataKey=\"value\" cx={250} cy={125} innerRadius={30} outerRadius={60} fill=\"#8884d8\" isAnimationActive={false}>{\n          data01.map((entry, index) => <Cell key={index} fill={colors[index][0]} />)\n        }</Pie>\n        <Pie data={data02} dataKey=\"value\" cx={250} cy={125} innerRadius={70} outerRadius={90} fill=\"red\" labelLine={false} label={label} isAnimationActive={false}>\n          {data02.map((entry, index) => <Cell key={`index`} fill={flatten(colors)[index]} />)}\n          <Label value={`${this.props.mass} g`} position=\"center\"/>\n        </Pie>\n        <Legend payload={legend}/>\n      </PieChart>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { times } from 'lodash';\n\nconst BANANA_FACTOR = 105;\nconst APPLE_FACTOR = 95;\nconst BREAD_FACTOR = 67;\nconst BUBBLE_TEA_FACTOR = 350;\n\nclass Comparator extends Component {\n  render() {\n    let bananas = Math.round(this.props.calories / BANANA_FACTOR);\n    let apples = Math.round(this.props.calories / APPLE_FACTOR);\n    let bread = Math.round(this.props.calories / BREAD_FACTOR);\n    let bubbleTeas = Math.round(this.props.calories / BUBBLE_TEA_FACTOR);\n    \n    return (\n      <div className=\"Comparator\">\n        <div className=\"Comparator-header\">\n          <h2>{this.props.calories} kcal</h2><br/>equal\n        </div>\n        <div className=\"emoji-comparator\">\n          {times(bananas, n => '🍌')}<br/>{bananas} Medium Bananas (118g)\n        </div>\n        <div className=\"emoji-comparator\">\n          {times(apples, n => '🍎')}<br/>{apples} Apples (182g)\n        </div>\n        <div className=\"emoji-comparator\">\n          {times(bread, n => '🍞')}<br/>{bread} Slices of White Bread (28g)\n        </div>\n        <div className=\"emoji-comparator\">\n          {times(bubbleTeas, n => '🍹')}<br/>{bubbleTeas} Cups of Bubble Tea \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Comparator;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProximatesChart from './ProximatesChart';\nimport Comparator from './Comparator';\n\nclass Analysis extends Component {\n  render() {\n    let calories = this.props.report.nutrients.find(nutrient => nutrient.name === \"Energy\").value * this.props.mass / 100;\n\n    return (\n      <div className=\"Analysis\">\n        <ProximatesChart report={this.props.report} mass={this.props.mass}/>\n        <Comparator calories={calories}/>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  mass: state.app.mass\n})\n\nconst mapDispatchToProps = {\n  \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Analysis)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Report from './Report';\nimport { getReport, setMass } from '../actions';\nimport Breadcrumbs from './Breadcrumbs';\nimport { get, isUndefined } from 'lodash';\nimport { Link } from \"react-router-dom\";\nimport Analysis from './Analysis';\nimport InputRange from 'react-input-range';\nimport 'react-input-range/lib/css/index.css';\n\nclass ReportPage extends Component {\n  constructor(props) {\n    super(props);\n    this.urlNDBNO = this.props.match.params.ndbno;\n    this.props.getReport(this.urlNDBNO);\n  }\n\n  render() {\n    return (\n      <div className=\"ReportPage\">\n        <div className=\"header\">\n          <div>\n            <h1>\n              {this.props.loaded ? `${this.props.name}` : `Loading report for ndbno ${this.urlNDBNO}`}<br/>\n            </h1>\n            <div className=\"descriptor\">\n              {this.props.loaded && <small>{[this.props.ds, this.props.manu, this.props.ndbno].filter(e=>e).join(\" · \")}</small>}\n            </div>\n            {this.props.loaded && <Breadcrumbs name={this.props.name}/>}\n            <Link to=\"/search/\" className=\"newSearchLink\">&#8592; New Search</Link>\n            <InputRange\n              className=\"massInput\"\n              minValue={0}\n              maxValue={1000}\n              value={this.props.mass}\n              onChange={this.props.setMass} />\n          </div>\n        </div>\n        {this.props.loaded && <div className=\"ReportPage-container\">\n          <div className=\"ReportPage-report\">\n            <Report report={this.props.report}/>\n          </div>\n          <div className=\"ReportPage-analysis\">\n            <Analysis report={this.props.report}/>\n          </div>\n        </div>}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loaded: !isUndefined(state.app.getReportResult),\n  report: state.app.getReportResult,\n  name: get(state.app.getReportResult, 'desc.name'),\n  ds: get(state.app.getReportResult, 'desc.ds'),\n  manu: get(state.app.getReportResult, 'desc.manu'),\n  ndbno: get(state.app.getReportResult, 'desc.ndbno'),\n  mass: state.app.mass\n})\n\nconst mapDispatchToProps = {\n  getReport,\n  setMass\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportPage)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport SearchPage from './Search/SearchPage';\nimport ReportPage from './Report/ReportPage';\n\nexport class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={SearchPage}/>\n          <Route path=\"/search\" component={SearchPage}/>\n          <Route path=\"/report/:ndbno\" component={ReportPage}/>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = {\n  \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SEARCH, SEARCH_FULFILLED, SEARCH_REJECTED, GET_REPORT, GET_REPORT_FULFILLED, GET_REPORT_REJECTED, SET_QUERY, SET_DATA_SOURCE, SET_MASS } from \"./actionTypes\";\nimport { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nconst initialState = {\n  searching: false,\n  searchQuery: '',\n  searchDataSource: 'STANDARD_REFERENCE',\n  mass: 100\n}\n\nconst appReducer = (state = initialState, { type, payload }) => {\n  console.log(type, payload)\n  switch (type) {\n\n  case SET_QUERY:\n    return { ...state, searchQuery: payload, searchResult: undefined, searchError: undefined };\n\n  case SET_DATA_SOURCE:\n    return { ...state, searchDataSource: payload, searchResult: undefined, searchError: undefined };\n\n  case SEARCH:\n    if (state.searchQuery === '') {\n      return { ...state, searching: false, searchResult: undefined, searchError: undefined };\n    } else {\n      return { ...state, searching: true, searchResult: undefined, searchError: undefined };\n    }\n\n  case SEARCH_FULFILLED:\n    return { ...state, searchResult: payload, searching: false };\n    \n  case SEARCH_REJECTED:\n    return { ...state, searchError: payload, searching: false };\n\n  case GET_REPORT:\n    return { ...state, getReportNDBNO: payload, gettingReport: true, getReportResult: undefined, getReportError: undefined };\n\n  case GET_REPORT_FULFILLED:\n    return { ...state, getReportResult: payload, gettingReport: false, getReportNDBNO: undefined };\n    \n  case GET_REPORT_REJECTED:\n    return { ...state, getReportError: payload, gettingReport: false, getReportNDBNO: undefined };\n    \n  case SET_MASS:\n    return { ...state, mass: payload };\n\n  default:\n    return state\n  }\n}\n\nexport default (history) => combineReducers({\n  router: connectRouter(history),\n  app: appReducer\n});","import { ajax } from 'rxjs/ajax';\nimport { mergeMap, map, catchError, debounceTime, filter, tap } from 'rxjs/operators';\nimport { ofType, combineEpics } from 'redux-observable';\nimport { SEARCH, SEARCH_REJECTED, GET_REPORT, GET_REPORT_REJECTED } from './actionTypes';\nimport { searchFulfilled, searchRejected, getReportRejected, getReportFulfilled } from './actions';\nimport { of } from 'rxjs';\n\nconst USDA_API_KEY = 'FYTSTF75mesLeO85VFSKvqgWEzdL0hQAYCZUtjJk';\n\nconst decodeDataSource = (dataSourceCode) => ({\n  BOTH: encodeURIComponent(''),\n  STANDARD_REFERENCE: encodeURIComponent('Standard Reference'),\n  BRANDED_FOOD_PRODUCTS: encodeURIComponent('Branded Food Products'),\n}[dataSourceCode]);\n\nconst searchEpic = (action$, state$) => action$.pipe(\n  ofType(SEARCH),\n  debounceTime(500),\n  filter(action => state$.value.app.searchQuery !== ''),\n  tap(console.log(state$.value)),\n  mergeMap(action =>\n    ajax.getJSON(`https://api.nal.usda.gov/ndb/search?api_key=${USDA_API_KEY}&q=${encodeURIComponent(state$.value.app.searchQuery)}&ds=${decodeDataSource(state$.value.app.searchDataSource)}`).pipe(\n      map(response => response.errors ? searchRejected(response) : searchFulfilled(response)),\n      catchError(error => of({\n        type: SEARCH_REJECTED,\n        payload: error.xhr.response,\n        error: true\n      }))\n    )\n  )\n);\n\nconst getReportEpic = action$ => action$.pipe(\n  ofType(GET_REPORT),\n  debounceTime(500),\n  mergeMap(action =>\n    ajax.getJSON(`https://api.nal.usda.gov/ndb/V2/reports?api_key=${USDA_API_KEY}&ndbno=${encodeURIComponent(action.payload)}`).pipe(\n      map(response => response.foods[0].error ? getReportRejected(response) : getReportFulfilled(response.foods[0].food)),\n      catchError(error => of({\n        type: GET_REPORT_REJECTED,\n        payload: error.xhr.response,\n        error: true\n      }))\n    )\n  )\n);\n\nconst rootEpic = combineEpics(searchEpic, getReportEpic);\nexport default rootEpic;","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport rootReducer from './rootReducer.js';\nimport rootEpic from './rootEpic.js';\n\nconst epicMiddleware = createEpicMiddleware();\nexport const history = createBrowserHistory({basename: process.env.PUBLIC_URL + '/'});\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    rootReducer(history),\n    preloadedState,\n    compose(applyMiddleware(routerMiddleware(history), epicMiddleware))\n  );\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store, { history } from './store.js';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\n\nReactDOM.render(\n  <Provider store={store()}>\n    <ConnectedRouter history={history}>\n      <App/>\n    </ConnectedRouter>\n  </Provider>\n  , document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}