{"version":3,"sources":["App.js","theme.js","Site/Navbar.js","Table/CompareToaster.js","routes.js","actions.js","rhlConfig.js","serviceWorker.js","index.js","usda.js","actionTypes.js","Site/Logo.js","common/LazyLoadingFallback.js","rootReducer.js","rootEpic.js","store.js","Search/SearchBar.js","Search/SearchPage.js"],"names":["hot","module","history","basename","process","className","theme","routes","createMuiTheme","palette","primary","pink","secondary","purple","status","error","red","danger","orange","Navbar","pathname","useLocation","test","position","variant","SpaceBar","props","css","CompareToaster","withRouter","compare","compareClear","compareRemove","location","isVisible","length","useState","isExpanded","setIsExpanded","ids","map","join","onClick","item","key","ndbno","title","report","desc","name","fallbackName","amount","style","display","to","mapDispatchToProps","connect","state","app","reports","ReportPage","React","lazy","TablePage","fallback","path","exact","component","SearchPage","setQuery","query","type","SET_QUERY","payload","setDataSource","dataSource","SET_DATA_SOURCE","search","SEARCH","searchFulfilled","result","SEARCH_FULFILLED","searchRejected","SEARCH_REJECTED","getReport","GET_REPORT","getReportFulfilled","GET_REPORT_FULFILLED","getReportRejected","GET_REPORT_REJECTED","compareSet","COMPARE_SET","compareInsert","COMPARE_UPSERT","COMPARE_REMOVE","COMPARE_CLEAR","setConfig","reloadHooks","logLevel","Boolean","window","hostname","match","store","createStore","navigator","serviceWorker","ready","then","registration","unregister","ReactDOM","render","App","document","getElementById","groupOrder","groupOrderNumber","nutrient","indexOf","group","dataSourceIdentifierLookup","BOTH","STANDARD_REFERENCE","BRANDED_FOOD_PRODUCTS","dataSourceIdentifiers","Object","keys","decodeDataSourceIdentifier","identifier","getNutrient","food","find","nutrients","pivotNutrients","reduce","referenceIntake","Energy","Cholesterol","Protein","Riboflavin","Thiamin","Niacin","getDatum","factor","precision","round","Number","value","unit","getReference","undefined","SET_MASS","Logo","AdaptedTypography","withStyles","root","color","white","Typography","RouterLink","LazyLoadingFallback","initialState","searching","searchQuery","searchDataSource","mass","appReducer","console","log","searchResult","searchError","getReportNDBNO","gettingReport","getReportResult","getReportError","uniqBy","filter","USDA_API_KEY","rootEpic","combineEpics","action$","state$","pipe","ofType","debounceTime","action","tap","mergeMap","ajax","getJSON","encodeURIComponent","dataSourceCode","response","errors","catchError","of","xhr","foods","epicMiddleware","createEpicMiddleware","createBrowserHistory","configureStore","preloadedState","combineReducers","router","connectRouter","compose","applyMiddleware","routerMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","run","SearchBar","stringifyState","handleInputChange","event","target","push","handleDataSourceChange","bind","this","onChange","autoFocus","checked","Component","SearchResult","useEffect","urlParams","URLSearchParams","has","get","renderResult","index","message","Box","mr"],"mappings":"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","file":"static/js/main.0fe8fc42.chunk.js","sourcesContent":["import React from \"react\";\nimport { hot } from \"react-hot-loader\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\n\nimport theme from \"./theme\";\nimport { history } from \"./store.js\";\n\nimport Navbar from \"./Site/Navbar\";\nimport CompareToaster from \"./Table/CompareToaster\";\n\nimport routes from \"./routes\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <ConnectedRouter history={history} basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <ThemeProvider theme={theme}>\n          <Navbar />\n          <CompareToaster />\n          {routes}\n        </ThemeProvider>\n      </div>\n    </ConnectedRouter>\n  );\n};\n\n// this hot(module)(Component) call proved to be the secret sauce!\n// It is important that this hot component lives in it's own file.\nexport default hot(module)(App);\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport pink from \"@material-ui/core/colors/pink\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport red from \"@material-ui/core/colors/red\";\nimport orange from \"@material-ui/core/colors/orange\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: pink,\n    secondary: purple,\n  },\n  status: {\n    error: red,\n    danger: orange,\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport { useLocation } from \"react-router\";\n\nimport { AppBar, Toolbar } from \"@material-ui/core\";\n\nimport Logo from \"./Logo\";\n\nexport const Navbar = () => {\n  const { pathname } = useLocation();\n  if (/^\\/$/.test(pathname) || /^\\/search/.test(pathname)) return null;\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Logo variant=\"white\" />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { css } from \"emotion\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { map } from \"lodash\";\n\nimport { compareClear, compareRemove } from \"../actions\";\n\nconst SpaceBar = (props) => (\n  <div\n    className={css`\n      display: flex;\n      justify-content: space-between;\n      padding: 0.5rem;\n    `}\n    {...props}\n  />\n);\n\nexport const CompareToaster = withRouter(\n  ({ compare, compareClear, compareRemove, location }) => {\n    const isVisible = compare.length > 0 && location.pathname !== \"/compare\";\n    const [isExpanded, setIsExpanded] = useState(true);\n    const ids = map(compare, \"ndbno\").join(\",\");\n    return (\n      <div\n        className={css`\n          display: ${isVisible ? \"initial\" : \"none\"};\n          position: fixed;\n          bottom: 0;\n          right: 5rem;\n          border: 1px solid black;\n          border-bottom: none;\n          background-color: white;\n          min-width: 300px;\n        `}\n      >\n        <div\n          className={css`\n            display: flex;\n            justify-content: space-between;\n            background-color: #eaeaea;\n            padding: 0.5rem;\n          `}\n          onClick={() => setIsExpanded(!isExpanded)}\n        >\n          <h3\n            className={css`\n              margin: 0;\n            `}\n          >\n            Collection <small>({compare.length})</small>\n          </h3>\n          {isExpanded ? \" 🔼\" : \" 🔽\"}\n        </div>\n        <table\n          className={css`\n            display: ${isExpanded ? \"visible\" : \"none\"};\n            margin: 0;\n            margin-top: 0.5rem;\n            padding: 0.5rem;\n          `}\n        >\n          <tbody>\n            {compare.map((item) => (\n              <tr key={item.ndbno}>\n                <td\n                  className={css`\n                    max-width: 200px;\n                    text-overflow: ellipsis;\n                    overflow: hidden;\n                    white-space: nowrap;\n                  `}\n                  title={item.report ? item.report.desc.name : item.ndbno}\n                >\n                  {item.report ? item.report.desc.name : item.fallbackName}\n                </td>\n                <td>{item.amount} g</td>\n                <td>\n                  <button onClick={() => compareRemove(item.ndbno)}>X</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <SpaceBar\n          style={{\n            display: isExpanded ? \"flex\" : \"none\",\n          }}\n        >\n          <button onClick={compareClear}>Clear Collection</button>\n          <Link to={`/compare?ids=${ids}`}>Go to Collection</Link>\n        </SpaceBar>\n      </div>\n    );\n  }\n);\n\nconst mapStateToProps = (state) => ({\n  compare: state.app.compare.map((item) => ({\n    ...item,\n    report: state.app.reports[item.ndbno],\n  })),\n});\n\nconst mapDispatchToProps = {\n  compareClear,\n  compareRemove,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompareToaster);\n","import React, { Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport LazyLoadingFallback from \"./common/LazyLoadingFallback\";\n\nimport SearchPage from \"./Search/SearchPage\";\nconst ReportPage = React.lazy(() => import(\"./Search/SearchPage\"));\nconst TablePage = React.lazy(() => import(\"./Table/TablePage\"));\n\nexport const routes = (\n  <Suspense fallback={<LazyLoadingFallback />}>\n    <Switch>\n      <Route path=\"/\" exact component={SearchPage} />\n      <Route path=\"/search\" exact component={SearchPage} />\n      <Route path=\"/report/:ndbno\" component={ReportPage} />\n      <Route path=\"/compare\" exact component={TablePage} />\n    </Switch>\n  </Suspense>\n);\n\nexport default routes;\n","import {\n  SEARCH,\n  SEARCH_FULFILLED,\n  SEARCH_REJECTED,\n  GET_REPORT,\n  GET_REPORT_FULFILLED,\n  GET_REPORT_REJECTED,\n  SET_QUERY,\n  SET_DATA_SOURCE,\n  SET_MASS,\n  COMPARE_UPSERT,\n  COMPARE_REMOVE,\n  COMPARE_SET,\n  COMPARE_CLEAR,\n} from \"./actionTypes\";\n\nexport const setQuery = (query) => ({ type: SET_QUERY, payload: query });\nexport const setDataSource = (dataSource) => ({\n  type: SET_DATA_SOURCE,\n  payload: dataSource,\n});\nexport const search = () => ({ type: SEARCH });\nexport const searchFulfilled = (result) => ({\n  type: SEARCH_FULFILLED,\n  payload: result,\n});\nexport const searchRejected = (result) => ({\n  type: SEARCH_REJECTED,\n  payload: result,\n});\nexport const getReport = (ndbno) => ({ type: GET_REPORT, payload: ndbno });\nexport const getReportFulfilled = (result) => ({\n  type: GET_REPORT_FULFILLED,\n  payload: result,\n});\nexport const getReportRejected = (result) => ({\n  type: GET_REPORT_REJECTED,\n  payload: result,\n});\nexport const setMass = (mass) => ({ type: SET_MASS, payload: mass });\nexport const compareSet = (compare) => ({\n  type: COMPARE_SET,\n  payload: compare,\n});\nexport const compareInsert = (ndbno, amount, fallbackName) => ({\n  type: COMPARE_UPSERT,\n  payload: { ndbno, amount, fallbackName },\n});\nexport const compareUpdate = compareInsert;\nexport const compareRemove = (ndbno) => ({\n  type: COMPARE_REMOVE,\n  payload: ndbno,\n});\nexport const compareClear = () => ({\n  type: COMPARE_CLEAR,\n});\n","import { setConfig } from \"react-hot-loader\";\n\nsetConfig({\n  // This means hooks won't be run again when a component gets hot-swapped.\n  // That's both a blessing and a course: An useEffect that makes and API call\n  // won't run again so we don't have to wait for the request to be done until\n  // the component is ready. On the other hand, changes to hook bodies will\n  // require a manual reload of the page.\n  reloadHooks: false,\n  logLevel: \"log\",\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import \"./rhlConfig\"; // Needs to be in a separate file and needs to be first\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport createStore from \"./store.js\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore();\n\nconst render = () => {\n  ReactDOM.render(\n    // The store provider has to be outside of the hot App so that it won't be\n    // reloaded when there's an update\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n};\n\nserviceWorker.unregister();\n\nrender();\n","import { groupBy, find, round } from \"lodash\";\n\nexport const groupOrder = [\n  \"Proximates\",\n  \"Lipids\",\n  \"Vitamins\",\n  \"Minerals\",\n  \"Other\",\n];\n\nexport const sortNutrientsByGroup = (nutrients) => {\n  return nutrients.sort(compareNutrients);\n};\n\nexport const compareNutrients = (a, b) => {\n  return groupOrder.indexOf(a.group) - groupOrder.indexOf(b.group);\n};\n\nexport const groupOrderNumber = (nutrient) => {\n  return groupOrder.indexOf(nutrient.group);\n};\n\nexport const groupByNutrientGroup = (nutrients) => groupBy(nutrients, \"group\");\n\nexport const dataSourceIdentifierLookup = {\n  BOTH: \"Any\",\n  STANDARD_REFERENCE: \"Standard Reference\",\n  BRANDED_FOOD_PRODUCTS: \"Branded Food Products\",\n};\n\nexport const dataSourceIdentifiers = Object.keys(dataSourceIdentifierLookup);\n\nexport const decodeDataSourceIdentifier = (identifier) =>\n  dataSourceIdentifierLookup[identifier];\n\nexport const getNutrient = (food, name) => find(food.nutrients, { name });\n\nexport const getNutrientValue = (food, name) =>\n  Number(getNutrient(food, name) ? getNutrient(food, name).value : undefined);\n\nexport const pivotNutrients = (report) => ({\n  ...report,\n  nutrients: report.nutrients.reduce(\n    (nutrients, nutrient) => ({ ...nutrients, [nutrient.name]: nutrient }),\n    {}\n  ),\n});\n\nexport const referenceIntake = {\n  Energy: 2000,\n  \"Total lipid (fat)\": 67,\n  \"Fatty acids, total saturated\": 20,\n  Cholesterol: 300,\n  \"Carbohydrate, by difference\": 300,\n  \"Fiber, total dietary\": 25,\n  Protein: 50,\n  \"Vitamin C, total ascorbic acid\": 60,\n  \"Vitamin B-6\": 1.2,\n  \"Vitamin B-12\": 6,\n  \"Vitamin E (alpha-tocopherol)\": 15,\n  \"Vitamin K (phylloquinone)\": 120,\n  Riboflavin: 1.1,\n  Thiamin: 1.1,\n  Niacin: 14,\n  \"Folate, DFE\": 400,\n  \"Vitamin A, RAE\": 600,\n  \"Vitamin D\": 800,\n  \"Vitamin D (D2 + D3)\": 20,\n  \"Calcium, Ca\": 1000,\n  \"Iron, Fe\": 19,\n  \"Magnesium, Mg\": 420,\n  \"Phosphorus, P\": 700,\n  \"Sodium, Na\": 2400,\n  \"Potassium, K\": 3533,\n  \"Zinc, Zn\": 8,\n};\n\nexport const labels = {\n  \"Vitamin C, total ascorbic acid\": \"Vitamin C\",\n  \"Vitamin B-6\": \"Vitamin B6\",\n  \"Vitamin B-12\": \"Vitamin B12\",\n  \"Vitamin E (alpha-tocopherol)\": \"Vitamin E\",\n  \"Vitamin K (phylloquinone)\": \"Vitamin E\",\n  \"Calcium, Ca\": \"Calcium\",\n  \"Iron, Fe\": \"Iron\",\n  \"Magnesium, Mg\": \"Magnesium\",\n  \"Phosphorus, P\": \"Phosphorus\",\n  \"Potassium, K\": \"Potassium\",\n  \"Sodium, Na\": \"Sodium\",\n  \"Zinc, Zn\": \"Zinc\",\n};\n\nexport const getDatum = (report, key, factor, precision = 0) => {\n  const nutrient = getNutrient(report, key);\n  if (!nutrient) return null;\n  return `${round(Number(nutrient.value * factor), precision)} ${\n    nutrient.unit\n  }`;\n};\n\nexport const getReference = (key, report, factor, precision = 0) => {\n  const nutrient = getNutrient(report, key);\n  return referenceIntake[key] && nutrient\n    ? round(((nutrient.value * factor) / referenceIntake[key]) * 100, precision)\n    : undefined;\n};\n","export const SET_QUERY = \"SET_QUERY\";\nexport const SET_DATA_SOURCE = \"SET_DATA_SOURCE\";\nexport const SEARCH = \"SEARCH\";\nexport const SEARCH_FULFILLED = \"SEARCH_FULFILLED\";\nexport const SEARCH_REJECTED = \"SEARCH_REJECTED\";\nexport const GET_REPORT = \"GET_REPORT\";\nexport const GET_REPORT_FULFILLED = \"GET_REPORT_FULFILLED\";\nexport const GET_REPORT_REJECTED = \"GET_REPORT_REJECTED\";\nexport const SET_MASS = \"SET_MASS\";\nexport const COMPARE_SET = \"COMPARE_SET\";\nexport const COMPARE_UPSERT = \"COMPARE_UPSERT\";\nexport const COMPARE_REMOVE = \"COMPARE_REMOVE\";\nexport const COMPARE_CLEAR = \"COMPARE_CLEAR\";\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Typography, Link, withStyles } from \"@material-ui/core\";\n\nexport const Logo = ({ variant }) => {\n  const AdaptedTypography = withStyles({\n    root: {\n      color: { white: \"white\", primary: undefined }[variant],\n    },\n  })(Typography);\n\n  return (\n    <Link component={RouterLink} to=\"/search\">\n      <AdaptedTypography variant=\"h5\">USDA Frontend</AdaptedTypography>\n    </Link>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\n\nexport const LazyLoadingFallback = () => {\n  return <div>Loading...</div>;\n};\n\nexport default LazyLoadingFallback;\n","import {\n  SEARCH,\n  SEARCH_FULFILLED,\n  SEARCH_REJECTED,\n  GET_REPORT,\n  GET_REPORT_FULFILLED,\n  GET_REPORT_REJECTED,\n  SET_QUERY,\n  SET_DATA_SOURCE,\n  SET_MASS,\n  COMPARE_SET,\n  COMPARE_UPSERT,\n  COMPARE_REMOVE,\n  COMPARE_CLEAR,\n} from \"./actionTypes\";\nimport { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport { uniqBy } from \"lodash\";\n\nconst initialState = {\n  searching: false,\n  searchQuery: \"\",\n  searchDataSource: \"STANDARD_REFERENCE\",\n  mass: 100,\n  reports: {},\n  compare: [],\n};\n\nconst appReducer = (state = initialState, { type, payload }) => {\n  console.log(type, payload);\n  switch (type) {\n    case SET_QUERY:\n      return {\n        ...state,\n        searchQuery: payload,\n        searchResult: undefined,\n        searchError: undefined,\n      };\n\n    case SET_DATA_SOURCE:\n      return {\n        ...state,\n        searchDataSource: payload,\n        searchResult: undefined,\n        searchError: undefined,\n      };\n\n    case SEARCH:\n      if (state.searchQuery === \"\") {\n        return {\n          ...state,\n          searching: false,\n          searchResult: undefined,\n          searchError: undefined,\n        };\n      } else {\n        return {\n          ...state,\n          searching: true,\n          searchResult: undefined,\n          searchError: undefined,\n        };\n      }\n\n    case SEARCH_FULFILLED:\n      return { ...state, searchResult: payload, searching: false };\n\n    case SEARCH_REJECTED:\n      return { ...state, searchError: payload, searching: false };\n\n    case GET_REPORT:\n      return {\n        ...state,\n        getReportNDBNO: payload,\n        gettingReport: true,\n        getReportResult: undefined,\n        getReportError: undefined,\n      };\n\n    case GET_REPORT_FULFILLED:\n      return {\n        ...state,\n        getReportResult: payload,\n        gettingReport: false,\n        getReportNDBNO: undefined,\n        reports: { ...state.reports, [payload.desc.ndbno]: payload },\n      };\n\n    case GET_REPORT_REJECTED:\n      return {\n        ...state,\n        getReportError: payload,\n        gettingReport: false,\n        getReportNDBNO: undefined,\n      };\n\n    case SET_MASS:\n      return { ...state, mass: payload };\n\n    case COMPARE_SET:\n      return { ...state, compare: payload };\n\n    case COMPARE_UPSERT:\n      return {\n        ...state,\n        compare: uniqBy([payload, ...state.compare], \"ndbno\"),\n      };\n\n    case COMPARE_REMOVE:\n      return {\n        ...state,\n        compare: state.compare.filter((item) => item.ndbno !== payload),\n      };\n    case COMPARE_CLEAR:\n      return {\n        ...state,\n        compare: initialState.compare,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default (history) =>\n  combineReducers({\n    router: connectRouter(history),\n    app: appReducer,\n  });\n","import { ajax } from \"rxjs/ajax\";\nimport {\n  mergeMap,\n  map,\n  catchError,\n  debounceTime,\n  filter,\n  tap,\n} from \"rxjs/operators\";\nimport { ofType, combineEpics } from \"redux-observable\";\nimport {\n  SEARCH,\n  SEARCH_REJECTED,\n  GET_REPORT,\n  GET_REPORT_REJECTED,\n} from \"./actionTypes\";\nimport {\n  searchFulfilled,\n  searchRejected,\n  getReportRejected,\n  getReportFulfilled,\n} from \"./actions\";\nimport { of } from \"rxjs\";\n\nconst USDA_API_KEY = \"FYTSTF75mesLeO85VFSKvqgWEzdL0hQAYCZUtjJk\";\n\nconst decodeDataSource = (dataSourceCode) =>\n  ({\n    BOTH: encodeURIComponent(\"\"),\n    STANDARD_REFERENCE: encodeURIComponent(\"Standard Reference\"),\n    BRANDED_FOOD_PRODUCTS: encodeURIComponent(\"Branded Food Products\"),\n  }[dataSourceCode]);\n\nconst searchEpic = (action$, state$) =>\n  action$.pipe(\n    ofType(SEARCH),\n    debounceTime(500),\n    filter((action) => state$.value.app.searchQuery !== \"\"),\n    tap(console.log(state$.value)),\n    mergeMap((action) =>\n      ajax\n        .getJSON(\n          `https://api.nal.usda.gov/ndb/search?api_key=${USDA_API_KEY}&q=${encodeURIComponent(\n            state$.value.app.searchQuery\n          )}&ds=${decodeDataSource(state$.value.app.searchDataSource)}`\n        )\n        .pipe(\n          map((response) =>\n            response.errors\n              ? searchRejected(response)\n              : searchFulfilled(response)\n          ),\n          catchError((error) =>\n            of({\n              type: SEARCH_REJECTED,\n              payload: error.xhr.response,\n              error: true,\n            })\n          )\n        )\n    )\n  );\n\nconst getReportEpic = (action$) =>\n  action$.pipe(\n    ofType(GET_REPORT),\n    debounceTime(500),\n    mergeMap((action) =>\n      ajax\n        .getJSON(\n          `https://api.nal.usda.gov/ndb/V2/reports?api_key=${USDA_API_KEY}&ndbno=${encodeURIComponent(\n            action.payload\n          )}`\n        )\n        .pipe(\n          map((response) =>\n            response.foods[0].error\n              ? getReportRejected(response)\n              : getReportFulfilled(response.foods[0].food)\n          ),\n          catchError((error) =>\n            of({\n              type: GET_REPORT_REJECTED,\n              payload: error.xhr.response,\n              error: true,\n            })\n          )\n        )\n    )\n  );\n\nconst rootEpic = combineEpics(searchEpic, getReportEpic);\nexport default rootEpic;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\nimport { createBrowserHistory } from \"history\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport rootReducer from \"./rootReducer.js\";\nimport rootEpic from \"./rootEpic.js\";\n\nconst epicMiddleware = createEpicMiddleware();\nexport const history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL + \"/\",\n});\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    rootReducer(history),\n    preloadedState,\n    compose(\n      applyMiddleware(routerMiddleware(history), epicMiddleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        process.env.NODE_ENV === \"development\"\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\n        : (f) => f\n    )\n  );\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setQuery, setDataSource, search } from \"../actions\";\nimport { dataSourceIdentifiers, decodeDataSourceIdentifier } from \"../usda\";\nimport { push } from \"connected-react-router\";\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleDataSourceChange = this.handleDataSourceChange.bind(this);\n  }\n\n  stringifyState = (\n    query = this.props.searchQuery,\n    dataSource = this.props.searchDataSource\n  ) => {\n    return `?query=${query}&dataSource=${dataSource}`;\n  };\n\n  handleInputChange = (event) => {\n    this.props.setQuery(event.target.value);\n    this.props.push(this.stringifyState(event.target.value));\n    if (this.props.searchQuery) this.props.search();\n  };\n\n  handleDataSourceChange = (event) => {\n    this.props.setDataSource(event.target.value);\n    this.props.push(this.stringifyState(undefined, event.target.value));\n    if (this.props.searchQuery) this.props.search();\n  };\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <label>\n          <input\n            type=\"text\"\n            className=\"queryInput\"\n            value={this.props.searchQuery}\n            onChange={this.handleInputChange}\n            autoFocus\n          />\n        </label>\n        <br />\n        Data Source:&nbsp;\n        {dataSourceIdentifiers.map((identifier) => (\n          <label className=\"dataSourceInputLabel\" key={identifier}>\n            <input\n              type=\"radio\"\n              className=\"dataSourceInput\"\n              value={identifier}\n              checked={this.props.searchDataSource === identifier}\n              onChange={this.handleDataSourceChange}\n            ></input>\n            {decodeDataSourceIdentifier(identifier)}\n          </label>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searchQuery: state.app.searchQuery,\n  searchDataSource: state.app.searchDataSource,\n});\n\nconst mapDispatchToProps = {\n  setQuery,\n  setDataSource,\n  search,\n  push,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import React, { Suspense, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport SearchBar from \"./SearchBar\";\nimport { setQuery, setDataSource, search } from \"../actions\";\nimport Logo from \"../Site/Logo\";\nimport { decodeDataSourceIdentifier } from \"../usda\";\nimport LazyLoadingFallback from \"../common/LazyLoadingFallback\";\nimport { Box } from \"@material-ui/core\";\n\nconst SearchResult = React.lazy(() => import(\"./SearchResult\"));\n\nconst SearchPage = ({\n  location,\n  dataSource,\n  setDataSource,\n  query,\n  setQuery,\n  search,\n  searching,\n  error,\n  result,\n}) => {\n  useEffect(() => {\n    let urlParams = new URLSearchParams(window.location.search);\n\n    if (\n      urlParams.has(\"dataSource\") &&\n      urlParams.get(\"dataSource\") !== dataSource\n    ) {\n      setDataSource(urlParams.get(\"dataSource\"));\n    }\n    if (urlParams.has(\"query\")) {\n      if (urlParams.get(\"query\") !== query) {\n        setQuery(urlParams.get(\"query\"));\n        search();\n      }\n    } else {\n      setQuery(\"\");\n    }\n  }, [location, dataSource, setDataSource, query, setQuery, search]);\n\n  let renderResult = searching ? (\n    <span>\n      Searching for \"{query}\" in {decodeDataSourceIdentifier(dataSource)}...\n    </span>\n  ) : error ? (\n    error.errors.error.map((error, index) => (\n      <div key={index} style={{ color: \"red\" }}>\n        {error.message}\n      </div>\n    ))\n  ) : result ? (\n    <Suspense fallback={<LazyLoadingFallback />}>\n      <SearchResult result={result} />\n    </Suspense>\n  ) : null;\n\n  return (\n    <div className=\"SearchPage\">\n      <div className=\"header\">\n        <Box mr={3}>\n          <Logo />\n        </Box>\n        <SearchBar />\n      </div>\n      <hr />\n      <div className=\"ResultContainer\">{renderResult}</div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  searching: state.app.searching,\n  query: state.app.searchQuery,\n  dataSource: state.app.searchDataSource,\n  result: state.app.searchResult,\n  // items: get(state.app.searchResult, 'list.item'),\n  error: state.app.searchError,\n});\n\nconst mapDispatchToProps = {\n  setQuery,\n  setDataSource,\n  search,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\n"],"sourceRoot":""}