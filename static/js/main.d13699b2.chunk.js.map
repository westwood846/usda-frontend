{"version":3,"sources":["Search/SearchResultItem.js","Search/SearchResult.js","actions.js","actionTypes.js","usda.js","Search/SearchBar.js","Logo.js","Search/SearchPage.js","Report/NutrientsTable.js","Report/Report.js","Report/Breadcrumbs.js","Report/ProximatesChart.js","Report/Analysis.js","Report/ReportPage.js","App.js","serviceWorker.js","rootReducer.js","rootEpic.js","store.js","index.js"],"names":["SearchResultItem","className","to","this","props","item","ndbno","name","manu","ds","Component","SearchResult","handleItemClick","event","push","target","value","bind","items","sortBy","result","list","query","q","start","end","Number","total","map","index","key","mapDispatchToProps","connect","state","setQuery","type","payload","search","groupOrder","compareNutrients","a","b","indexOf","group","dataSourceIdentifierLookup","BOTH","STANDARD_REFERENCE","BRANDED_FOOD_PRODUCTS","dataSourceIdentifiers","Object","keys","decodeDataSourceIdentifier","identifier","getNutrient","food","find","nutrients","getNutrientValue","undefined","referenceIntake","SearchBar","handleInputChange","searchQuery","handleDataSourceChange","setDataSource","onChange","autoFocus","checked","searchDataSource","dataSource","app","Logo","SearchPage","urlParams","URLSearchParams","window","location","has","get","searching","error","errors","style","color","message","searchResult","searchError","NutrientTable","nutrient","unit","Report","datum","precision","report","toFixed","reference","Math","round","tableRow","label","main","tableRows","nutrientGroups","groupBy","groupByNutrientGroup","sort","sortNutrientsByGroup","row","groupKey","Breadcrumbs","fragments","split","fragment","pathname","slice","join","ProximatesChart","totalFat","totalCarbs","protein","water","other","data01","saturatedFats","polySaturatedFats","monoSaturatedFats","otherFats","dietaryFiber","sugar","data02","colors","width","height","data","dataKey","cx","cy","outerRadius","fill","entry","innerRadius","labelLine","midAngle","percent","sliceWideEnough","RADIAN","PI","radius","x","cos","y","sin","Intl","NumberFormat","maximumSignificantDigits","format","textAnchor","dominantBaseline","flatten","PureComponent","Analysis","calories","bananas","bread","JSON","stringify","times","n","ReportPage","urlNDBNO","match","params","getReport","loaded","filter","e","isUndefined","getReportResult","App","path","exact","component","Boolean","hostname","initialState","appReducer","console","log","getReportNDBNO","gettingReport","getReportError","history","combineReducers","router","connectRouter","USDA_API_KEY","rootEpic","combineEpics","action$","state$","pipe","ofType","debounceTime","action","tap","mergeMap","ajax","getJSON","encodeURIComponent","dataSourceCode","response","searchFulfilled","catchError","of","xhr","foods","getReportFulfilled","epicMiddleware","createEpicMiddleware","createBrowserHistory","basename","process","ReactDOM","render","store","preloadedState","createStore","rootReducer","compose","applyMiddleware","routerMiddleware","run","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d13699b2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass SearchResultItem extends Component {\n  render() {\n    return (\n      <div className=\"SearchResultItem\">\n        <Link to={`/report/${this.props.item.ndbno}`}><h3>{this.props.item.name}</h3></Link>\n        <div className=\"SearchResultItem-meta\">\n          <span className=\"SearchResultItem-metaDescriptor\"><strong>ndbno: </strong>{this.props.item.ndbno}</span>\n          <span className=\"SearchResultItem-metaDescriptor\"><strong>Manufacturer: </strong>{this.props.item.manu}</span>\n          <span className=\"SearchResultItem-metaDescriptor\"><strong>Data Source: </strong>{this.props.item.ds}</span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SearchResultItem;\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { push } from 'connected-react-router';\nimport { sortBy } from 'lodash';\nimport SearchResultItem from './SearchResultItem';\n\nclass SearchResult extends Component {\n  constructor(props) {\n    super(props);\n    this.handleItemClick = this.handleItemClick.bind(this);\n  }\n  \n  handleItemClick = (event) => {\n    this.props.push(`/report/${event.target.value}`);\n  }\n  \n  render() {\n    let items = sortBy(this.props.result.list.item, 'name');\n    let query = this.props.result.list.q;\n    let ds = this.props.result.list.ds;\n    let start = this.props.result.list.start + 1;\n    let end = Number(this.props.result.list.end);\n    let total = this.props.result.list.total;\n\n    return (\n      <div className=\"SearchResult\">\n        <div className=\"descriptor\">Result for \"{query}\" in \"{ds}\" ({start} to {end} of {total}):</div>\n        <ul>\n          {items.map((item, index) => <li key={index}><SearchResultItem item={item}></SearchResultItem></li>)}\n        </ul>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = {\n  push\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResult)\n","import { SEARCH, SEARCH_FULFILLED, SEARCH_REJECTED, GET_REPORT, GET_REPORT_FULFILLED, GET_REPORT_REJECTED, SET_QUERY, SET_DATA_SOURCE } from './actionTypes';\n\nexport const setQuery = (query) => ({type: SET_QUERY, payload: query });\nexport const setDataSource = (dataSource) => ({type: SET_DATA_SOURCE, payload: dataSource });\nexport const search = () => ({type: SEARCH });\nexport const searchFulfilled = (result) => ({type: SEARCH_FULFILLED, payload: result });\nexport const searchRejected = (result) => ({type: SEARCH_REJECTED, payload: result });\nexport const getReport = (ndbno) => ({type: GET_REPORT, payload: ndbno });\nexport const getReportFulfilled = (result) => ({type: GET_REPORT_FULFILLED, payload: result });\nexport const getReportRejected = (result) => ({type: GET_REPORT_REJECTED, payload: result });","export const SET_QUERY = 'SET_QUERY';\nexport const SET_DATA_SOURCE = 'SET_DATA_SOURCE';\nexport const SEARCH = 'SEARCH';\nexport const SEARCH_FULFILLED = 'SEARCH_FULFILLED';\nexport const SEARCH_REJECTED = 'SEARCH_REJECTED';\nexport const GET_REPORT = 'GET_REPORT';\nexport const GET_REPORT_FULFILLED = 'GET_REPORT_FULFILLED';\nexport const GET_REPORT_REJECTED = 'GET_REPORT_REJECTED';","import { groupBy, find } from 'lodash';\n\n\nexport const groupOrder = ['Proximates', 'Vitamins', 'Minerals', 'Lipids', 'Other'];\n\nexport const sortNutrientsByGroup = (nutrients) => {\n  return nutrients.sort(compareNutrients);\n}\n\nexport const compareNutrients = (a, b) => {\n  return groupOrder.indexOf(a.group) - groupOrder.indexOf(b.group) ;\n}\n\nexport const groupByNutrientGroup = (nutrients) => groupBy(nutrients, 'group');\n\nexport const dataSourceIdentifierLookup = {\n  BOTH: \"Any\",\n  STANDARD_REFERENCE: \"Standard Reference\",\n  BRANDED_FOOD_PRODUCTS: \"Branded Food Products\",\n}\n\nexport const dataSourceIdentifiers = Object.keys(dataSourceIdentifierLookup);\n\nexport const decodeDataSourceIdentifier = (identifier) => (dataSourceIdentifierLookup[identifier]);\n\nexport const getNutrient = (food, name) => find(food.nutrients, {name});\n\nexport const getNutrientValue = (food, name) => Number(getNutrient(food, name) ? getNutrient(food, name).value : undefined);\n\nexport const referenceIntake = {\n  \"Energy\": 2000,\n  \"Total lipid (fat)\": 67,\n  \"Fatty acids, total saturated\": 20,\n  \"Cholesterol\": 300,\n  \"Sodium, Na\": 2400,\n  \"Potassium, K\": 3533,\n  \"Carbohydrate, by difference\": 300,\n  \"Fiber, total dietary\": 25,\n  \"Protein\": 50\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setQuery, setDataSource, search } from '../actions';\nimport { dataSourceIdentifiers, decodeDataSourceIdentifier } from '../usda';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleDataSourceChange = this.handleDataSourceChange.bind(this);\n  }\n  \n  handleInputChange = (event) => {\n    this.props.setQuery(event.target.value);\n    if (this.props.searchQuery) this.props.search();\n  }\n  \n  handleDataSourceChange = (event) => {\n    this.props.setDataSource(event.target.value);\n    if (this.props.searchQuery) this.props.search();\n  }\n\n  render() {\n\n    return (\n      <div className=\"SearchBar\">\n        <label><input type=\"text\" className=\"queryInput\" value={this.props.searchQuery} onChange={this.handleInputChange} autoFocus/></label><br/>\n        Data Source:&nbsp;\n        {dataSourceIdentifiers.map(identifier => (\n          <label className=\"dataSourceInputLabel\" key={identifier}>\n            <input type=\"radio\" className=\"dataSourceInput\" value={identifier} checked={this.props.searchDataSource === identifier} onChange={this.handleDataSourceChange}></input>\n            {decodeDataSourceIdentifier(identifier)}\n          </label>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searchQuery: state.app.searchQuery,\n  searchDataSource: state.app.searchDataSource\n});\n\nconst mapDispatchToProps = {\n  setQuery,\n  setDataSource,\n  search\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Logo extends Component {\n  render() {\n    return (\n      <div className=\"Logo\">\n        <Link to=\"/search\"><h1>USDA</h1></Link>\n      </div>\n    )\n  }\n}\n\nexport default Logo;\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport SearchResult from './SearchResult';\nimport SearchBar from './SearchBar';\nimport { setQuery, search } from '../actions';\nimport Logo from '../Logo';\nimport { decodeDataSourceIdentifier } from '../usda';\n\nclass SearchPage extends Component {\n  constructor(props) {\n    super(props);\n    let urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.has('dataSource')) {\n      this.props.setQuery(urlParams.get('dataSource'));\n    }\n    if (urlParams.has('query')) {\n      this.props.setQuery(urlParams.get('query'));\n      this.props.search();\n    } else {\n      this.props.setQuery('');\n    }\n  }\n  \n\n  render() {\n    let result = this.props.searching\n      ? <span>Searching for \"{this.props.query}\" in {decodeDataSourceIdentifier(this.props.dataSource)}...</span>\n      : this.props.error\n        ? this.props.error.errors.error.map((error, index) => <div key={index} style={{color: \"red\"}}>{error.message}</div>)\n        : this.props.result\n          ? <SearchResult result={this.props.result}/>\n          : null\n\n    return (\n      <div className=\"SearchPage\">\n        <div className=\"header\">\n          <Logo/>\n          <SearchBar/>\n        </div>\n        <hr/>\n        <div className=\"ResultContainer\">\n          {result}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searching: state.app.searching,\n  query: state.app.searchQuery,\n  dataSource: state.app.searchDataSource,\n  result: state.app.searchResult,\n  // items: get(state.app.searchResult, 'list.item'),\n  error: state.app.searchError\n})\n\nconst mapDispatchToProps = {\n  setQuery,\n  search\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nexport class NutrientTable extends Component {\n  render() {\n    return (\n      <div className=\"NutrientTable\">\n        <h2>{this.props.name}</h2>\n        <table>\n          <thead>\n            <tr>\n              {/* <td>id</td> */}\n              <td>Name</td>\n              {/* <td>Group</td> */}\n              <td className=\"val\">Per 100 g</td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.nutrients.map((nutrient, index) => (\n              <tr key={index}>\n                {/* <td>{nutrient.nutrient_id}</td> */}\n                <td>{nutrient.name}</td>\n                {/* <td>{nutrient.group}</td> */}\n                <td className=\"val\">{`${nutrient.value} ${nutrient.unit}`}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  \n})\n\nconst mapDispatchToProps = {\n  \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NutrientTable)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { sortNutrientsByGroup, groupByNutrientGroup, getNutrient, referenceIntake } from '../usda';\nimport { NutrientTable } from './NutrientsTable';\n\nclass Report extends Component {\n  datum = (key, precision=0) => {\n    let nutrient = getNutrient(this.props.report, key);\n    if (!nutrient) return null;\n    return `${Number(nutrient.value).toFixed(precision)} ${nutrient.unit}`;\n  }\n\n  reference = (key) => {\n    return `${Math.round(getNutrient(this.props.report, key).value / referenceIntake[key] * 100)} %`;\n  }\n\n  tableRow = (index, key, label, main=false) => {\n    if (getNutrient(this.props.report, key)) {\n      return (\n        <tr key={index}>\n          <td className={`nutTable-left ${!main && 'indent-2'}`}>{main ? (<strong>{label} </strong>) : label+\" \"}{this.datum(key)}</td>\n          <td className=\"nutTable-right\">{this.reference(key)}</td>\n        </tr>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  tableRows = [\n    {label: \"Energy\",              key: \"Calories\",                           main: true},\n    {label: \"Total Fat\",           key: \"Total lipid (fat)\",                  main: true},\n    {label: \"Saturated fat\",       key: \"Fatty acids, total saturated\",       main: false},\n    {label: \"Polyunsaturated fat\", key: \"Fatty acids, total polyunsaturated\", main: false},\n    {label: \"Monounsaturated fat\", key: \"Fatty acids, total monounsaturated\", main: false},\n    {label: \"Water\",               key: \"Water\",                              main: true},\n    {label: \"Cholesterol\",         key: \"Cholesterol\",                        main: true},\n    {label: \"Sodium\",              key: \"Sodium, Na\",                         main: true},\n    {label: \"Potassium\",           key: \"Potassium, K\",                       main: true},\n    {label: \"Total Carbohydrate\",  key: \"Carbohydrate, by difference\",        main: true},\n    {label: \"Dietary fiber\",       key: \"Fiber, total dietary\",               main: false},\n    {label: \"Sugar\",               key: \"Sugars, total\",                      main: false},\n    {label: \"Protein\",             key: \"Protein\",                            main: true},\n  ]\n\n  render() {\n    let nutrients = sortNutrientsByGroup(this.props.report.nutrients);\n    let nutrientGroups = groupByNutrientGroup(nutrients);\n\n    return (\n      <div className=\"Report\">\n        <table className=\"nutTable\">\n          <tbody>\n            {this.tableRows.map((row, index) => this.tableRow(index, row.key, row.label, row.main))}\n          </tbody>\n        </table>\n        {Object.keys(nutrientGroups).map((groupKey, index) => <NutrientTable nutrients={nutrientGroups[groupKey]} name={groupKey} key={index}/>)}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Report)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass Breadcrumbs extends Component {\n  render() {\n    let fragments = this.props.name.split(', ');\n    return (\n      <div className=\"Breadcrumbs\">\n        {fragments.map((fragment, index, fragments) => \n          <span key={index}>\n            &nbsp;/&nbsp;\n            <Link to={{pathname: \"/search\", search: `?query=${fragments.slice(0, index + 1).join(', ')}&dataSource=${this.props.dataSource}`}} className=\"Breadcrumbs-item\">\n              {fragment}\n            </Link>\n          </span>\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  dataSource: state.app.searchDataSource\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Breadcrumbs)\n","import React, { PureComponent } from 'react';\nimport { PieChart, Pie, Cell } from 'recharts';\nimport { getNutrientValue } from '../usda';\nimport { flatten } from 'lodash';\n\nexport default class ProximatesChart extends PureComponent {\n  getValue\n\n  render() {\n    let totalFat = getNutrientValue(this.props.report, 'Total lipid (fat)');\n    let totalCarbs = getNutrientValue(this.props.report, 'Carbohydrate, by difference');\n    let protein = getNutrientValue(this.props.report, 'Protein');\n    let water = getNutrientValue(this.props.report, 'Water');\n    let other = 100 - (totalFat + totalCarbs + protein + water);\n    \n    const data01 = [\n      { name: 'Total Fat', value: totalFat },\n      { name: 'Total Carbohydrate', value: totalCarbs },\n      { name: 'Protein', value: protein },\n      { name: 'Water', value: water },\n      { name: 'Other', value: other },\n    ];\n    \n    let saturatedFats = getNutrientValue(this.props.report, 'Fatty acids, total saturated');\n    let polySaturatedFats = getNutrientValue(this.props.report, 'Fatty acids, total polyunsaturated');\n    let monoSaturatedFats = getNutrientValue(this.props.report, 'Fatty acids, total monounsaturated');\n    let otherFats = totalFat - saturatedFats - polySaturatedFats - monoSaturatedFats;\n    \n    let dietaryFiber = getNutrientValue(this.props.report, 'Fiber, total dietary')\n    let sugar = getNutrientValue(this.props.report, 'Sugars, total')\n    let otherCarbs = totalCarbs - dietaryFiber - sugar;\n    \n    const data02 = [\n      { name: 'Polyunsat. Fat', value: polySaturatedFats },\n      { name: 'Monounsat. Fat', value: monoSaturatedFats },\n      { name: 'Saturated Fat', value: saturatedFats },\n      { name: 'Other Fats', value: otherFats },\n      { name: 'Dietary Fiber', value: dietaryFiber },\n      { name: 'Sugar', value: sugar },\n      { name: 'Other Carbohydrates', value: otherCarbs },\n      { name: 'Protein', value: protein },\n      { name: 'Water', value: water },\n      { name: 'Other', value: other },\n    ];\n\n    let sliceWideEnough = (props) => {\n      return props.percent > 0.03;\n    }\n\n    let label = (props) => {\n      let { cx, cy, midAngle, innerRadius, outerRadius, value, index, fill } = props;\n\n      if (!sliceWideEnough(props)) return null;\n\n      const RADIAN = Math.PI / 180;\n      const radius = 25 + innerRadius + (outerRadius - innerRadius);\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\n      value = new Intl.NumberFormat('en-IN', { maximumSignificantDigits: 1 }).format(value);\n\n      return <text x={x} y={y} fill={fill} textAnchor={x > cx ? \"start\" : \"end\"} dominantBaseline=\"central\">{data02[index].name} {value} g</text>;\n    }\n\n    let colors = [\n      ['#ffeb3b', '#fdd835', '#fbc02d', '#f9a825'],\n      ['#aed581', '#8bc34a', '#689f38'],\n      ['#f06292'],\n      ['#2196f3'],\n      ['#e0e0e0'],\n    ]\n\n    return (\n      <PieChart width={500} height={300}>\n        <Pie data={data01} dataKey=\"value\" cx={250} cy={150} outerRadius={60} fill=\"#8884d8\">{\n          data01.map((entry, index) => <Cell key={index} fill={colors[index][0]} />)\n        }</Pie>\n        <Pie data={data02} dataKey=\"value\" cx={250} cy={150} innerRadius={70} outerRadius={90} fill=\"red\" labelLine={false} label={label}>{\n          data02.map((entry, index) => <Cell key={`index`} fill={flatten(colors)[index]} />)\n        }</Pie>\n      </PieChart>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProximatesChart from './ProximatesChart';\nimport { times } from 'lodash';\nconst BANANA_FACTOR = 105;\nconst BREAD_FACTOR = 67;\n\nclass Analysis extends Component {\n  render() {\n    let calories = this.props.report.nutrients.find(nutrient => nutrient.name === \"Energy\");\n    let bananas = Math.round(Number(calories.value) / BANANA_FACTOR);\n    let bread = Math.round(Number(calories.value) / BREAD_FACTOR);\n\n    return (\n      <div className=\"Analysis\">\n        <ProximatesChart report={this.props.report}/>\n        <pre><code>{JSON.stringify(this.props.report, null, 2)}</code></pre>\n        <div>\n          {calories.value} {calories.unit} equal...\n        </div>\n        <div className=\"emoji-comparator\">\n          {times(bananas, n => '🍌')} {bananas} medium bananas (118g)\n        </div>\n        <div className=\"emoji-comparator\">\n          {times(bread, n => '🍞')} {bread} slices of white bread (28g)\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  \n})\n\nconst mapDispatchToProps = {\n  \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Analysis)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Report from './Report';\nimport { getReport } from '../actions';\nimport Breadcrumbs from './Breadcrumbs';\nimport { get, isUndefined } from 'lodash';\nimport { Link } from \"react-router-dom\";\nimport Analysis from './Analysis';\nimport Logo from '../Logo';\n\nclass ReportPage extends Component {\n  constructor(props) {\n    super(props);\n    this.urlNDBNO = this.props.match.params.ndbno;\n    this.props.getReport(this.urlNDBNO);\n  }\n\n\n  render() {\n    return (\n      <div className=\"ReportPage\">\n        <div className=\"header\">\n          <div>\n            <h1>\n              {this.props.loaded ? `${this.props.name}` : `Loading report for ndbno ${this.urlNDBNO}`}<br/>\n            </h1>\n            <div className=\"descriptor\">\n              {this.props.loaded && <small>{[this.props.ds, this.props.manu, this.props.ndbno].filter(e=>e).join(\" · \")}</small>}\n            </div>\n            {this.props.loaded && <Breadcrumbs name={this.props.name}/>}\n            <Link to=\"/search/\" className=\"newSearchLink\">&#8592; New Search</Link>\n          </div>\n        </div>\n        {this.props.loaded && <div className=\"ReportPage-container\">\n          <div className=\"ReportPage-report\">\n            <Report report={this.props.report}/>\n          </div>\n          <div className=\"ReportPage-analysis\">\n            <Analysis report={this.props.report}/>\n          </div>\n        </div>}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loaded: !isUndefined(state.app.getReportResult),\n  report: state.app.getReportResult,\n  name: get(state.app.getReportResult, 'desc.name'),\n  ds: get(state.app.getReportResult, 'desc.ds'),\n  manu: get(state.app.getReportResult, 'desc.manu'),\n  ndbno: get(state.app.getReportResult, 'desc.ndbno'),\n})\n\nconst mapDispatchToProps = {\n  getReport\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportPage)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport SearchPage from './Search/SearchPage';\nimport ReportPage from './Report/ReportPage';\n\nexport class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={SearchPage}/>\n          <Route path=\"/search\" component={SearchPage}/>\n          <Route path=\"/report/:ndbno\" component={ReportPage}/>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = {\n  \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SEARCH, SEARCH_FULFILLED, SEARCH_REJECTED, GET_REPORT, GET_REPORT_FULFILLED, GET_REPORT_REJECTED, SET_QUERY, SET_DATA_SOURCE } from \"./actionTypes\";\nimport { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nconst initialState = {\n  searching: false,\n  searchQuery: '',\n  searchDataSource: 'STANDARD_REFERENCE'\n}\n\nconst appReducer = (state = initialState, { type, payload }) => {\n  console.log(type, payload)\n  switch (type) {\n\n  case SET_QUERY:\n    return { ...state, searchQuery: payload, searchResult: undefined, searchError: undefined };\n\n  case SET_DATA_SOURCE:\n    return { ...state, searchDataSource: payload, searchResult: undefined, searchError: undefined };\n\n  case SEARCH:\n    if (state.searchQuery === '') {\n      return { ...state, searching: false, searchResult: undefined, searchError: undefined };\n    } else {\n      return { ...state, searching: true, searchResult: undefined, searchError: undefined };\n    }\n\n  case SEARCH_FULFILLED:\n    return { ...state, searchResult: payload, searching: false };\n    \n  case SEARCH_REJECTED:\n    return { ...state, searchError: payload, searching: false };\n\n  case GET_REPORT:\n    return { ...state, getReportNDBNO: payload, gettingReport: true, getReportResult: undefined, getReportError: undefined };\n\n  case GET_REPORT_FULFILLED:\n    return { ...state, getReportResult: payload, gettingReport: false, getReportNDBNO: undefined };\n    \n  case GET_REPORT_REJECTED:\n    return { ...state, getReportError: payload, gettingReport: false, getReportNDBNO: undefined };\n\n  default:\n    return state\n  }\n}\n\nexport default (history) => combineReducers({\n  router: connectRouter(history),\n  app: appReducer\n});","import { ajax } from 'rxjs/ajax';\nimport { mergeMap, map, catchError, debounceTime, filter, tap } from 'rxjs/operators';\nimport { ofType, combineEpics } from 'redux-observable';\nimport { SEARCH, SEARCH_REJECTED, GET_REPORT, GET_REPORT_REJECTED } from './actionTypes';\nimport { searchFulfilled, searchRejected, getReportRejected, getReportFulfilled } from './actions';\nimport { of } from 'rxjs';\n\nconst USDA_API_KEY = 'FYTSTF75mesLeO85VFSKvqgWEzdL0hQAYCZUtjJk';\n\nconst decodeDataSource = (dataSourceCode) => ({\n  BOTH: encodeURIComponent(''),\n  STANDARD_REFERENCE: encodeURIComponent('Standard Reference'),\n  BRANDED_FOOD_PRODUCTS: encodeURIComponent('Branded Food Products'),\n}[dataSourceCode]);\n\nconst searchEpic = (action$, state$) => action$.pipe(\n  ofType(SEARCH),\n  debounceTime(500),\n  filter(action => state$.value.app.searchQuery !== ''),\n  tap(console.log(state$.value)),\n  mergeMap(action =>\n    ajax.getJSON(`https://api.nal.usda.gov/ndb/search?api_key=${USDA_API_KEY}&q=${encodeURIComponent(state$.value.app.searchQuery)}&ds=${decodeDataSource(state$.value.app.searchDataSource)}`).pipe(\n      map(response => response.errors ? searchRejected(response) : searchFulfilled(response)),\n      catchError(error => of({\n        type: SEARCH_REJECTED,\n        payload: error.xhr.response,\n        error: true\n      }))\n    )\n  )\n);\n\nconst getReportEpic = action$ => action$.pipe(\n  ofType(GET_REPORT),\n  debounceTime(500),\n  mergeMap(action =>\n    ajax.getJSON(`https://api.nal.usda.gov/ndb/V2/reports?api_key=${USDA_API_KEY}&ndbno=${encodeURIComponent(action.payload)}`).pipe(\n      map(response => response.foods[0].error ? getReportRejected(response) : getReportFulfilled(response.foods[0].food)),\n      catchError(error => of({\n        type: GET_REPORT_REJECTED,\n        payload: error.xhr.response,\n        error: true\n      }))\n    )\n  )\n);\n\nconst rootEpic = combineEpics(searchEpic, getReportEpic);\nexport default rootEpic;","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport rootReducer from './rootReducer.js';\nimport rootEpic from './rootEpic.js';\n\nconst epicMiddleware = createEpicMiddleware();\nexport const history = createBrowserHistory({basename: process.env.PUBLIC_URL + '/'});\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    rootReducer(history),\n    preloadedState,\n    compose(applyMiddleware(routerMiddleware(history), epicMiddleware))\n  );\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store, { history } from './store.js';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\n\nReactDOM.render(\n  <Provider store={store()}>\n    <ConnectedRouter history={history}>\n      <App/>\n    </ConnectedRouter>\n  </Provider>\n  , document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}