{"version":3,"sources":["Search/SearchResultItem.js","Search/SearchResult.js","actions.js","actionTypes.js","usda.js","Search/SearchBar.js","Logo.js","Search/SearchPage.js","Report/Breadcrumbs.js","Report/ProximatesChart.js","Report/Comparator.js","Report/Analysis.js","Report/Report.js","Report/Loading.js","Report/ReportPage.js","selectors.js","Table/TablePage.js","App.js","serviceWorker.js","rootReducer.js","rootEpic.js","store.js","index.js"],"names":["SearchResultItem","className","to","this","props","item","ndbno","name","manu","ds","Component","SearchResult","handleItemClick","event","push","target","value","bind","items","sortBy","result","list","query","q","start","end","Number","total","map","index","key","mapDispatchToProps","connect","state","setQuery","type","payload","setDataSource","dataSource","search","getReport","groupOrder","compareNutrients","a","b","indexOf","group","dataSourceIdentifierLookup","BOTH","STANDARD_REFERENCE","BRANDED_FOOD_PRODUCTS","dataSourceIdentifiers","Object","keys","decodeDataSourceIdentifier","identifier","getNutrient","food","find","nutrients","getNutrientValue","undefined","referenceIntake","Energy","Cholesterol","Protein","Riboflavin","Thiamin","Niacin","labels","SearchBar","stringifyState","searchQuery","searchDataSource","handleInputChange","handleDataSourceChange","onChange","autoFocus","checked","app","Logo","SearchPage","urlParams","URLSearchParams","window","location","has","get","searching","error","errors","style","color","message","searchResult","searchError","Breadcrumbs","fragments","split","fragment","pathname","slice","join","ProximatesChart","getValue","report","mass","totalFat","totalCarbs","protein","water","other","data01","saturatedFats","polySaturatedFats","monoSaturatedFats","otherFats","dietaryFiber","sugar","data02","colors","legend","entry","width","height","data","dataKey","cx","cy","innerRadius","outerRadius","fill","isAnimationActive","labelLine","label","midAngle","percent","sliceWideEnough","RADIAN","Math","PI","radius","x","cos","y","sin","Intl","NumberFormat","maximumFractionDigits","format","textAnchor","dominantBaseline","flatten","position","PureComponent","Comparator","bananas","round","calories","apples","bread","bubbleTeas","times","n","Analysis","nutrient","Report","datum","precision","factor","toFixed","unit","reference","datumCell","main","referenceCell","tableRow","doubleTable","datumCells","referenceCells","datumCellChucks","chunk","referenceCellChucks","datumCellChunk","tableRows","nutrientGroups","groupBy","groupByNutrientGroup","sort","sortNutrientsByGroup","row","Loading","css","ReportPage","sliderPrecision","urlNDBNO","match","params","loaded","filter","e","minValue","maxValue","step","setMass","formatLabel","isUndefined","getReportResult","cachedReports","reports","cachedReportsIds","createSelector","values","ids","cachedIds","pick","useDeepCompareEffect","difference","forEach","JSON","stringify","App","path","exact","component","TablePage","Boolean","hostname","initialState","appReducer","console","log","getReportNDBNO","gettingReport","getReportError","desc","USDA_API_KEY","rootEpic","combineEpics","action$","state$","pipe","ofType","debounceTime","action","tap","mergeMap","ajax","getJSON","encodeURIComponent","dataSourceCode","response","searchFulfilled","catchError","of","xhr","foods","getReportFulfilled","epicMiddleware","createEpicMiddleware","history","createBrowserHistory","basename","process","ReactDOM","render","store","preloadedState","createStore","combineReducers","router","connectRouter","compose","applyMiddleware","routerMiddleware","__REDUX_DEVTOOLS_EXTENSION__","run","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02ec41cd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass SearchResultItem extends Component {\n  render() {\n    return (\n      <div className=\"SearchResultItem\">\n        <Link to={`/report/${this.props.item.ndbno}`}>\n          <h3>{this.props.item.name}</h3>\n        </Link>\n        <div className=\"SearchResultItem-meta\">\n          <span className=\"SearchResultItem-metaDescriptor\">\n            <strong>ndbno: </strong>\n            {this.props.item.ndbno}\n          </span>\n          <span className=\"SearchResultItem-metaDescriptor\">\n            <strong>Manufacturer: </strong>\n            {this.props.item.manu}\n          </span>\n          <span className=\"SearchResultItem-metaDescriptor\">\n            <strong>Data Source: </strong>\n            {this.props.item.ds}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchResultItem;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { push } from \"connected-react-router\";\nimport { sortBy } from \"lodash\";\nimport SearchResultItem from \"./SearchResultItem\";\n\nclass SearchResult extends Component {\n  constructor(props) {\n    super(props);\n    this.handleItemClick = this.handleItemClick.bind(this);\n  }\n\n  handleItemClick = (event) => {\n    this.props.push(`/report/${event.target.value}`);\n  };\n\n  render() {\n    let items = sortBy(this.props.result.list.item, \"name\");\n    let query = this.props.result.list.q;\n    let ds = this.props.result.list.ds;\n    let start = this.props.result.list.start + 1;\n    let end = Number(this.props.result.list.end);\n    let total = this.props.result.list.total;\n\n    return (\n      <div className=\"SearchResult\">\n        <div className=\"descriptor\">\n          Result for \"{query}\" in \"{ds}\" ({start} to {end} of {total}):\n        </div>\n        <ul>\n          {items.map((item, index) => (\n            <li key={index}>\n              <SearchResultItem item={item}></SearchResultItem>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {\n  push,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResult);\n","import {\n  SEARCH,\n  SEARCH_FULFILLED,\n  SEARCH_REJECTED,\n  GET_REPORT,\n  GET_REPORT_FULFILLED,\n  GET_REPORT_REJECTED,\n  SET_QUERY,\n  SET_DATA_SOURCE,\n  SET_MASS,\n} from \"./actionTypes\";\n\nexport const setQuery = (query) => ({ type: SET_QUERY, payload: query });\nexport const setDataSource = (dataSource) => ({\n  type: SET_DATA_SOURCE,\n  payload: dataSource,\n});\nexport const search = () => ({ type: SEARCH });\nexport const searchFulfilled = (result) => ({\n  type: SEARCH_FULFILLED,\n  payload: result,\n});\nexport const searchRejected = (result) => ({\n  type: SEARCH_REJECTED,\n  payload: result,\n});\nexport const getReport = (ndbno) => ({ type: GET_REPORT, payload: ndbno });\nexport const getReportFulfilled = (result) => ({\n  type: GET_REPORT_FULFILLED,\n  payload: result,\n});\nexport const getReportRejected = (result) => ({\n  type: GET_REPORT_REJECTED,\n  payload: result,\n});\nexport const setMass = (mass) => ({ type: SET_MASS, payload: mass });\n","export const SET_QUERY = \"SET_QUERY\";\nexport const SET_DATA_SOURCE = \"SET_DATA_SOURCE\";\nexport const SEARCH = \"SEARCH\";\nexport const SEARCH_FULFILLED = \"SEARCH_FULFILLED\";\nexport const SEARCH_REJECTED = \"SEARCH_REJECTED\";\nexport const GET_REPORT = \"GET_REPORT\";\nexport const GET_REPORT_FULFILLED = \"GET_REPORT_FULFILLED\";\nexport const GET_REPORT_REJECTED = \"GET_REPORT_REJECTED\";\nexport const SET_MASS = \"SET_MASS\";\n","import { groupBy, find } from \"lodash\";\n\nexport const groupOrder = [\n  \"Proximates\",\n  \"Vitamins\",\n  \"Minerals\",\n  \"Lipids\",\n  \"Other\",\n];\n\nexport const sortNutrientsByGroup = (nutrients) => {\n  return nutrients.sort(compareNutrients);\n};\n\nexport const compareNutrients = (a, b) => {\n  return groupOrder.indexOf(a.group) - groupOrder.indexOf(b.group);\n};\n\nexport const groupByNutrientGroup = (nutrients) => groupBy(nutrients, \"group\");\n\nexport const dataSourceIdentifierLookup = {\n  BOTH: \"Any\",\n  STANDARD_REFERENCE: \"Standard Reference\",\n  BRANDED_FOOD_PRODUCTS: \"Branded Food Products\",\n};\n\nexport const dataSourceIdentifiers = Object.keys(dataSourceIdentifierLookup);\n\nexport const decodeDataSourceIdentifier = (identifier) =>\n  dataSourceIdentifierLookup[identifier];\n\nexport const getNutrient = (food, name) => find(food.nutrients, { name });\n\nexport const getNutrientValue = (food, name) =>\n  Number(getNutrient(food, name) ? getNutrient(food, name).value : undefined);\n\nexport const referenceIntake = {\n  Energy: 2000,\n  \"Total lipid (fat)\": 67,\n  \"Fatty acids, total saturated\": 20,\n  Cholesterol: 300,\n  \"Carbohydrate, by difference\": 300,\n  \"Fiber, total dietary\": 25,\n  Protein: 50,\n  \"Vitamin C, total ascorbic acid\": 60,\n  \"Vitamin B-6\": 1.2,\n  \"Vitamin B-12\": 6,\n  \"Vitamin E (alpha-tocopherol)\": 15,\n  \"Vitamin K (phylloquinone)\": 120,\n  Riboflavin: 1.1,\n  Thiamin: 1.1,\n  Niacin: 14,\n  \"Folate, DFE\": 400,\n  \"Vitamin A, RAE\": 600,\n  \"Vitamin D\": 800,\n  \"Vitamin D (D2 + D3)\": 20,\n  \"Calcium, Ca\": 1000,\n  \"Iron, Fe\": 19,\n  \"Magnesium, Mg\": 420,\n  \"Phosphorus, P\": 700,\n  \"Sodium, Na\": 2400,\n  \"Potassium, K\": 3533,\n  \"Zinc, Zn\": 8,\n};\n\nexport const labels = {\n  \"Vitamin C, total ascorbic acid\": \"Vitamin C\",\n  \"Vitamin B-6\": \"Vitamin B6\",\n  \"Vitamin B-12\": \"Vitamin B12\",\n  \"Vitamin E (alpha-tocopherol)\": \"Vitamin E\",\n  \"Vitamin K (phylloquinone)\": \"Vitamin E\",\n  \"Calcium, Ca\": \"Calcium\",\n  \"Iron, Fe\": \"Iron\",\n  \"Magnesium, Mg\": \"Magnesium\",\n  \"Phosphorus, P\": \"Phosphorus\",\n  \"Potassium, K\": \"Potassium\",\n  \"Sodium, Na\": \"Sodium\",\n  \"Zinc, Zn\": \"Zinc\",\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setQuery, setDataSource, search } from \"../actions\";\nimport { dataSourceIdentifiers, decodeDataSourceIdentifier } from \"../usda\";\nimport { push } from \"connected-react-router\";\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleDataSourceChange = this.handleDataSourceChange.bind(this);\n  }\n\n  stringifyState = (\n    query = this.props.searchQuery,\n    dataSource = this.props.searchDataSource\n  ) => {\n    return `?query=${query}&dataSource=${dataSource}`;\n  };\n\n  handleInputChange = (event) => {\n    this.props.setQuery(event.target.value);\n    this.props.push(this.stringifyState(event.target.value));\n    if (this.props.searchQuery) this.props.search();\n  };\n\n  handleDataSourceChange = (event) => {\n    this.props.setDataSource(event.target.value);\n    this.props.push(this.stringifyState(undefined, event.target.value));\n    if (this.props.searchQuery) this.props.search();\n  };\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <label>\n          <input\n            type=\"text\"\n            className=\"queryInput\"\n            value={this.props.searchQuery}\n            onChange={this.handleInputChange}\n            autoFocus\n          />\n        </label>\n        <br />\n        Data Source:&nbsp;\n        {dataSourceIdentifiers.map((identifier) => (\n          <label className=\"dataSourceInputLabel\" key={identifier}>\n            <input\n              type=\"radio\"\n              className=\"dataSourceInput\"\n              value={identifier}\n              checked={this.props.searchDataSource === identifier}\n              onChange={this.handleDataSourceChange}\n            ></input>\n            {decodeDataSourceIdentifier(identifier)}\n          </label>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searchQuery: state.app.searchQuery,\n  searchDataSource: state.app.searchDataSource,\n});\n\nconst mapDispatchToProps = {\n  setQuery,\n  setDataSource,\n  search,\n  push,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Logo extends Component {\n  render() {\n    return (\n      <div className=\"Logo\">\n        <Link to=\"/search\">\n          <h1>USDA</h1>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Logo;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport SearchResult from \"./SearchResult\";\nimport SearchBar from \"./SearchBar\";\nimport { setQuery, setDataSource, search } from \"../actions\";\nimport Logo from \"../Logo\";\nimport { decodeDataSourceIdentifier } from \"../usda\";\n\nclass SearchPage extends Component {\n  constructor(props) {\n    super(props);\n    let urlParams = new URLSearchParams(window.location.search);\n    if (\n      urlParams.has(\"dataSource\") &&\n      urlParams.get(\"dataSource\") !== this.props.dataSource\n    ) {\n      this.props.setDataSource(urlParams.get(\"dataSource\"));\n    }\n    if (urlParams.has(\"query\")) {\n      if (urlParams.get(\"query\") !== this.props.query) {\n        this.props.setQuery(urlParams.get(\"query\"));\n        this.props.search();\n      }\n    } else {\n      this.props.setQuery(\"\");\n    }\n  }\n\n  render() {\n    let result = this.props.searching ? (\n      <span>\n        Searching for \"{this.props.query}\" in{\" \"}\n        {decodeDataSourceIdentifier(this.props.dataSource)}...\n      </span>\n    ) : this.props.error ? (\n      this.props.error.errors.error.map((error, index) => (\n        <div key={index} style={{ color: \"red\" }}>\n          {error.message}\n        </div>\n      ))\n    ) : this.props.result ? (\n      <SearchResult result={this.props.result} />\n    ) : null;\n\n    return (\n      <div className=\"SearchPage\">\n        <div className=\"header\">\n          <Logo />\n          <SearchBar />\n        </div>\n        <hr />\n        <div className=\"ResultContainer\">{result}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searching: state.app.searching,\n  query: state.app.searchQuery,\n  dataSource: state.app.searchDataSource,\n  result: state.app.searchResult,\n  // items: get(state.app.searchResult, 'list.item'),\n  error: state.app.searchError,\n});\n\nconst mapDispatchToProps = {\n  setQuery,\n  setDataSource,\n  search,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nclass Breadcrumbs extends Component {\n  render() {\n    let fragments = this.props.name.split(\", \");\n    return (\n      <div className=\"Breadcrumbs\">\n        {fragments.map((fragment, index, fragments) => (\n          <span key={index}>\n            &nbsp;/&nbsp;\n            <Link\n              to={{\n                pathname: \"/search\",\n                search: `?query=${fragments\n                  .slice(0, index + 1)\n                  .join(\", \")}&dataSource=${this.props.dataSource}`,\n              }}\n              className=\"Breadcrumbs-item\"\n            >\n              {fragment}\n            </Link>\n          </span>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  dataSource: state.app.searchDataSource,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Breadcrumbs);\n","import React, { PureComponent } from \"react\";\nimport { PieChart, Pie, Cell, Label, Legend } from \"recharts\";\nimport { getNutrientValue } from \"../usda\";\nimport { flatten } from \"lodash\";\n\nexport default class ProximatesChart extends PureComponent {\n  getValue = (key) =>\n    (getNutrientValue(this.props.report, key) * this.props.mass) / 100;\n\n  render() {\n    let totalFat = this.getValue(\"Total lipid (fat)\");\n    let totalCarbs = this.getValue(\"Carbohydrate, by difference\");\n    let protein = this.getValue(\"Protein\");\n    let water = this.getValue(\"Water\");\n    let other = this.props.mass - (totalFat + totalCarbs + protein + water);\n\n    const data01 = [\n      { name: \"Total Fat\", value: totalFat },\n      { name: \"Total Carbs\", value: totalCarbs },\n      { name: \"Protein\", value: protein },\n      { name: \"Water\", value: water },\n      { name: \"Other\", value: other },\n    ];\n\n    let saturatedFats = this.getValue(\"Fatty acids, total saturated\");\n    let polySaturatedFats = this.getValue(\"Fatty acids, total polyunsaturated\");\n    let monoSaturatedFats = this.getValue(\"Fatty acids, total monounsaturated\");\n    let otherFats =\n      totalFat - saturatedFats - polySaturatedFats - monoSaturatedFats;\n\n    let dietaryFiber = this.getValue(\"Fiber, total dietary\");\n    let sugar = this.getValue(\"Sugars, total\");\n    let otherCarbs = totalCarbs - dietaryFiber - sugar;\n\n    const data02 = [\n      { name: \"Polyunsat. Fat\", value: polySaturatedFats },\n      { name: \"Monounsat. Fat\", value: monoSaturatedFats },\n      { name: \"Saturated Fat\", value: saturatedFats },\n      { name: \"Other Fats\", value: otherFats },\n      { name: \"Dietary Fiber\", value: dietaryFiber },\n      { name: \"Sugar\", value: sugar },\n      { name: \"Other Carbs\", value: otherCarbs },\n      { name: \"Protein\", value: protein },\n      { name: \"Water\", value: water },\n      { name: \"Other\", value: other },\n    ];\n\n    let sliceWideEnough = (props) => {\n      return props.percent > 0.03;\n    };\n\n    let label = (props) => {\n      let {\n        cx,\n        cy,\n        midAngle,\n        innerRadius,\n        outerRadius,\n        value,\n        index,\n        fill,\n      } = props;\n\n      if (!sliceWideEnough(props)) return null;\n\n      const RADIAN = Math.PI / 180;\n      const radius = 10 + innerRadius + (outerRadius - innerRadius);\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\n      value = new Intl.NumberFormat(\"en-IN\", {\n        maximumFractionDigits: 1,\n      }).format(value);\n\n      return (\n        <text\n          x={x}\n          y={y}\n          fill={fill}\n          textAnchor={x > cx ? \"start\" : \"end\"}\n          dominantBaseline=\"central\"\n        >\n          {data02[index].name} {value} g\n        </text>\n      );\n    };\n\n    let colors = [\n      [\"#ffeb3b\", \"#fdd835\", \"#fbc02d\", \"#f9a825\"],\n      [\"#aed581\", \"#8bc34a\", \"#689f38\"],\n      [\"#f06292\"],\n      [\"#2196f3\"],\n      [\"#e0e0e0\"],\n    ];\n\n    let legend = data01.map((entry, index) => ({\n      value: entry.name,\n      color: colors[index][0],\n    }));\n\n    return (\n      <PieChart width={500} height={275}>\n        <Pie\n          data={data01}\n          dataKey=\"value\"\n          cx={250}\n          cy={125}\n          innerRadius={30}\n          outerRadius={60}\n          fill=\"#8884d8\"\n          isAnimationActive={false}\n        >\n          {data01.map((entry, index) => (\n            <Cell key={index} fill={colors[index][0]} />\n          ))}\n        </Pie>\n        <Pie\n          data={data02}\n          dataKey=\"value\"\n          cx={250}\n          cy={125}\n          innerRadius={70}\n          outerRadius={90}\n          fill=\"red\"\n          labelLine={false}\n          label={label}\n          isAnimationActive={false}\n        >\n          {data02.map((entry, index) => (\n            <Cell key={`index`} fill={flatten(colors)[index]} />\n          ))}\n          <Label value={`${this.props.mass} g`} position=\"center\" />\n        </Pie>\n        <Legend payload={legend} />\n      </PieChart>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { times } from \"lodash\";\n\nconst BANANA_FACTOR = 105;\nconst APPLE_FACTOR = 95;\nconst BREAD_FACTOR = 67;\nconst BUBBLE_TEA_FACTOR = 350;\n\nclass Comparator extends Component {\n  render() {\n    let bananas = Math.round(this.props.calories / BANANA_FACTOR);\n    let apples = Math.round(this.props.calories / APPLE_FACTOR);\n    let bread = Math.round(this.props.calories / BREAD_FACTOR);\n    let bubbleTeas = Math.round(this.props.calories / BUBBLE_TEA_FACTOR);\n\n    return (\n      <div className=\"Comparator\">\n        <div className=\"Comparator-header\">\n          <h2>{this.props.calories} kcal</h2>\n          <br />\n          equal\n        </div>\n        <div className=\"emoji-comparator\">\n          {times(bubbleTeas, (n) => \"🍹\")}\n          <br />\n          {bubbleTeas} Cups of Bubble Tea\n        </div>\n        <div className=\"emoji-comparator\">\n          {times(bananas, (n) => \"🍌\")}\n          <br />\n          {bananas} Medium Bananas (118g)\n        </div>\n        <div className=\"emoji-comparator\">\n          {times(apples, (n) => \"🍎\")}\n          <br />\n          {apples} Apples (182g)\n        </div>\n        <div className=\"emoji-comparator\">\n          {times(bread, (n) => \"🍞\")}\n          <br />\n          {bread} Slices of White Bread (28g)\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Comparator;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ProximatesChart from \"./ProximatesChart\";\nimport Comparator from \"./Comparator\";\n\nclass Analysis extends Component {\n  render() {\n    let calories =\n      (this.props.report.nutrients.find(\n        (nutrient) => nutrient.name === \"Energy\"\n      ).value *\n        this.props.mass) /\n      100;\n\n    return (\n      <div className=\"Analysis\">\n        <ProximatesChart report={this.props.report} mass={this.props.mass} />\n        <Comparator calories={calories} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  mass: state.app.mass,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Analysis);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  sortNutrientsByGroup,\n  groupByNutrientGroup,\n  getNutrient,\n  referenceIntake,\n  labels,\n} from \"../usda\";\nimport { chunk } from \"lodash\";\n\nclass Report extends Component {\n  datum = (key, precision = 0) => {\n    let nutrient = getNutrient(this.props.report, key);\n    if (!nutrient) return null;\n    return `${Number(nutrient.value * this.props.factor).toFixed(precision)} ${\n      nutrient.unit\n    }`;\n  };\n\n  reference = (key) => {\n    return referenceIntake[key]\n      ? `${Math.round(\n          ((getNutrient(this.props.report, key).value * this.props.factor) /\n            referenceIntake[key]) *\n            100\n        )} %`\n      : null;\n  };\n\n  datumCell = (key, label = key, main) => (\n    <td className={`nutTable-left ${!main && \"indent-2\"}`}>\n      {main ? <strong>{label} </strong> : label + \" \"}\n      {this.datum(key)}\n    </td>\n  );\n  referenceCell = (key) => (\n    <td className=\"nutTable-right\">{this.reference(key)}</td>\n  );\n\n  tableRow = (index, key, label = key, main = false) => {\n    if (getNutrient(this.props.report, key)) {\n      return (\n        <tr key={index}>\n          {this.datumCell(key, label, main)}\n          {this.referenceCell(key)}\n        </tr>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  doubleTable = (nutrients) => {\n    let datumCells = nutrients.map((nutrient) =>\n      this.datumCell(nutrient.name, labels[nutrient.name], true)\n    );\n    let referenceCells = nutrients.map((nutrient) =>\n      this.referenceCell(nutrient.name)\n    );\n\n    let datumCellChucks = chunk(datumCells, 2);\n    let referenceCellChucks = chunk(referenceCells, 2);\n\n    return (\n      <table className=\"nutTable\">\n        <tbody>\n          {datumCellChucks.map((datumCellChunk, index) => (\n            <tr key={index}>\n              {datumCellChucks[index][0]}\n              {referenceCellChucks[index][0]}\n              {datumCellChucks[index][1] || <td className=\"nutTable-left\"></td>}\n              {referenceCellChucks[index][1] || (\n                <td className=\"nutTable-right\"></td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  };\n\n  tableRows = [\n    { label: \"Calories\", key: \"Energy\", main: true },\n    { label: \"Total Fat\", key: \"Total lipid (fat)\", main: true },\n    {\n      label: \"Saturated fat\",\n      key: \"Fatty acids, total saturated\",\n      main: false,\n    },\n    {\n      label: \"Polyunsaturated fat\",\n      key: \"Fatty acids, total polyunsaturated\",\n      main: false,\n    },\n    {\n      label: \"Monounsaturated fat\",\n      key: \"Fatty acids, total monounsaturated\",\n      main: false,\n    },\n    { label: \"Water\", key: \"Water\", main: true },\n    { label: \"Cholesterol\", key: \"Cholesterol\", main: true },\n    { label: \"Sodium\", key: \"Sodium, Na\", main: true },\n    { label: \"Potassium\", key: \"Potassium, K\", main: true },\n    {\n      label: \"Total Carbohydrate\",\n      key: \"Carbohydrate, by difference\",\n      main: true,\n    },\n    { label: \"Dietary fiber\", key: \"Fiber, total dietary\", main: false },\n    { label: \"Sugar\", key: \"Sugars, total\", main: false },\n    { label: \"Protein\", key: \"Protein\", main: true },\n  ];\n\n  render() {\n    let nutrients = sortNutrientsByGroup(this.props.report.nutrients);\n    let nutrientGroups = groupByNutrientGroup(nutrients);\n\n    return (\n      <div className=\"Report\">\n        <table className=\"nutTable\">\n          <tbody>\n            {this.tableRows.map((row, index) =>\n              this.tableRow(index, row.key, row.label, row.main)\n            )}\n          </tbody>\n        </table>\n        {nutrientGroups[\"Vitamins\"] &&\n          this.doubleTable(nutrientGroups[\"Vitamins\"])}\n        {nutrientGroups[\"Minerals\"] &&\n          this.doubleTable(nutrientGroups[\"Minerals\"])}\n        {nutrientGroups[\"Other\"] && this.doubleTable(nutrientGroups[\"Other\"])}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  mass: state.app.mass,\n  factor: state.app.mass / 100,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Report);\n","import React from \"react\";\nimport { css } from \"emotion\";\n\nconst Loading = (props) => {\n  return (\n    <div\n      className={css`\n        margin-top: 2rem;\n        margin-left: 2rem;\n        border: 8px solid #f06292;\n        border-top: 8px solid transparent; /* Blue */\n        border-radius: 50%;\n        width: 80px;\n        height: 80px;\n        animation: spin 1s linear infinite;\n\n        @keyframes spin {\n          0% {\n            transform: rotate(0deg);\n          }\n          100% {\n            transform: rotate(360deg);\n          }\n        }\n      `}\n    >\n      Loading\n    </div>\n  );\n};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport InputRange from \"react-input-range\";\nimport \"react-input-range/lib/css/index.css\";\nimport { get, isUndefined } from \"lodash\";\nimport { css } from \"emotion\";\n\nimport Breadcrumbs from \"./Breadcrumbs\";\nimport Analysis from \"./Analysis\";\nimport Report from \"./Report\";\nimport Loading from \"./Loading\";\n\nimport { getReport, setMass } from \"../actions\";\n\nclass ReportPage extends Component {\n  constructor(props) {\n    super(props);\n    this.urlNDBNO = this.props.match.params.ndbno;\n    this.props.getReport(this.urlNDBNO);\n  }\n\n  sliderPrecision = (mass) => {\n    if (mass < 25) return 1;\n    if (mass < 100) return 5;\n    if (mass < 500) return 10;\n    return 50;\n  };\n\n  render() {\n    return (\n      <div className=\"ReportPage\">\n        <div className=\"header\">\n          <div>\n            <h1>\n              {this.props.loaded\n                ? `${this.props.name}`\n                : `Loading report for ndbno ${this.urlNDBNO}`}\n              <br />\n            </h1>\n            <div className=\"descriptor\">\n              {this.props.loaded && (\n                <small>\n                  {[this.props.ds, this.props.manu, this.props.ndbno]\n                    .filter((e) => e)\n                    .join(\" · \")}\n                </small>\n              )}\n            </div>\n            {this.props.loaded && <Breadcrumbs name={this.props.name} />}\n            <Link to=\"/search/\" className=\"newSearchLink\">\n              &#8592; New Search\n            </Link>\n            <InputRange\n              className=\"massInput\"\n              minValue={0}\n              maxValue={1000}\n              step={this.sliderPrecision(this.props.mass)}\n              value={this.props.mass}\n              onChange={this.props.setMass}\n              formatLabel={(value) => `Mass ${value} g`}\n            />\n          </div>\n        </div>\n        {this.props.loaded ? (\n          <div className=\"ReportPage-container\">\n            <div className=\"ReportPage-report\">\n              <Report report={this.props.report} />\n            </div>\n            <div className=\"ReportPage-analysis\">\n              <Analysis report={this.props.report} />\n            </div>\n          </div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loaded: !isUndefined(state.app.getReportResult),\n  report: state.app.getReportResult,\n  name: get(state.app.getReportResult, \"desc.name\"),\n  ds: get(state.app.getReportResult, \"desc.ds\"),\n  manu: get(state.app.getReportResult, \"desc.manu\"),\n  ndbno: get(state.app.getReportResult, \"desc.ndbno\"),\n  mass: state.app.mass,\n});\n\nconst mapDispatchToProps = {\n  getReport,\n  setMass,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportPage);\n","import { createSelector } from \"reselect\";\n\nexport const cachedReports = (state) => state.app.reports;\nexport const cachedReportsIds = createSelector([cachedReports], Object.keys);\nexport const cachedReportsAsArray = createSelector(\n  [cachedReports],\n  Object.values\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport useDeepCompareEffect from \"use-deep-compare-effect\";\n\nimport { get, difference, pick } from \"lodash\";\n\nimport { getReport } from \"../actions\";\nimport { cachedReportsIds, cachedReports } from \"../selectors\";\n\nexport const TablePage = ({ ids, cachedIds, reports, getReport }) => {\n  useDeepCompareEffect(() => {\n    const idsToGet = difference(ids, cachedIds);\n    idsToGet.forEach(getReport);\n  }, [ids, cachedIds, getReport]);\n  return (\n    <div>\n      {JSON.stringify(ids)}\n      <br />\n      {JSON.stringify(reports)}\n    </div>\n  );\n};\n\nTablePage.propTypes = {\n  ids: PropTypes.arrayOf(PropTypes.string),\n  cachedIds: PropTypes.arrayOf(PropTypes.string),\n  reports: PropTypes.arrayOf(PropTypes.object),\n  getReport: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => {\n  const ids = get(state, \"router.location.query.ids\", \"\").split(\",\");\n  return {\n    cachedIds: cachedReportsIds(state),\n    ids,\n    reports: Object.values(pick(cachedReports(state), ids)),\n  };\n};\n\nconst mapDispatchToProps = {\n  getReport,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TablePage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport SearchPage from \"./Search/SearchPage\";\nimport ReportPage from \"./Report/ReportPage\";\nimport TablePage from \"./Table/TablePage\";\n\nexport class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={SearchPage} />\n          <Route path=\"/search\" component={SearchPage} />\n          <Route path=\"/report/:ndbno\" component={ReportPage} />\n          <Route path=\"/compare\" component={TablePage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  SEARCH,\n  SEARCH_FULFILLED,\n  SEARCH_REJECTED,\n  GET_REPORT,\n  GET_REPORT_FULFILLED,\n  GET_REPORT_REJECTED,\n  SET_QUERY,\n  SET_DATA_SOURCE,\n  SET_MASS,\n} from \"./actionTypes\";\nimport { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nconst initialState = {\n  searching: false,\n  searchQuery: \"\",\n  searchDataSource: \"STANDARD_REFERENCE\",\n  mass: 100,\n  reports: {},\n};\n\nconst appReducer = (state = initialState, { type, payload }) => {\n  console.log(type, payload);\n  switch (type) {\n    case SET_QUERY:\n      return {\n        ...state,\n        searchQuery: payload,\n        searchResult: undefined,\n        searchError: undefined,\n      };\n\n    case SET_DATA_SOURCE:\n      return {\n        ...state,\n        searchDataSource: payload,\n        searchResult: undefined,\n        searchError: undefined,\n      };\n\n    case SEARCH:\n      if (state.searchQuery === \"\") {\n        return {\n          ...state,\n          searching: false,\n          searchResult: undefined,\n          searchError: undefined,\n        };\n      } else {\n        return {\n          ...state,\n          searching: true,\n          searchResult: undefined,\n          searchError: undefined,\n        };\n      }\n\n    case SEARCH_FULFILLED:\n      return { ...state, searchResult: payload, searching: false };\n\n    case SEARCH_REJECTED:\n      return { ...state, searchError: payload, searching: false };\n\n    case GET_REPORT:\n      return {\n        ...state,\n        getReportNDBNO: payload,\n        gettingReport: true,\n        getReportResult: undefined,\n        getReportError: undefined,\n      };\n\n    case GET_REPORT_FULFILLED:\n      return {\n        ...state,\n        getReportResult: payload,\n        gettingReport: false,\n        getReportNDBNO: undefined,\n        reports: { ...state.reports, [payload.desc.ndbno]: payload.desc },\n      };\n\n    case GET_REPORT_REJECTED:\n      return {\n        ...state,\n        getReportError: payload,\n        gettingReport: false,\n        getReportNDBNO: undefined,\n      };\n\n    case SET_MASS:\n      return { ...state, mass: payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default (history) =>\n  combineReducers({\n    router: connectRouter(history),\n    app: appReducer,\n  });\n","import { ajax } from \"rxjs/ajax\";\nimport {\n  mergeMap,\n  map,\n  catchError,\n  debounceTime,\n  filter,\n  tap,\n} from \"rxjs/operators\";\nimport { ofType, combineEpics } from \"redux-observable\";\nimport {\n  SEARCH,\n  SEARCH_REJECTED,\n  GET_REPORT,\n  GET_REPORT_REJECTED,\n} from \"./actionTypes\";\nimport {\n  searchFulfilled,\n  searchRejected,\n  getReportRejected,\n  getReportFulfilled,\n} from \"./actions\";\nimport { of } from \"rxjs\";\n\nconst USDA_API_KEY = \"FYTSTF75mesLeO85VFSKvqgWEzdL0hQAYCZUtjJk\";\n\nconst decodeDataSource = (dataSourceCode) =>\n  ({\n    BOTH: encodeURIComponent(\"\"),\n    STANDARD_REFERENCE: encodeURIComponent(\"Standard Reference\"),\n    BRANDED_FOOD_PRODUCTS: encodeURIComponent(\"Branded Food Products\"),\n  }[dataSourceCode]);\n\nconst searchEpic = (action$, state$) =>\n  action$.pipe(\n    ofType(SEARCH),\n    debounceTime(500),\n    filter((action) => state$.value.app.searchQuery !== \"\"),\n    tap(console.log(state$.value)),\n    mergeMap((action) =>\n      ajax\n        .getJSON(\n          `https://api.nal.usda.gov/ndb/search?api_key=${USDA_API_KEY}&q=${encodeURIComponent(\n            state$.value.app.searchQuery\n          )}&ds=${decodeDataSource(state$.value.app.searchDataSource)}`\n        )\n        .pipe(\n          map((response) =>\n            response.errors\n              ? searchRejected(response)\n              : searchFulfilled(response)\n          ),\n          catchError((error) =>\n            of({\n              type: SEARCH_REJECTED,\n              payload: error.xhr.response,\n              error: true,\n            })\n          )\n        )\n    )\n  );\n\nconst getReportEpic = (action$) =>\n  action$.pipe(\n    ofType(GET_REPORT),\n    debounceTime(500),\n    mergeMap((action) =>\n      ajax\n        .getJSON(\n          `https://api.nal.usda.gov/ndb/V2/reports?api_key=${USDA_API_KEY}&ndbno=${encodeURIComponent(\n            action.payload\n          )}`\n        )\n        .pipe(\n          map((response) =>\n            response.foods[0].error\n              ? getReportRejected(response)\n              : getReportFulfilled(response.foods[0].food)\n          ),\n          catchError((error) =>\n            of({\n              type: GET_REPORT_REJECTED,\n              payload: error.xhr.response,\n              error: true,\n            })\n          )\n        )\n    )\n  );\n\nconst rootEpic = combineEpics(searchEpic, getReportEpic);\nexport default rootEpic;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\nimport { createBrowserHistory } from \"history\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport rootReducer from \"./rootReducer.js\";\nimport rootEpic from \"./rootEpic.js\";\n\nconst epicMiddleware = createEpicMiddleware();\nexport const history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL + \"/\",\n});\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    rootReducer(history),\n    preloadedState,\n    compose(\n      applyMiddleware(routerMiddleware(history), epicMiddleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store, { history } from \"./store.js\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\n\nReactDOM.render(\n  <Provider store={store()}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}