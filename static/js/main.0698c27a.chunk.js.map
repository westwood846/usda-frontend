{"version":3,"sources":["Search/SearchResult.js","actions.js","actionTypes.js","Search/SearchBar.js","Search/SearchPage.js","usda.js","Report/NutrientsTable.js","Report/Report.js","Report/Breadcrumbs.js","Report/Analysis.js","Report/ReportPage.js","App.js","serviceWorker.js","rootReducer.js","rootEpic.js","store.js","index.js"],"names":["SearchResult","props","handleItemClick","event","push","target","value","bind","items","sortBy","this","result","list","item","query","q","ds","start","end","Number","total","className","map","index","key","onClick","ndbno","name","Component","mapDispatchToProps","connect","state","setQuery","type","payload","search","SearchBar","handleInputChange","searchQuery","handleDataSourceChange","setDataSource","onChange","autoFocus","checked","searchDataSource","dataSource","app","SearchPage","urlParams","URLSearchParams","window","location","has","get","searching","error","JSON","stringify","searchResult","searchError","groupOrder","compareNutrients","a","b","indexOf","group","NutrientTable","nutrients","nutrient","nutrient_id","unit","Report","nutrientGroups","groupBy","groupByNutrientGroup","sort","sortNutrientsByGroup","report","Object","keys","groupKey","Breadcrumbs","fragments","split","fragment","to","pathname","slice","join","Analysis","calories","find","bananas","Math","round","bread","times","n","ReportPage","urlNDBNO","match","params","getReport","loaded","manu","filter","e","isUndefined","getReportResult","App","path","exact","component","Boolean","hostname","initialState","appReducer","console","log","undefined","getReportNDBNO","gettingReport","getReportError","history","combineReducers","router","connectRouter","USDA_API_KEY","rootEpic","combineEpics","action$","state$","pipe","ofType","debounceTime","action","tap","mergeMap","ajax","getJSON","encodeURIComponent","dataSourceCode","BOTH","STANDARD_REFERENCE","BRANDED_FOOD_PRODUCTS","response","errors","searchFulfilled","catchError","of","xhr","foods","getReportFulfilled","food","epicMiddleware","createEpicMiddleware","createBrowserHistory","basename","process","ReactDOM","render","store","preloadedState","createStore","rootReducer","compose","applyMiddleware","routerMiddleware","run","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0698c27a.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { push } from 'connected-react-router';\nimport { sortBy } from 'lodash';\n\nclass SearchResult extends Component {\n  constructor(props) {\n    super(props);\n    this.handleItemClick = this.handleItemClick.bind(this);\n  }\n  \n  handleItemClick = (event) => {\n    this.props.push(`/report/${event.target.value}`);\n  }\n  \n  render() {\n    let items = sortBy(this.props.result.list.item, 'name');\n    let query = this.props.result.list.q;\n    let ds = this.props.result.list.ds;\n    let start = this.props.result.list.start;\n    let end = Number(this.props.result.list.end) - 1;\n    let total = this.props.result.list.total;\n\n    return (\n      <div className=\"SearchResult\">\n        <div>Result for \"{query}\" in \"{ds}\" ({start} to {end} of {total}):</div>\n        <ul>\n          {items.map((item, index) => <li key={index}><button onClick={this.handleItemClick} value={item.ndbno}>{item.name}</button></li>)}\n        </ul>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = {\n  push\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResult)\n","import { SEARCH, SEARCH_FULFILLED, SEARCH_REJECTED, GET_REPORT, GET_REPORT_FULFILLED, GET_REPORT_REJECTED, SET_QUERY, SET_DATA_SOURCE } from './actionTypes';\n\nexport const setQuery = (query) => ({type: SET_QUERY, payload: query });\nexport const setDataSource = (dataSource) => ({type: SET_DATA_SOURCE, payload: dataSource });\nexport const search = () => ({type: SEARCH });\nexport const searchFulfilled = (result) => ({type: SEARCH_FULFILLED, payload: result });\nexport const searchRejected = (result) => ({type: SEARCH_REJECTED, payload: result });\nexport const getReport = (ndbno) => ({type: GET_REPORT, payload: ndbno });\nexport const getReportFulfilled = (result) => ({type: GET_REPORT_FULFILLED, payload: result });\nexport const getReportRejected = (result) => ({type: GET_REPORT_REJECTED, payload: result });","export const SET_QUERY = 'SET_QUERY';\nexport const SET_DATA_SOURCE = 'SET_DATA_SOURCE';\nexport const SEARCH = 'SEARCH';\nexport const SEARCH_FULFILLED = 'SEARCH_FULFILLED';\nexport const SEARCH_REJECTED = 'SEARCH_REJECTED';\nexport const GET_REPORT = 'GET_REPORT';\nexport const GET_REPORT_FULFILLED = 'GET_REPORT_FULFILLED';\nexport const GET_REPORT_REJECTED = 'GET_REPORT_REJECTED';","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setQuery, setDataSource, search } from '../actions';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleDataSourceChange = this.handleDataSourceChange.bind(this);\n  }\n  \n  handleInputChange = (event) => {\n    this.props.setQuery(event.target.value);\n    if (this.props.searchQuery) this.props.search();\n  }\n  \n  handleDataSourceChange = (event) => {\n    this.props.setDataSource(event.target.value);\n    if (this.props.searchQuery) this.props.search();\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <label>Search: <input type=\"text\" className=\"queryInput\" value={this.props.searchQuery} onChange={this.handleInputChange} autoFocus/></label><br/>\n        Data Source:&nbsp;\n        <label className=\"dataSourceInputLabel\"><input type=\"radio\" className=\"dataSourceInput\" value=\"BOTH\" checked={this.props.searchDataSource === 'BOTH'} onChange={this.handleDataSourceChange}></input>Both</label>\n        <label className=\"dataSourceInputLabel\"><input type=\"radio\" className=\"dataSourceInput\" value=\"STANDARD_REFERENCE\" checked={this.props.searchDataSource === 'STANDARD_REFERENCE'} onChange={this.handleDataSourceChange}></input>Standard Reference</label>\n        <label className=\"dataSourceInputLabel\"><input type=\"radio\" className=\"dataSourceInput\" value=\"BRANDED_FOOD_PRODUCTS\" checked={this.props.searchDataSource === 'BRANDED_FOOD_PRODUCTS'} onChange={this.handleDataSourceChange}></input>Branded Food Products</label>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searchQuery: state.app.searchQuery,\n  searchDataSource: state.app.searchDataSource\n});\n\nconst mapDispatchToProps = {\n  setQuery,\n  setDataSource,\n  search\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport SearchResult from './SearchResult';\nimport SearchBar from './SearchBar';\nimport { setQuery, search } from '../actions';\n\nclass SearchPage extends Component {\n  constructor(props) {\n    super(props);\n    let urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.has('dataSource')) {\n      this.props.setQuery(urlParams.get('dataSource'));\n    }\n    if (urlParams.has('query')) {\n      this.props.setQuery(urlParams.get('query'));\n      this.props.search();\n    } else {\n      this.props.setQuery('');\n    }\n  }\n  \n\n  render() {\n    let result = this.props.searching\n      ? <span>Searching for \"{this.props.query}\"...</span>\n      : this.props.error\n        ? <pre><code>{JSON.stringify(this.props.error, null, 2)}</code></pre>\n        : this.props.result\n          ? <SearchResult result={this.props.result}/>\n          : null\n\n    return (\n      <div className=\"SearchPage\">\n        <h1>Search USDA API</h1>\n        <SearchBar/>\n        {result}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searching: state.app.searching,\n  query: state.app.searchQuery,\n  result: state.app.searchResult,\n  // items: get(state.app.searchResult, 'list.item'),\n  error: state.app.searchError\n})\n\nconst mapDispatchToProps = {\n  setQuery,\n  search\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage)\n","import { groupBy } from 'lodash';\n\n\nexport const groupOrder = ['Proximates', 'Vitamins', 'Minerals', 'Lipids', 'Other'];\n\nexport const sortNutrientsByGroup = (nutrients) => {\n  return nutrients.sort(compareNutrients);\n}\n\nexport const compareNutrients = (a, b) => {\n  return groupOrder.indexOf(a.group) - groupOrder.indexOf(b.group) ;\n}\n\nexport const groupByNutrientGroup = (nutrients) => groupBy(nutrients, 'group');","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nexport class NutrientTable extends Component {\n  render() {\n    return (\n      <table className=\"NutrientTable\">\n        <thead>\n          <tr>\n            <td>id</td>\n            <td>Name</td>\n            <td>Group</td>\n            <td>Per 100 g</td>\n          </tr>\n        </thead>\n        <tbody>\n          {this.props.nutrients.map((nutrient, index) => (\n            <tr key={index}>\n              <td>{nutrient.nutrient_id}</td>\n              <td>{nutrient.name}</td>\n              <td>{nutrient.group}</td>\n              <td>{`${nutrient.value} ${nutrient.unit}`}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  \n})\n\nconst mapDispatchToProps = {\n  \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NutrientTable)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { sortNutrientsByGroup, groupByNutrientGroup } from '../usda';\nimport { NutrientTable } from './NutrientsTable';\n\nclass Report extends Component {\n  render() {\n    let nutrients = sortNutrientsByGroup(this.props.report.nutrients);\n    let nutrientGroups = groupByNutrientGroup(nutrients);\n\n    return (\n      <div className=\"Report\">\n        {Object.keys(nutrientGroups).map((groupKey, index) => <NutrientTable nutrients={nutrientGroups[groupKey]} key={index}/>)}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Report)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass Breadcrumbs extends Component {\n  render() {\n    let fragments = this.props.name.split(', ');\n    return (\n      <div className=\"Breadcrumbs\">\n        {fragments.map((fragment, index, fragments) => \n          <span key={index}>\n            &nbsp;/&nbsp;\n            <Link to={{pathname: \"/search\", search: `?query=${fragments.slice(0, index + 1).join(', ')}&dataSource=${this.props.dataSource}`}} className=\"Breadcrumbs-item\">\n              {fragment}\n            </Link>\n          </span>\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  dataSource: state.app.searchDataSource\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Breadcrumbs)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { times } from 'lodash';\n\nconst BANANA_FACTOR = 105;\nconst BREAD_FACTOR = 67;\n\nclass Analysis extends Component {\n  render() {\n    let calories = this.props.report.nutrients.find(nutrient => nutrient.name === \"Energy\");\n    let bananas = Math.round(Number(calories.value) / BANANA_FACTOR);\n    let bread = Math.round(Number(calories.value) / BREAD_FACTOR);\n\n    return (\n      <div className=\"Analysis\">\n        <div>\n          {calories.value} {calories.unit} equal...\n        </div>\n        <div className=\"emoji-comparator\">\n          {times(bananas, n => '🍌')} {bananas} medium bananas (118g)\n        </div>\n        <div className=\"emoji-comparator\">\n          {times(bread, n => '🍞')} {bread} slices of white bread (28g)\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  \n})\n\nconst mapDispatchToProps = {\n  \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Analysis)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Report from './Report';\nimport { getReport } from '../actions';\nimport Breadcrumbs from './Breadcrumbs';\nimport { get, isUndefined } from 'lodash';\nimport { Link } from \"react-router-dom\";\nimport Analysis from './Analysis';\n\nclass ReportPage extends Component {\n  constructor(props) {\n    super(props);\n    this.urlNDBNO = this.props.match.params.ndbno;\n    this.props.getReport(this.urlNDBNO);\n  }\n\n\n  render() {\n    return (\n      <div className=\"ReportPage\">\n        <Link to=\"/search/\">&#8592; New Search</Link>\n        <h1>\n          {this.props.loaded ? `${this.props.name}` : `Loading report for ndbno ${this.urlNDBNO}`}<br/>\n          {this.props.loaded && <small>{[this.props.ds, this.props.manu, this.props.ndbno].filter(e=>e).join(\" · \")}</small>}\n        </h1>\n        {this.props.loaded && <Breadcrumbs name={this.props.name}/>}\n        {this.props.loaded && <div className=\"ReportPage-container\">\n          <div className=\"ReportPage-report\">\n            <Report report={this.props.report}/>\n          </div>\n          <div className=\"ReportPage-analysis\">\n            <Analysis report={this.props.report}/>\n          </div>\n        </div>}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loaded: !isUndefined(state.app.getReportResult),\n  report: state.app.getReportResult,\n  name: get(state.app.getReportResult, 'desc.name'),\n  ds: get(state.app.getReportResult, 'desc.ds'),\n  manu: get(state.app.getReportResult, 'desc.manu'),\n  ndbno: get(state.app.getReportResult, 'desc.ndbno'),\n})\n\nconst mapDispatchToProps = {\n  getReport\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportPage)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport SearchPage from './Search/SearchPage';\nimport ReportPage from './Report/ReportPage';\n\nexport class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={SearchPage}/>\n          <Route path=\"/search\" component={SearchPage}/>\n          <Route path=\"/report/:ndbno\" component={ReportPage}/>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = {\n  \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SEARCH, SEARCH_FULFILLED, SEARCH_REJECTED, GET_REPORT, GET_REPORT_FULFILLED, GET_REPORT_REJECTED, SET_QUERY, SET_DATA_SOURCE } from \"./actionTypes\";\nimport { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nconst initialState = {\n  searching: false,\n  searchQuery: '',\n  searchDataSource: 'STANDARD_REFERENCE'\n}\n\nconst appReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n\n  case SET_QUERY:\n    console.log(type, payload)\n    return { ...state, searchQuery: payload };\n\n  case SET_DATA_SOURCE:\n    console.log(type, payload)\n    return { ...state, searchDataSource: payload };\n\n  case SEARCH:\n    console.log(type, payload)\n    // if (!payload) payload = {};\n    // payload.query = state.searchQuery;\n    // payload.dataSource = state.searchDataSource;\n    return { ...state, searching: true, searchResult: undefined, searchError: undefined };\n\n  case SEARCH_FULFILLED:\n    console.log(type, payload)\n    return { ...state, searchResult: payload, searching: false };\n    \n  case SEARCH_REJECTED:\n    console.log(type, payload)\n    return { ...state, searchError: payload, searching: false };\n\n  case GET_REPORT:\n    console.log(type, payload)\n    return { ...state, getReportNDBNO: payload, gettingReport: true, getReportResult: undefined, getReportError: undefined };\n\n  case GET_REPORT_FULFILLED:\n    console.log(type, payload)\n    return { ...state, getReportResult: payload, gettingReport: false, getReportNDBNO: undefined };\n    \n  case GET_REPORT_REJECTED:\n    console.log(type, payload)\n    return { ...state, getReportError: payload, gettingReport: false, getReportNDBNO: undefined };\n\n  default:\n    return state\n  }\n}\n\nexport default (history) => combineReducers({\n  router: connectRouter(history),\n  app: appReducer\n});","import { ajax } from 'rxjs/ajax';\nimport { mergeMap, map, catchError, debounceTime, filter, tap } from 'rxjs/operators';\nimport { ofType, combineEpics } from 'redux-observable';\nimport { SEARCH, SEARCH_REJECTED, GET_REPORT, GET_REPORT_REJECTED } from './actionTypes';\nimport { searchFulfilled, searchRejected, getReportRejected, getReportFulfilled } from './actions';\nimport { of } from 'rxjs';\n\nconst USDA_API_KEY = 'FYTSTF75mesLeO85VFSKvqgWEzdL0hQAYCZUtjJk';\n\nconst decodeDataSource = (dataSourceCode) => ({\n  BOTH: encodeURIComponent(''),\n  STANDARD_REFERENCE: encodeURIComponent('Standard Reference'),\n  BRANDED_FOOD_PRODUCTS: encodeURIComponent('Branded Food Products'),\n}[dataSourceCode]);\n\nconst searchEpic = (action$, state$) => action$.pipe(\n  ofType(SEARCH),\n  debounceTime(500),\n  filter(action => state$.value.app.searchQuery !== ''),\n  tap(console.log(state$.value)),\n  mergeMap(action =>\n    ajax.getJSON(`https://api.nal.usda.gov/ndb/search?api_key=${USDA_API_KEY}&q=${encodeURIComponent(state$.value.app.searchQuery)}&ds=${decodeDataSource(state$.value.app.searchDataSource)}`).pipe(\n      map(response => response.errors ? searchRejected(response) : searchFulfilled(response)),\n      catchError(error => of({\n        type: SEARCH_REJECTED,\n        payload: error.xhr.response,\n        error: true\n      }))\n    )\n  )\n);\n\nconst getReportEpic = action$ => action$.pipe(\n  ofType(GET_REPORT),\n  debounceTime(500),\n  mergeMap(action =>\n    ajax.getJSON(`https://api.nal.usda.gov/ndb/V2/reports?api_key=${USDA_API_KEY}&ndbno=${encodeURIComponent(action.payload)}`).pipe(\n      map(response => response.foods[0].error ? getReportRejected(response) : getReportFulfilled(response.foods[0].food)),\n      catchError(error => of({\n        type: GET_REPORT_REJECTED,\n        payload: error.xhr.response,\n        error: true\n      }))\n    )\n  )\n);\n\nconst rootEpic = combineEpics(searchEpic, getReportEpic);\nexport default rootEpic;","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport rootReducer from './rootReducer.js';\nimport rootEpic from './rootEpic.js';\n\nconst epicMiddleware = createEpicMiddleware();\nexport const history = createBrowserHistory({basename: process.env.PUBLIC_URL + '/'});\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    rootReducer(history),\n    preloadedState,\n    compose(applyMiddleware(routerMiddleware(history), epicMiddleware))\n  );\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store, { history } from './store.js';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\n\nReactDOM.render(\n  <Provider store={store()}>\n    <ConnectedRouter history={history}>\n      <App/>\n    </ConnectedRouter>\n  </Provider>\n  , document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}