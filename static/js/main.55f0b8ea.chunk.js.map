{"version":3,"sources":["Search/SearchResultItem.js","Search/SearchResult.js","actions.js","actionTypes.js","usda.js","Search/SearchBar.js","Logo.js","Search/SearchPage.js","Report/NutrientsTable.js","Report/Report.js","Report/Breadcrumbs.js","Report/Analysis.js","Report/ReportPage.js","App.js","serviceWorker.js","rootReducer.js","rootEpic.js","store.js","index.js"],"names":["SearchResultItem","className","to","this","props","item","ndbno","name","manu","ds","Component","SearchResult","handleItemClick","event","push","target","value","bind","items","sortBy","result","list","query","q","start","end","Number","total","map","index","key","mapDispatchToProps","connect","state","setQuery","type","payload","search","groupOrder","compareNutrients","a","b","indexOf","group","dataSourceIdentifierLookup","BOTH","STANDARD_REFERENCE","BRANDED_FOOD_PRODUCTS","dataSourceIdentifiers","Object","keys","decodeDataSourceIdentifier","identifier","SearchBar","handleInputChange","searchQuery","handleDataSourceChange","setDataSource","onChange","autoFocus","checked","searchDataSource","dataSource","app","Logo","SearchPage","urlParams","URLSearchParams","window","location","has","get","searching","error","errors","style","color","message","searchResult","searchError","NutrientTable","nutrients","nutrient","unit","Report","nutrientGroups","groupBy","groupByNutrientGroup","sort","sortNutrientsByGroup","report","groupKey","Breadcrumbs","fragments","split","fragment","pathname","slice","join","Analysis","JSON","stringify","ReportPage","urlNDBNO","match","params","getReport","loaded","filter","e","isUndefined","getReportResult","App","path","exact","component","Boolean","hostname","initialState","appReducer","console","log","undefined","getReportNDBNO","gettingReport","getReportError","history","combineReducers","router","connectRouter","USDA_API_KEY","rootEpic","combineEpics","action$","state$","pipe","ofType","debounceTime","action","tap","mergeMap","ajax","getJSON","encodeURIComponent","dataSourceCode","response","searchFulfilled","catchError","of","xhr","foods","getReportFulfilled","food","epicMiddleware","createEpicMiddleware","createBrowserHistory","basename","process","ReactDOM","render","store","preloadedState","createStore","rootReducer","compose","applyMiddleware","routerMiddleware","run","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55f0b8ea.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass SearchResultItem extends Component {\n  render() {\n    return (\n      <div className=\"SearchResultItem\">\n        <Link to={`/report/${this.props.item.ndbno}`}><h3>{this.props.item.name}</h3></Link>\n        <div className=\"SearchResultItem-meta\">\n          <span className=\"SearchResultItem-metaDescriptor\"><strong>ndbno: </strong>{this.props.item.ndbno}</span>\n          <span className=\"SearchResultItem-metaDescriptor\"><strong>Manufacturer: </strong>{this.props.item.manu}</span>\n          <span className=\"SearchResultItem-metaDescriptor\"><strong>Data Source: </strong>{this.props.item.ds}</span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SearchResultItem;\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { push } from 'connected-react-router';\nimport { sortBy } from 'lodash';\nimport SearchResultItem from './SearchResultItem';\n\nclass SearchResult extends Component {\n  constructor(props) {\n    super(props);\n    this.handleItemClick = this.handleItemClick.bind(this);\n  }\n  \n  handleItemClick = (event) => {\n    this.props.push(`/report/${event.target.value}`);\n  }\n  \n  render() {\n    let items = sortBy(this.props.result.list.item, 'name');\n    let query = this.props.result.list.q;\n    let ds = this.props.result.list.ds;\n    let start = this.props.result.list.start + 1;\n    let end = Number(this.props.result.list.end);\n    let total = this.props.result.list.total;\n\n    return (\n      <div className=\"SearchResult\">\n        <div className=\"SearchResult-descriptor\">Result for \"{query}\" in \"{ds}\" ({start} to {end} of {total}):</div>\n        <ul>\n          {items.map((item, index) => <li key={index}><SearchResultItem item={item}></SearchResultItem></li>)}\n        </ul>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = {\n  push\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResult)\n","import { SEARCH, SEARCH_FULFILLED, SEARCH_REJECTED, GET_REPORT, GET_REPORT_FULFILLED, GET_REPORT_REJECTED, SET_QUERY, SET_DATA_SOURCE } from './actionTypes';\n\nexport const setQuery = (query) => ({type: SET_QUERY, payload: query });\nexport const setDataSource = (dataSource) => ({type: SET_DATA_SOURCE, payload: dataSource });\nexport const search = () => ({type: SEARCH });\nexport const searchFulfilled = (result) => ({type: SEARCH_FULFILLED, payload: result });\nexport const searchRejected = (result) => ({type: SEARCH_REJECTED, payload: result });\nexport const getReport = (ndbno) => ({type: GET_REPORT, payload: ndbno });\nexport const getReportFulfilled = (result) => ({type: GET_REPORT_FULFILLED, payload: result });\nexport const getReportRejected = (result) => ({type: GET_REPORT_REJECTED, payload: result });","export const SET_QUERY = 'SET_QUERY';\nexport const SET_DATA_SOURCE = 'SET_DATA_SOURCE';\nexport const SEARCH = 'SEARCH';\nexport const SEARCH_FULFILLED = 'SEARCH_FULFILLED';\nexport const SEARCH_REJECTED = 'SEARCH_REJECTED';\nexport const GET_REPORT = 'GET_REPORT';\nexport const GET_REPORT_FULFILLED = 'GET_REPORT_FULFILLED';\nexport const GET_REPORT_REJECTED = 'GET_REPORT_REJECTED';","import { groupBy } from 'lodash';\n\n\nexport const groupOrder = ['Proximates', 'Vitamins', 'Minerals', 'Lipids', 'Other'];\n\nexport const sortNutrientsByGroup = (nutrients) => {\n  return nutrients.sort(compareNutrients);\n}\n\nexport const compareNutrients = (a, b) => {\n  return groupOrder.indexOf(a.group) - groupOrder.indexOf(b.group) ;\n}\n\nexport const groupByNutrientGroup = (nutrients) => groupBy(nutrients, 'group');\n\nexport const dataSourceIdentifierLookup = {\n  BOTH: \"Any\",\n  STANDARD_REFERENCE: \"Standard Reference\",\n  BRANDED_FOOD_PRODUCTS: \"Branded Food Products\",\n}\n\nexport const dataSourceIdentifiers = Object.keys(dataSourceIdentifierLookup);\n\nexport const decodeDataSourceIdentifier = (identifier) => (dataSourceIdentifierLookup[identifier])","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setQuery, setDataSource, search } from '../actions';\nimport { dataSourceIdentifiers, decodeDataSourceIdentifier } from '../usda';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleDataSourceChange = this.handleDataSourceChange.bind(this);\n  }\n  \n  handleInputChange = (event) => {\n    this.props.setQuery(event.target.value);\n    if (this.props.searchQuery) this.props.search();\n  }\n  \n  handleDataSourceChange = (event) => {\n    this.props.setDataSource(event.target.value);\n    if (this.props.searchQuery) this.props.search();\n  }\n\n  render() {\n\n    return (\n      <div className=\"SearchBar\">\n        <label><input type=\"text\" className=\"queryInput\" value={this.props.searchQuery} onChange={this.handleInputChange} autoFocus/></label><br/>\n        Data Source:&nbsp;\n        {dataSourceIdentifiers.map(identifier => (\n          <label className=\"dataSourceInputLabel\" key={identifier}>\n            <input type=\"radio\" className=\"dataSourceInput\" value={identifier} checked={this.props.searchDataSource === identifier} onChange={this.handleDataSourceChange}></input>\n            {decodeDataSourceIdentifier(identifier)}\n          </label>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searchQuery: state.app.searchQuery,\n  searchDataSource: state.app.searchDataSource\n});\n\nconst mapDispatchToProps = {\n  setQuery,\n  setDataSource,\n  search\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Logo extends Component {\n  render() {\n    return (\n      <div className=\"Logo\">\n        <Link to=\"/search\"><h1>USDA</h1></Link>\n      </div>\n    )\n  }\n}\n\nexport default Logo;\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport SearchResult from './SearchResult';\nimport SearchBar from './SearchBar';\nimport { setQuery, search } from '../actions';\nimport Logo from '../Logo';\nimport { decodeDataSourceIdentifier } from '../usda';\n\nclass SearchPage extends Component {\n  constructor(props) {\n    super(props);\n    let urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.has('dataSource')) {\n      this.props.setQuery(urlParams.get('dataSource'));\n    }\n    if (urlParams.has('query')) {\n      this.props.setQuery(urlParams.get('query'));\n      this.props.search();\n    } else {\n      this.props.setQuery('');\n    }\n  }\n  \n\n  render() {\n    let result = this.props.searching\n      ? <span>Searching for \"{this.props.query}\" in {decodeDataSourceIdentifier(this.props.dataSource)}...</span>\n      : this.props.error\n        ? this.props.error.errors.error.map((error, index) => <div key={index} style={{color: \"red\"}}>{error.message}</div>)\n        : this.props.result\n          ? <SearchResult result={this.props.result}/>\n          : null\n\n    return (\n      <div className=\"SearchPage\">\n        <div className=\"header\">\n          <Logo/>\n          <SearchBar/>\n        </div>\n        <hr/>\n        <div className=\"ResultContainer\">\n          {result}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searching: state.app.searching,\n  query: state.app.searchQuery,\n  dataSource: state.app.searchDataSource,\n  result: state.app.searchResult,\n  // items: get(state.app.searchResult, 'list.item'),\n  error: state.app.searchError\n})\n\nconst mapDispatchToProps = {\n  setQuery,\n  search\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nexport class NutrientTable extends Component {\n  render() {\n    return (\n      <div className=\"NutrientTable\">\n        <h2>{this.props.name}</h2>\n        <table>\n          <thead>\n            <tr>\n              {/* <td>id</td> */}\n              <td>Name</td>\n              {/* <td>Group</td> */}\n              <td className=\"val\">Per 100 g</td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.nutrients.map((nutrient, index) => (\n              <tr key={index}>\n                {/* <td>{nutrient.nutrient_id}</td> */}\n                <td>{nutrient.name}</td>\n                {/* <td>{nutrient.group}</td> */}\n                <td className=\"val\">{`${nutrient.value} ${nutrient.unit}`}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  \n})\n\nconst mapDispatchToProps = {\n  \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NutrientTable)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { sortNutrientsByGroup, groupByNutrientGroup } from '../usda';\nimport { NutrientTable } from './NutrientsTable';\n\nclass Report extends Component {\n  render() {\n    let nutrients = sortNutrientsByGroup(this.props.report.nutrients);\n    let nutrientGroups = groupByNutrientGroup(nutrients);\n\n    return (\n      <div className=\"Report\">\n        {Object.keys(nutrientGroups).map((groupKey, index) => <NutrientTable nutrients={nutrientGroups[groupKey]} name={groupKey} key={index}/>)}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Report)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass Breadcrumbs extends Component {\n  render() {\n    let fragments = this.props.name.split(', ');\n    return (\n      <div className=\"Breadcrumbs\">\n        {fragments.map((fragment, index, fragments) => \n          <span key={index}>\n            &nbsp;/&nbsp;\n            <Link to={{pathname: \"/search\", search: `?query=${fragments.slice(0, index + 1).join(', ')}&dataSource=${this.props.dataSource}`}} className=\"Breadcrumbs-item\">\n              {fragment}\n            </Link>\n          </span>\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  dataSource: state.app.searchDataSource\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Breadcrumbs)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nclass Analysis extends Component {\n  render() {\n    return (\n      <div className=\"Analysis\">\n        <pre><code>{JSON.stringify(this.props.report, null, 2)}</code></pre>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  \n})\n\nconst mapDispatchToProps = {\n  \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Analysis)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Report from './Report';\nimport { getReport } from '../actions';\nimport Breadcrumbs from './Breadcrumbs';\nimport { get, isUndefined } from 'lodash';\nimport { Link } from \"react-router-dom\";\nimport Analysis from './Analysis';\n\nclass ReportPage extends Component {\n  constructor(props) {\n    super(props);\n    this.urlNDBNO = this.props.match.params.ndbno;\n    this.props.getReport(this.urlNDBNO);\n  }\n\n\n  render() {\n    return (\n      <div className=\"ReportPage\">\n        <Link to=\"/search/\">&#8592; New Search</Link>\n        <h1>\n          {this.props.loaded ? `${this.props.name}` : `Loading report for ndbno ${this.urlNDBNO}`}<br/>\n          {this.props.loaded && <small>{[this.props.ds, this.props.manu, this.props.ndbno].filter(e=>e).join(\" · \")}</small>}\n        </h1>\n        {this.props.loaded && <Breadcrumbs name={this.props.name}/>}\n        {this.props.loaded && <div className=\"ReportPage-container\">\n          <div className=\"ReportPage-report\">\n            <Report report={this.props.report}/>\n          </div>\n          {/* <div className=\"ReportPage-analysis\">\n            <Analysis report={this.props.report}/>\n          </div> */}\n        </div>}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loaded: !isUndefined(state.app.getReportResult),\n  report: state.app.getReportResult,\n  name: get(state.app.getReportResult, 'desc.name'),\n  ds: get(state.app.getReportResult, 'desc.ds'),\n  manu: get(state.app.getReportResult, 'desc.manu'),\n  ndbno: get(state.app.getReportResult, 'desc.ndbno'),\n})\n\nconst mapDispatchToProps = {\n  getReport\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportPage)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport SearchPage from './Search/SearchPage';\nimport ReportPage from './Report/ReportPage';\n\nexport class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={SearchPage}/>\n          <Route path=\"/search\" component={SearchPage}/>\n          <Route path=\"/report/:ndbno\" component={ReportPage}/>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = {\n  \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SEARCH, SEARCH_FULFILLED, SEARCH_REJECTED, GET_REPORT, GET_REPORT_FULFILLED, GET_REPORT_REJECTED, SET_QUERY, SET_DATA_SOURCE } from \"./actionTypes\";\nimport { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nconst initialState = {\n  searching: false,\n  searchQuery: '',\n  searchDataSource: 'STANDARD_REFERENCE'\n}\n\nconst appReducer = (state = initialState, { type, payload }) => {\n  console.log(type, payload)\n  switch (type) {\n\n  case SET_QUERY:\n    return { ...state, searchQuery: payload, searchResult: undefined, searchError: undefined };\n\n  case SET_DATA_SOURCE:\n    return { ...state, searchDataSource: payload, searchResult: undefined, searchError: undefined };\n\n  case SEARCH:\n    if (state.searchQuery === '') {\n      return { ...state, searching: false, searchResult: undefined, searchError: undefined };\n    } else {\n      return { ...state, searching: true, searchResult: undefined, searchError: undefined };\n    }\n\n  case SEARCH_FULFILLED:\n    return { ...state, searchResult: payload, searching: false };\n    \n  case SEARCH_REJECTED:\n    return { ...state, searchError: payload, searching: false };\n\n  case GET_REPORT:\n    return { ...state, getReportNDBNO: payload, gettingReport: true, getReportResult: undefined, getReportError: undefined };\n\n  case GET_REPORT_FULFILLED:\n    return { ...state, getReportResult: payload, gettingReport: false, getReportNDBNO: undefined };\n    \n  case GET_REPORT_REJECTED:\n    return { ...state, getReportError: payload, gettingReport: false, getReportNDBNO: undefined };\n\n  default:\n    return state\n  }\n}\n\nexport default (history) => combineReducers({\n  router: connectRouter(history),\n  app: appReducer\n});","import { ajax } from 'rxjs/ajax';\nimport { mergeMap, map, catchError, debounceTime, filter, tap } from 'rxjs/operators';\nimport { ofType, combineEpics } from 'redux-observable';\nimport { SEARCH, SEARCH_REJECTED, GET_REPORT, GET_REPORT_REJECTED } from './actionTypes';\nimport { searchFulfilled, searchRejected, getReportRejected, getReportFulfilled } from './actions';\nimport { of } from 'rxjs';\n\nconst USDA_API_KEY = 'FYTSTF75mesLeO85VFSKvqgWEzdL0hQAYCZUtjJk';\n\nconst decodeDataSource = (dataSourceCode) => ({\n  BOTH: encodeURIComponent(''),\n  STANDARD_REFERENCE: encodeURIComponent('Standard Reference'),\n  BRANDED_FOOD_PRODUCTS: encodeURIComponent('Branded Food Products'),\n}[dataSourceCode]);\n\nconst searchEpic = (action$, state$) => action$.pipe(\n  ofType(SEARCH),\n  debounceTime(500),\n  filter(action => state$.value.app.searchQuery !== ''),\n  tap(console.log(state$.value)),\n  mergeMap(action =>\n    ajax.getJSON(`https://api.nal.usda.gov/ndb/search?api_key=${USDA_API_KEY}&q=${encodeURIComponent(state$.value.app.searchQuery)}&ds=${decodeDataSource(state$.value.app.searchDataSource)}`).pipe(\n      map(response => response.errors ? searchRejected(response) : searchFulfilled(response)),\n      catchError(error => of({\n        type: SEARCH_REJECTED,\n        payload: error.xhr.response,\n        error: true\n      }))\n    )\n  )\n);\n\nconst getReportEpic = action$ => action$.pipe(\n  ofType(GET_REPORT),\n  debounceTime(500),\n  mergeMap(action =>\n    ajax.getJSON(`https://api.nal.usda.gov/ndb/V2/reports?api_key=${USDA_API_KEY}&ndbno=${encodeURIComponent(action.payload)}`).pipe(\n      map(response => response.foods[0].error ? getReportRejected(response) : getReportFulfilled(response.foods[0].food)),\n      catchError(error => of({\n        type: GET_REPORT_REJECTED,\n        payload: error.xhr.response,\n        error: true\n      }))\n    )\n  )\n);\n\nconst rootEpic = combineEpics(searchEpic, getReportEpic);\nexport default rootEpic;","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport rootReducer from './rootReducer.js';\nimport rootEpic from './rootEpic.js';\n\nconst epicMiddleware = createEpicMiddleware();\nexport const history = createBrowserHistory({basename: process.env.PUBLIC_URL + '/'});\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    rootReducer(history),\n    preloadedState,\n    compose(applyMiddleware(routerMiddleware(history), epicMiddleware))\n  );\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store, { history } from './store.js';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\n\nReactDOM.render(\n  <Provider store={store()}>\n    <ConnectedRouter history={history}>\n      <App/>\n    </ConnectedRouter>\n  </Provider>\n  , document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}