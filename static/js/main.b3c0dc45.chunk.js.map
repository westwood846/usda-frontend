{"version":3,"sources":["SearchResult.js","actions.js","actionTypes.js","SearchBar.js","SearchPage.js","Report.js","Breadcrumbs.js","ReportPage.js","App.js","serviceWorker.js","rootReducer.js","rootEpic.js","store.js","index.js"],"names":["SearchResult","props","handleItemClick","event","push","target","value","bind","items","sortBy","this","result","list","item","query","q","ds","start","end","Number","total","className","map","index","key","onClick","ndbno","name","Component","mapDispatchToProps","connect","state","search","type","payload","SearchBar","handleInputChange","searchQuery","onChange","app","SearchPage","urlParams","URLSearchParams","window","location","has","get","searching","error","JSON","stringify","searchResult","searchError","Report","report","nutrients","nutrient","nutrient_id","group","unit","Breadcrumbs","fragments","split","fragment","to","pathname","slice","join","ReportPage","urlNDBNO","match","params","getReport","loaded","manu","filter","e","isUndefined","getReportResult","App","path","exact","component","Boolean","hostname","initialState","appReducer","console","log","undefined","getReportNDBNO","gettingReport","getReportError","history","combineReducers","router","connectRouter","USDA_API_KEY","rootEpic","combineEpics","action$","pipe","ofType","debounceTime","action","mergeMap","ajax","getJSON","encodeURIComponent","response","errors","searchFulfilled","catchError","of","xhr","foods","getReportFulfilled","food","epicMiddleware","createEpicMiddleware","createBrowserHistory","basename","process","ReactDOM","render","store","preloadedState","createStore","rootReducer","compose","applyMiddleware","routerMiddleware","run","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b3c0dc45.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { push } from 'connected-react-router';\nimport { sortBy } from 'lodash';\n\nclass SearchResult extends Component {\n  constructor(props) {\n    super(props);\n    this.handleItemClick = this.handleItemClick.bind(this);\n  }\n  \n  handleItemClick = (event) => {\n    this.props.push(`/report/${event.target.value}`);\n  }\n  \n  render() {\n    let items = sortBy(this.props.result.list.item, 'name');\n    let query = this.props.result.list.q;\n    let ds = this.props.result.list.ds;\n    let start = this.props.result.list.start;\n    let end = Number(this.props.result.list.end) - 1;\n    let total = this.props.result.list.total;\n\n    return (\n      <div className=\"SearchResult\">\n        <div>Result for \"{query}\" in \"{ds}\" ({start} to {end} of {total}):</div>\n        <ul>\n          {items.map((item, index) => <li key={index}><button onClick={this.handleItemClick} value={item.ndbno}>{item.name}</button></li>)}\n        </ul>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = {\n  push\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResult)\n","import { SEARCH, SEARCH_FULFILLED, SEARCH_REJECTED, GET_REPORT, GET_REPORT_FULFILLED, GET_REPORT_REJECTED } from './actionTypes';\n\nexport const search = (query) => ({type: SEARCH, payload: query });\nexport const searchFulfilled = (result) => ({type: SEARCH_FULFILLED, payload: result });\nexport const searchRejected = (result) => ({type: SEARCH_REJECTED, payload: result });\nexport const getReport = (ndbno) => ({type: GET_REPORT, payload: ndbno });\nexport const getReportFulfilled = (result) => ({type: GET_REPORT_FULFILLED, payload: result });\nexport const getReportRejected = (result) => ({type: GET_REPORT_REJECTED, payload: result });","export const SEARCH = 'SEARCH';\nexport const SEARCH_FULFILLED = 'SEARCH_FULFILLED';\nexport const SEARCH_REJECTED = 'SEARCH_REJECTED';\nexport const GET_REPORT = 'GET_REPORT';\nexport const GET_REPORT_FULFILLED = 'GET_REPORT_FULFILLED';\nexport const GET_REPORT_REJECTED = 'GET_REPORT_REJECTED';","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { search } from './actions';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n  \n  handleInputChange = (event) => {\n    this.props.search(event.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <label>Search: <input type=\"text\" value={this.props.searchQuery} onChange={this.handleInputChange}/></label>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searchQuery: state.app.searchQuery\n});\n\nconst mapDispatchToProps = {\n  search\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport SearchResult from './SearchResult';\nimport SearchBar from './SearchBar';\nimport { search } from './actions';\nimport { get } from 'lodash';\n\nclass SearchPage extends Component {\n  constructor(props) {\n    super(props);\n    let urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.has('query')) {\n      this.props.search(urlParams.get('query'));\n    } else {\n      this.props.search('');\n    }\n  }\n  \n\n  render() {\n    let result = this.props.searching\n      ? <span>Searching for \"{this.props.query}\"...</span>\n      : this.props.error\n        ? <pre><code>{JSON.stringify(this.props.error, null, 2)}</code></pre>\n        : this.props.result\n          ? <SearchResult result={this.props.result}/>\n          : null\n\n    // <div>Result for \"{this.props.searchResult.q}\" in \"{this.props.searchResult.ds}\" ({this.props.searchResult.start} to {this.props.searchResult.end} of {this.props.searchResult.total}):</div>\n\n    return (\n      <div className=\"SearchPage\">\n        <h1>Search USDA API</h1>\n        <SearchBar/>\n        {result}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searching: state.app.searching,\n  query: state.app.searchQuery,\n  result: state.app.searchResult,\n  // items: get(state.app.searchResult, 'list.item'),\n  error: state.app.searchError\n})\n\nconst mapDispatchToProps = {\n  search\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nclass Report extends Component {\n  render() {\n    return (\n      <div className=\"Report\">\n        <table>\n          <thead>\n            <tr>\n              <td>id</td>\n              <td>Name</td>\n              <td>Group</td>\n              <td>Per 100 g</td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.report.nutrients.map((nutrient, index) => (\n              <tr key={index}>\n                <td>{nutrient.nutrient_id}</td>\n                <td>{nutrient.name}</td>\n                <td>{nutrient.group}</td>\n                <td>{`${nutrient.value} ${nutrient.unit}`}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Report)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass Breadcrumbs extends Component {\n  render() {\n    let fragments = this.props.name.split(', ');\n    return (\n      <div className=\"Breadcrumbs\">\n        {fragments.map((fragment, index, fragments) => \n          <span key={index}>\n            &nbsp;/&nbsp;\n            <Link to={{pathname: \"/search\", search: `?query=${fragments.slice(0, index + 1).join(', ')}`}} className=\"Breadcrumbs-item\">\n              {fragment}\n            </Link>\n          </span>\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Breadcrumbs)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Report from './Report';\nimport { getReport } from './actions';\nimport Breadcrumbs from './Breadcrumbs';\nimport { get, isUndefined } from 'lodash';\nimport { Link } from \"react-router-dom\";\n\nclass ReportPage extends Component {\n  constructor(props) {\n    super(props);\n    this.urlNDBNO = this.props.match.params.ndbno;\n    this.props.getReport(this.urlNDBNO);\n  }\n\n\n  render() {\n    return (\n      <div className=\"ReportPage\">\n        <Link to=\"/search/\">&#8592; New Search</Link>\n        <h1>\n          {this.props.loaded ? `${this.props.name}` : `Loading report for ndbno ${this.urlNDBNO}`}<br/>\n          {this.props.loaded && <small>{[this.props.ds, this.props.manu, this.props.ndbno].filter(e=>e).join(\" · \")}</small>}\n        </h1>\n        {this.props.loaded && <Breadcrumbs name={this.props.name}/>}\n        {this.props.loaded && <Report report={this.props.report}/>}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loaded: !isUndefined(state.app.getReportResult),\n  report: state.app.getReportResult,\n  name: get(state.app.getReportResult, 'desc.name'),\n  ds: get(state.app.getReportResult, 'desc.ds'),\n  manu: get(state.app.getReportResult, 'desc.manu'),\n  ndbno: get(state.app.getReportResult, 'desc.ndbno'),\n})\n\nconst mapDispatchToProps = {\n  getReport\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportPage)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport SearchPage from './SearchPage';\nimport ReportPage from './ReportPage';\n\nexport class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={SearchPage}/>\n          <Route path=\"/search\" component={SearchPage}/>\n          <Route path=\"/report/:ndbno\" component={ReportPage}/>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = {\n  \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SEARCH, SEARCH_FULFILLED, SEARCH_REJECTED, GET_REPORT, GET_REPORT_FULFILLED, GET_REPORT_REJECTED } from \"./actionTypes\";\nimport { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nconst initialState = {\n  searching: false\n}\n\nconst appReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n\n  case SEARCH:\n    console.log(type, payload)\n    if (payload === '') {\n      return { ...state, searchQuery: payload, searching: false, searchResult: undefined, searchError: undefined };\n    } else {\n      return { ...state, searchQuery: payload, searching: true, searchResult: undefined, searchError: undefined };\n    }\n\n  case SEARCH_FULFILLED:\n    console.log(type, payload)\n    return { ...state, searchResult: payload, searching: false };\n    \n  case SEARCH_REJECTED:\n    console.log(type, payload)\n    return { ...state, searchError: payload, searching: false };\n\n  case GET_REPORT:\n    console.log(type, payload)\n    return { ...state, getReportNDBNO: payload, gettingReport: true, getReportResult: undefined, getReportError: undefined };\n\n  case GET_REPORT_FULFILLED:\n    console.log(type, payload)\n    return { ...state, getReportResult: payload, gettingReport: false, getReportNDBNO: undefined };\n    \n  case GET_REPORT_REJECTED:\n    console.log(type, payload)\n    return { ...state, getReportError: payload, gettingReport: false, getReportNDBNO: undefined };\n\n  default:\n    return state\n  }\n}\n\nexport default (history) => combineReducers({\n  router: connectRouter(history),\n  app: appReducer\n});","import { ajax } from 'rxjs/ajax';\nimport { mergeMap, map, catchError, debounceTime, filter } from 'rxjs/operators';\nimport { ofType, combineEpics } from 'redux-observable';\nimport { SEARCH, SEARCH_REJECTED, GET_REPORT, GET_REPORT_REJECTED } from './actionTypes';\nimport { searchFulfilled, searchRejected, getReportRejected, getReportFulfilled } from './actions';\nimport { of } from 'rxjs';\n\nconst USDA_API_KEY = 'FYTSTF75mesLeO85VFSKvqgWEzdL0hQAYCZUtjJk';\n\nconst searchEpic = action$ => action$.pipe(\n  ofType(SEARCH),\n  debounceTime(500),\n  filter(action => action.payload !== ''),\n  mergeMap(action =>\n    ajax.getJSON(`https://api.nal.usda.gov/ndb/search?api_key=${USDA_API_KEY}&q=${encodeURIComponent(action.payload)}&ds=${encodeURIComponent('Standard Reference')}`).pipe(\n      map(response => response.errors ? searchRejected(response) : searchFulfilled(response)),\n      catchError(error => of({\n        type: SEARCH_REJECTED,\n        payload: error.xhr.response,\n        error: true\n      }))\n    )\n  )\n);\n\nconst getReportEpic = action$ => action$.pipe(\n  ofType(GET_REPORT),\n  debounceTime(500),\n  mergeMap(action =>\n    ajax.getJSON(`https://api.nal.usda.gov/ndb/V2/reports?api_key=${USDA_API_KEY}&ndbno=${encodeURIComponent(action.payload)}`).pipe(\n      map(response => response.foods[0].error ? getReportRejected(response) : getReportFulfilled(response.foods[0].food)),\n      catchError(error => of({\n        type: GET_REPORT_REJECTED,\n        payload: error.xhr.response,\n        error: true\n      }))\n    )\n  )\n);\n\nconst rootEpic = combineEpics(searchEpic, getReportEpic);\nexport default rootEpic;","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport rootReducer from './rootReducer.js';\nimport rootEpic from './rootEpic.js';\n\nconst epicMiddleware = createEpicMiddleware();\nexport const history = createBrowserHistory({basename: process.env.PUBLIC_URL + '/'});\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    rootReducer(history),\n    preloadedState,\n    compose(applyMiddleware(routerMiddleware(history), epicMiddleware))\n  );\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store, { history } from './store.js';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\n\nReactDOM.render(\n  <Provider store={store()}>\n    <ConnectedRouter history={history}>\n      <App/>\n    </ConnectedRouter>\n  </Provider>\n  , document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}